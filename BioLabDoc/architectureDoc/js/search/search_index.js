var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractTransformPipe.html",[0,0.299,1,3.202]],["body/classes/AbstractTransformPipe.html",[0,0.341,1,4.785,2,0.556,3,0.12,4,0.12,5,0.085,6,7.163,7,4.326,8,4.011,9,7.196,10,0.235,11,2.158,12,7.163,13,6.722,14,3.236,15,5.675,16,5.675,17,5.675,18,6.119,19,5.675,20,0.536,21,4.916,22,2.582,23,0.01,24,0.8,25,5.675,26,4.916,27,2.702,28,0.919,29,0.49,30,2.556,31,3.697,32,2.416,33,5.675,34,6.119,35,6.722,36,4.916,37,6.722,38,5.675,39,4.916,40,5.675,41,4.916,42,0.145,43,1.33,44,0.12,45,2.202,46,3.058,47,2.564,48,3.058,49,4.916,50,4.916,51,4.916,52,6.448,53,4.916,54,4.916,55,1.842,56,4.916,57,3.223,58,4.916,59,0.005,60,0.007,61,0.005]],["title/classes/AddOrderDto.html",[0,0.299,62,2.998]],["body/classes/AddOrderDto.html",[0,0.406,2,0.662,3,0.143,4,0.143,5,0.101,10,0.28,20,0.528,23,0.01,29,0.516,42,0.212,44,0.143,59,0.007,60,0.008,61,0.007,62,5.008,63,7.169,64,5.154,65,0.922,66,3.104,67,7.808,68,5.793,69,1.204,70,1.633,71,3.303,72,1.736,73,5.857,74,5.857,75,6.207,76,5.857,77,3.446,78,1.96,79,2.94,80,5.857,81,3.201]],["title/classes/AddResidentCompanyPayload.html",[0,0.299,82,3.202]],["body/classes/AddResidentCompanyPayload.html",[0,0.262,2,0.268,3,0.058,4,0.058,5,0.041,10,0.113,20,0.574,23,0.01,24,1.058,28,0.568,29,0.525,32,1.416,42,0.159,44,0.058,47,1.971,59,0.003,60,0.004,61,0.003,65,0.483,69,1.22,70,1.778,71,3.596,72,1.838,77,3.607,78,0.792,81,3.485,82,2.804,83,3.496,84,7.504,85,3.506,86,1.645,87,3.778,88,3.778,89,3.778,90,3.778,91,1.876,92,3.778,93,3.778,94,3.778,95,3.778,96,2.672,97,3.5,98,3.778,99,3.778,100,3.778,101,2.672,102,3.778,103,3.778,104,3.778,105,3.778,106,3.778,107,3.778,108,3.778,109,3.778,110,3.778,111,2.13,112,2.461,113,3.278,114,3.778,115,2.386,116,2.959,117,2.367,118,2.367,119,4.717,120,6.274,121,2.367,122,3.779,123,2.367,124,2.367,125,1.896,126,2.083,127,5.385,128,2.367,129,2.367,130,2.367,131,2.367,132,2.367,133,2.367,134,2.367,135,2.367,136,2.083,137,2.367,138,2.367,139,2.367,140,3.326,141,2.367,142,2.367,143,2.367,144,3.779,145,3.779,146,2.083,147,2.367,148,2.367,149,2.083,150,3.779,151,2.367,152,2.367,153,2.367,154,2.367,155,2.367,156,2.367,157,2.367,158,3.779,159,2.367,160,2.367,161,2.367,162,2.083,163,2.367,164,2.626,165,4.317,166,2.478,167,3.278,168,2.367,169,1.896,170,2.083,171,1.896,172,1.645,173,2.083,174,1.034,175,1.472,176,2.083,177,1.645,178,2.083,179,2.367,180,6.274,181,2.367,182,5.385,183,4.314,184,4.717,185,3.326,186,2.367,187,2.367,188,4.715,189,2.367,190,2.367]],["title/classes/AddUserPayload.html",[0,0.299,191,3.202]],["body/classes/AddUserPayload.html",[0,0.282,2,0.46,3,0.1,4,0.1,5,0.07,10,0.194,20,0.571,23,0.01,24,1.075,29,0.526,42,0.219,44,0.1,59,0.005,60,0.006,61,0.005,65,0.725,66,2.596,69,1.137,70,1.767,71,3.574,72,1.766,77,3.601,81,3.464,91,2.596,115,2.556,116,2.575,125,3.256,164,3.939,166,4.28,167,3.939,174,1.776,175,2.528,191,4.207,192,6.819,193,2.665,194,4.536,195,4.28,196,4.536,197,2.852,198,4.536,199,4.536,200,3.16,201,4.28,202,3.405,203,4.844,204,3.577,205,4.065,206,4.065,207,4.065,208,4.065,209,4.065,210,4.065,211,3.577,212,4.065,213,4.065,214,3.577,215,3.577,216,4.065,217,3.577,218,3.869,219,4.065,220,4.065,221,4.065,222,4.065,223,2.665,224,4.065,225,3.016,226,1.48,227,4.065,228,0.85,229,0.872,230,1.967,231,1.899,232,2.041,233,2.12,234,2.665,235,2.665,236,3.577,237,3.016]],["title/controllers/AppController.html",[238,1.825,239,3.202]],["body/controllers/AppController.html",[0,0.415,3,0.147,4,0.147,5,0.103,10,0.286,11,2.443,20,0.404,22,1.947,23,0.01,42,0.232,43,1.618,44,0.147,45,2.22,59,0.007,60,0.008,61,0.007,70,1.251,78,2.001,238,3.089,239,5.417,240,2.53,241,5.264,242,5.702,243,5.981,244,3.133,245,3.682,246,7.88,247,5.476,248,4.67,249,5.417,250,5.167,251,5.264,252,4.156,253,2.378,254,5.981,255,3.922]],["title/modules/AppModule.html",[256,1.484,257,3.202]],["body/modules/AppModule.html",[0,0.3,3,0.106,4,0.106,5,0.074,23,0.01,29,0.267,42,0.257,43,1.169,44,0.106,45,1.169,55,1.619,59,0.005,60,0.007,61,0.005,72,0.881,197,1.887,239,5.003,240,2.502,242,3.002,250,5.141,251,3.802,256,2.319,257,6.628,258,2.091,259,2.018,260,2.254,261,2.254,262,2.091,263,3.517,264,2.254,265,3.802,266,3.802,267,3.802,268,5.448,269,5.448,270,4.359,271,5.448,272,5.141,273,5.448,274,4.442,275,5.448,276,4.877,277,3.085,278,1.887,279,2.169,280,3.461,281,3.996,282,2.833,283,5.913,284,2.091,285,4.32,286,2.67,287,3.802,288,4.32,289,4.32,290,4.32,291,4.32,292,4.32,293,1.951,294,4.32,295,4.32,296,4.32,297,4.32,298,3.461,299,4.32,300,3.802,301,3.461,302,4.32,303,4.737,304,3.206,305,3.461,306,4.32,307,4.32,308,4.32,309,4.32,310,4.32,311,4.32,312,4.32,313,4.32,314,2.687,315,2.833,316,4.32,317,3.802,318,4.32,319,3.802,320,4.32,321,3.461,322,4.32,323,4.32,324,4.32,325,4.32,326,4.32,327,4.32,328,4.32,329,3.802,330,4.32,331,4.32,332,4.32]],["title/injectables/AppService.html",[250,2.829,333,1.444]],["body/injectables/AppService.html",[0,0.409,3,0.144,4,0.144,5,0.102,10,0.281,11,2.421,20,0.489,22,1.919,23,0.01,24,0.898,27,2.085,28,0.709,29,0.364,30,1.972,42,0.213,43,1.594,44,0.144,45,2.209,59,0.007,60,0.008,61,0.007,242,5.673,244,3.113,245,3.658,250,4.744,252,4.095,286,3.687,333,2.421,334,2.959,335,5.187,336,2.852,337,5.894,338,5.894,339,4.64,340,5.894,341,6.271,342,6.89,343,6.89,344,6.89,345,5.894]],["title/controllers/AuthController.html",[238,1.825,346,3.202]],["body/controllers/AuthController.html",[0,0.22,3,0.078,4,0.078,5,0.055,10,0.151,11,1.584,14,1.883,20,0.425,22,2.048,23,0.01,24,0.78,27,2.226,28,0.757,29,0.491,30,2.105,42,0.216,43,0.857,44,0.078,45,1.702,55,1.187,57,4.8,59,0.004,60,0.005,61,0.004,70,1.316,78,1.06,197,3.288,226,2.992,238,1.34,240,1.34,244,3.547,245,3.763,253,1.883,278,2.477,336,1.533,346,3.513,347,2.788,348,1.971,349,3.168,350,3.407,351,3.793,352,6.217,353,4.167,354,4.735,355,2.538,356,5.241,357,4.908,358,4.694,359,4.735,360,4.735,361,6.624,362,4.682,363,5.67,364,6.624,365,7.527,366,6.291,367,4.461,368,4.461,369,3.168,370,4.563,371,4.542,372,4.382,373,5.087,374,4.461,375,3.168,376,4.908,377,3.168,378,3.168,379,3.168,380,2.788,381,5.241,382,4.735,383,3.168,384,4.542,385,2.477,386,3.168,387,4.735,388,3.168,389,3.168,390,3.717,391,4.188,392,2.077,393,2.351,394,4.002,395,5.065,396,1.971,397,3.717,398,2.571,399,4.735,400,3.168,401,2.077,402,3.168,403,3.168,404,2.351,405,3.168,406,1.966,407,3.168,408,2.941,409,3.168,410,3.168,411,4.99,412,3.168,413,3.168,414,3.168,415,3.168,416,3.168,417,3.168,418,3.168]],["title/modules/AuthModule.html",[256,1.484,268,2.998]],["body/modules/AuthModule.html",[0,0.341,3,0.12,4,0.12,5,0.085,23,0.01,42,0.253,43,1.33,44,0.12,45,1.33,59,0.005,60,0.007,61,0.005,85,2.016,226,1.79,240,2.728,256,2.475,258,2.379,259,2.297,260,2.564,261,2.564,262,2.379,263,3.754,264,3.364,268,6.161,270,4.504,272,5.336,274,4.611,276,5.063,277,3.364,278,2.148,279,2.468,281,4.264,286,2.912,314,3.058,315,3.223,339,2.914,346,5.339,397,5.336,419,4.326,420,4.916,421,4.326,422,5.336,423,4.916,424,3.416,425,2.914,426,3.223,427,2.468,428,4.916,429,4.916,430,4.916,431,4.326,432,2.67,433,4.326,434,4.228,435,4.228,436,3.653,437,3.416,438,3.416,439,3.223,440,3.416,441,3.223,442,3.223,443,3.416]],["title/injectables/AuthService.html",[333,1.444,397,2.829]],["body/injectables/AuthService.html",[0,0.193,3,0.171,4,0.068,5,0.048,10,0.133,11,1.434,14,2.873,20,0.473,22,2.186,23,0.01,24,0.532,27,2.248,28,0.765,29,0.323,30,2.126,42,0.23,43,0.751,44,0.068,45,2.006,47,4.317,48,1.728,55,2.38,59,0.003,60,0.005,61,0.003,85,1.757,111,2.655,197,2.285,226,3.209,229,0.92,230,1.344,231,1.298,232,1.395,242,1.93,244,3.362,245,3.867,253,2.526,278,2.775,286,3.159,293,2.362,303,2.225,304,2.061,305,2.225,333,1.434,334,1.395,336,2.074,339,1.646,350,3.422,351,3.432,355,3.432,357,4.415,358,2.427,370,4.431,372,3.067,374,2.539,376,4.665,385,1.213,390,4.401,391,5.031,394,3.599,397,2.809,398,3.193,404,3.881,408,3.417,425,1.646,431,5.175,432,1.508,441,1.821,442,2.809,444,2.225,445,5.88,446,4.285,447,5.88,448,3.771,449,4.285,450,2.445,451,5.908,452,4.862,453,4.146,454,2.778,455,2.778,456,5.231,457,2.08,458,4.363,459,2.869,460,4.603,461,4.285,462,2.778,463,6.524,464,5.231,465,4.285,466,6.358,467,2.778,468,3.771,469,2.778,470,4.603,471,5.231,472,5.231,473,4.603,474,3.635,475,3.771,476,2.778,477,4.285,478,2.778,479,2.225,480,3.432,481,5.88,482,3.432,483,1.646,484,3.432,485,1.93,486,2.445,487,2.778,488,3.432,489,2.225,490,2.225,491,2.445,492,2.445,493,2.778,494,2.778,495,2.778,496,2.778,497,2.778,498,2.778,499,2.778,500,2.778,501,3.771,502,2.778,503,2.778,504,2.778,505,2.778,506,5.88,507,6.353,508,2.445,509,0.497,510,2.445,511,2.778,512,2.445,513,3.771,514,2.778,515,2.061,516,2.778,517,2.778,518,2.445,519,2.778,520,2.445,521,2.778,522,2.778]],["title/classes/BaseEntity.html",[0,0.299,523,3.456]],["body/classes/BaseEntity.html",[0,0.33,2,0.538,3,0.117,4,0.117,5,0.082,10,0.227,18,3.812,20,0.565,23,0.01,24,1.037,29,0.543,32,3.131,42,0.14,44,0.117,48,3.926,59,0.005,60,0.007,61,0.005,65,0.807,70,1.748,72,1.537,115,1.947,116,2.112,457,2.956,509,1.266,523,5.055,524,4.188,525,7.081,526,4.92,527,7.081,528,7.081,529,7.081,530,7.081,531,7.081,532,4.272,533,1.951,534,6.041,535,2.67,536,4.758,537,6.906,538,8.065,539,2.182,540,8.065,541,4.758,542,6.311,543,4.758,544,4.758,545,4.758,546,4.758,547,4.758,548,2.079,549,4.758,550,1.161,551,1.968,552,1.707,553,1.54,554,0.897,555,6.311]],["title/classes/BiolabsSource.html",[0,0.299,556,2.684]],["body/classes/BiolabsSource.html",[0,0.465,2,0.591,3,0.128,4,0.128,5,0.09,10,0.25,20,0.546,23,0.01,24,0.919,28,0.973,29,0.526,42,0.154,44,0.164,59,0.006,60,0.007,61,0.006,65,0.858,69,1.223,70,1.691,228,1.403,229,1.678,406,1.908,509,1.325,533,2.143,535,2.211,539,1.815,548,2.283,550,1.275,551,1.808,552,1.815,553,1.637,554,0.985,556,4.173,557,6.14,558,3.878,559,1.855,560,2.168,561,1.958,562,5.227,563,3.135,564,5.227,565,3.03,566,2.412,567,5.227,568,2.171,569,2.015,570,5.227,571,5.227,572,1.596,573,1.863,574,4.6,575,3.878]],["title/classes/BiolabsSourceFillableFields.html",[0,0.299,575,3.202]],["body/classes/BiolabsSourceFillableFields.html",[0,0.492,2,0.645,3,0.14,4,0.14,5,0.098,10,0.272,20,0.479,23,0.01,24,0.957,28,0.999,29,0.512,42,0.168,44,0.174,59,0.006,60,0.008,61,0.006,65,0.906,69,1.14,228,1.483,229,1.732,406,1.97,509,1.02,539,1.918,550,1.392,551,1.883,552,1.918,553,1.73,554,1.075,556,3.547,557,5.724,558,4.231,559,1.428,560,1.668,561,1.775,563,2.664,566,2.187,568,2.241,569,1.713,572,1.686,573,1.968,574,5.019,575,5.26,576,5.703,577,5.703]],["title/classes/Category.html",[0,0.299,578,2.684]],["body/classes/Category.html",[0,0.461,2,0.581,3,0.126,4,0.126,5,0.089,10,0.245,20,0.557,23,0.01,24,0.912,28,0.968,29,0.53,42,0.151,44,0.163,59,0.006,60,0.007,61,0.006,65,0.849,69,1.268,70,1.723,228,1.389,229,1.668,406,1.896,509,1.39,533,2.108,535,2.175,539,1.796,548,2.246,550,1.255,551,1.963,552,1.796,553,1.62,554,0.969,559,1.841,560,2.151,561,1.946,563,3.101,565,2.997,566,2.397,568,2.157,569,1.994,572,1.579,573,1.843,578,4.129,579,3.814,580,6.47,581,5.141,582,5.141,583,5.141,584,5.141,585,5.141,586,5.141,587,4.118,588,3.814]],["title/classes/CategoryFillableFields.html",[0,0.299,588,3.202]],["body/classes/CategoryFillableFields.html",[0,0.486,2,0.633,3,0.137,4,0.137,5,0.097,10,0.267,20,0.517,23,0.01,24,0.949,28,0.994,29,0.52,42,0.165,44,0.172,59,0.006,60,0.008,61,0.006,65,0.896,69,1.245,228,1.466,229,1.721,406,1.957,509,1.434,539,1.896,550,1.367,551,1.957,552,1.896,553,1.711,554,1.056,559,1.402,560,1.639,561,1.755,563,2.617,566,2.163,568,2.226,569,1.682,572,1.667,573,1.946,578,3.484,579,4.156,580,4.929,587,4.486,588,5.201,589,5.601,590,5.601,591,5.601]],["title/modules/CommonModule.html",[256,1.484,269,2.998]],["body/modules/CommonModule.html",[0,0.425,3,0.15,4,0.15,5,0.106,23,0.01,42,0.235,43,1.657,44,0.15,59,0.007,60,0.008,61,0.007,256,2.739,258,2.964,259,2.861,260,3.195,261,3.195,262,2.964,263,4.153,264,3.195,269,6.105,277,3.863,278,2.675,279,3.075,592,5.39,593,5.39,594,5.644,595,5.644,596,6.124,597,6.518,598,6.124,599,6.124]],["title/modules/ConfigModule.html",[256,1.484,270,2.343]],["body/modules/ConfigModule.html",[0,0.43,3,0.152,4,0.152,5,0.107,23,0.01,42,0.22,43,1.679,44,0.152,59,0.007,60,0.008,61,0.007,256,2.755,258,3.003,259,2.899,260,3.237,261,3.237,262,3.003,263,3.894,264,4.177,270,4.616,277,3.894,278,2.711,279,3.115,286,3.976,385,2.711,600,5.461,601,5.461,602,6.205,603,6.205,604,6.205,605,6.205,606,6.205]],["title/classes/ConfigService.html",[0,0.299,286,1.948]],["body/classes/ConfigService.html",[0,0.364,2,0.593,3,0.129,4,0.129,5,0.09,10,0.25,11,2.25,14,2.952,20,0.529,22,2.19,23,0.01,24,1.078,27,2.379,28,0.974,29,0.483,30,2.25,42,0.198,44,0.129,45,2.308,59,0.006,60,0.007,61,0.006,65,0.86,244,3.293,245,3.87,253,2.952,286,3.037,336,2.539,343,7.289,344,7.289,607,4.617,608,7.423,609,7.83,610,6.726,611,6.726,612,5.246,613,4.617,614,6.726,615,5.246,616,7.124,617,5.246,618,4.673,619,6.726,620,5.246,621,5.246,622,5.246,623,5.246]],["title/classes/CreateOrderProductDto.html",[0,0.299,75,3.202]],["body/classes/CreateOrderProductDto.html",[0,0.447,2,0.555,3,0.12,4,0.12,5,0.085,10,0.234,20,0.56,23,0.01,24,0.947,29,0.512,32,2.86,42,0.19,44,0.12,59,0.005,60,0.007,61,0.005,65,0.824,69,1.202,70,1.734,71,3.507,72,1.822,75,4.779,77,3.559,78,1.642,81,3.399,112,3.75,116,2.873,140,6.976,165,5.334,174,2.144,624,6.738,625,4.319,626,4.472,627,4.714,628,4.261,629,5.335,630,5.335,631,4.714,632,4.908,633,4.908,634,4.908,635,4.908,636,4.908,637,4.908,638,4.908]],["title/classes/CreateSponsorDto.html",[0,0.299,639,3.202]],["body/classes/CreateSponsorDto.html",[0,0.479,2,0.781,3,0.169,4,0.169,5,0.119,23,0.009,44,0.169,59,0.008,60,0.009,61,0.008,639,5.899,640,6.077,641,5.531]],["title/classes/CreateUsersTable1611484925515.html",[0,0.299,642,3.456]],["body/classes/CreateUsersTable1611484925515.html",[0,0.212,2,0.345,3,0.075,4,0.075,5,0.053,8,2.864,10,0.146,11,1.54,20,0.311,22,1.499,23,0.01,27,1.629,28,0.917,29,0.342,30,1.54,42,0.09,44,0.075,48,5.254,59,0.003,60,0.005,61,0.003,111,1.378,197,1.333,201,2.001,218,1.808,228,1.735,229,1.872,321,2.444,350,2.946,374,3.658,406,1.816,408,3.327,457,3.061,473,4.051,509,1.483,532,4.699,554,0.575,568,2.115,569,0.917,616,6.549,642,3.688,643,4.878,644,2.444,645,5.543,646,4.84,647,4.604,648,4.604,649,7.616,650,3.052,651,4.604,652,3.052,653,3.052,654,4.315,655,3.052,656,6.644,657,3.052,658,8.624,659,6.363,660,6.363,661,7.23,662,7.23,663,5.791,664,7.23,665,7.23,666,7.23,667,7.23,668,7.884,669,7.23,670,7.23,671,7.23,672,7.442,673,7.442,674,7.442,675,7.442,676,7.442,677,7.23,678,3.052,679,7.442,680,3.052,681,3.052,682,3.052,683,3.052,684,3.052,685,3.052,686,3.052,687,3.052,688,3.052,689,3.052,690,3.052,691,3.052,692,3.052,693,6.173,694,3.052,695,3.052,696,7.442,697,5.171,698,3.052,699,3.052,700,3.052,701,3.052,702,3.052,703,3.052,704,2.12]],["title/classes/DeleteUserPayload.html",[0,0.299,705,3.456]],["body/classes/DeleteUserPayload.html",[0,0.449,2,0.732,3,0.159,4,0.159,5,0.112,10,0.309,20,0.438,23,0.01,29,0.4,42,0.191,44,0.159,59,0.007,60,0.009,61,0.007,65,0.979,69,1.132,70,1.355,71,2.74,72,1.561,77,3.24,78,2.167,81,2.655,193,4.246,509,1.458,705,6.134,706,6.74,707,6.477]],["title/interfaces/ExistsValidationArguments.html",[708,2.684,709,3.202]],["body/interfaces/ExistsValidationArguments.html",[0,0.448,3,0.121,4,0.121,5,0.085,8,3.063,10,0.235,14,1.958,23,0.01,24,0.894,28,0.593,29,0.398,31,2.384,42,0.225,43,1.332,44,0.158,45,1.948,46,3.063,47,3.368,55,2.698,59,0.005,60,0.007,61,0.005,65,0.825,72,1.004,174,2.82,228,1.03,253,1.958,284,2.384,333,2.16,350,2.731,408,2.151,554,0.928,572,1.818,594,4.233,646,3.422,697,3.422,708,3.063,709,5.344,710,3.945,711,3.422,712,3.826,713,6.042,714,5.514,715,6.123,716,3.654,717,4.722,718,4.79,719,4.79,720,4.79,721,4.79,722,4.79,723,5.311,724,4.79,725,3.654,726,3.654,727,3.654,728,4.79,729,5.344,730,5.344,731,4.79,732,3.654,733,5.004,734,3.654,735,3.945,736,4.334,737,3.654,738,4.334,739,3.654,740,3.654,741,3.945,742,3.654,743,5.344,744,3.229,745,3.654,746,3.422]],["title/injectables/ExistsValidator.html",[333,1.444,594,2.829]],["body/injectables/ExistsValidator.html",[0,0.425,3,0.111,4,0.111,5,0.078,8,2.831,10,0.217,11,2.05,14,1.809,20,0.468,22,1.994,23,0.01,24,0.988,27,2.621,28,0.891,29,0.477,30,2.317,31,2.965,42,0.218,43,1.231,44,0.15,45,1.873,46,2.831,47,3.195,55,2.594,59,0.005,60,0.007,61,0.005,72,0.928,174,2.676,228,0.952,253,1.809,284,2.202,333,2.05,334,2.285,336,2.202,350,3.134,390,4.016,408,1.988,554,0.858,572,1.762,594,4.54,646,4.812,697,3.162,708,2.831,709,5.496,711,3.162,712,2.697,713,6.038,714,4.257,715,4.907,716,3.377,717,5.221,718,4.545,719,4.545,720,4.545,721,4.545,722,4.545,723,5.147,724,4.545,725,3.377,726,4.545,727,5.496,728,4.545,729,5.138,730,5.138,731,4.545,732,3.377,733,4.812,734,3.377,735,4.907,736,4.005,737,3.377,738,4.005,739,3.377,740,4.545,741,3.645,742,3.377,743,5.138,744,2.984,745,3.377,746,3.162,747,5.391,748,4.005,749,4.551,750,4.551,751,4.551]],["title/controllers/FileController.html",[238,1.825,752,3.202]],["body/controllers/FileController.html",[0,0.222,3,0.078,4,0.078,5,0.127,10,0.153,11,1.595,20,0.427,22,2.057,23,0.01,24,0.974,27,2.236,28,0.982,29,0.54,30,2.114,42,0.186,43,0.865,44,0.117,45,1.828,47,1.668,55,2.136,59,0.004,60,0.005,61,0.004,65,0.409,66,2.267,69,0.934,70,1.322,72,1.538,78,1.07,81,3.344,115,1.949,238,1.352,240,1.352,244,3.324,248,3.745,252,2.222,253,1.271,348,1.989,350,3.414,362,4.694,367,4.472,368,4.472,372,3.296,374,2.825,385,1.397,392,2.096,395,4.798,396,1.989,401,2.096,406,1.842,408,2.76,474,2.222,613,4.195,744,3.126,752,3.537,753,2.561,754,3.197,755,1.84,756,4.767,757,4.767,758,4.195,759,2.814,760,6.872,761,4.767,762,3.197,763,6.696,764,5.7,765,6.319,766,4.694,767,4.143,768,3.197,769,3.197,770,4.767,771,4.767,772,3.197,773,4.767,774,4.767,775,3.197,776,3.197,777,6.759,778,3.197,779,4.767,780,3.197,781,3.197,782,3.197,783,5.017,784,3.197,785,3.197,786,5.061,787,4.767,788,3.197,789,2.814,790,2.561,791,2.096,792,4.767,793,3.197,794,3.197,795,2.814,796,4.195,797,3.197,798,7.852,799,3.737,800,2.814,801,3.819,802,2.814,803,4.195,804,4.195,805,2.814,806,2.814,807,2.814,808,2.814,809,3.197,810,3.197,811,3.197,812,3.197,813,3.197,814,3.197,815,2.814,816,2.561,817,3.197,818,3.197,819,3.197,820,5.7,821,5.7,822,4.767,823,3.197,824,4.767,825,5.7,826,4.767,827,4.767,828,3.197,829,3.197,830,3.197,831,3.197,832,1.494]],["title/modules/FileModule.html",[256,1.484,271,2.998]],["body/modules/FileModule.html",[0,0.393,3,0.139,4,0.139,5,0.098,23,0.01,42,0.244,43,1.533,44,0.139,59,0.006,60,0.008,61,0.006,85,2.324,226,2.063,240,2.988,256,2.647,258,2.743,259,2.648,260,2.957,261,2.957,262,2.743,263,4.013,264,4.013,271,6.145,274,4.786,276,5.255,277,3.684,278,2.476,279,2.846,281,4.186,293,2.559,752,5.709,799,5.825,800,4.988,833,4.988,834,5.668,835,4.988,836,4.988,837,5.668,838,5.668]],["title/injectables/FileService.html",[333,1.444,799,2.829]],["body/injectables/FileService.html",[0,0.269,3,0.095,4,0.095,5,0.119,10,0.185,11,1.834,14,2.18,20,0.512,22,2.252,23,0.01,24,1.077,27,2.582,28,0.878,29,0.451,30,2.442,31,1.875,42,0.204,43,1.048,44,0.095,45,1.721,55,3.109,59,0.004,60,0.006,61,0.004,65,0.701,66,2.529,85,1.588,195,3.594,226,1.41,253,2.18,293,1.749,333,1.834,334,1.945,336,2.653,350,3.423,372,3.318,385,3.021,398,3.756,404,4.067,408,3.188,453,4.616,457,1.371,509,0.98,515,4.72,755,2.115,758,5.598,759,4.824,760,5.846,763,6.24,783,5.598,786,5.54,789,5.598,799,3.594,815,3.41,816,3.104,839,3.41,840,6.361,841,5.482,842,5.482,843,3.875,844,3.875,845,7.79,846,3.875,847,5.482,848,3.875,849,3.875,850,6.361,851,5.482,852,3.875,853,5.482,854,3.875,855,5.482,856,3.875,857,3.875,858,3.41,859,3.41,860,4.824,861,3.875,862,3.875,863,3.875,864,3.875,865,3.875,866,7.298,867,3.875,868,3.41,869,3.875,870,6.361,871,7.298,872,5.482,873,5.482,874,3.875,875,3.875,876,2.692,877,2.875,878,3.875,879,5.482,880,4.824,881,5.482,882,3.41,883,3.875,884,3.875,885,3.875,886,3.875]],["title/classes/ForgotPasswordPayload.html",[0,0.299,356,3.202]],["body/classes/ForgotPasswordPayload.html",[0,0.526,2,0.721,3,0.156,4,0.156,5,0.11,10,0.304,20,0.431,23,0.01,24,0.941,29,0.393,42,0.224,44,0.156,59,0.007,60,0.008,61,0.007,65,0.97,70,1.333,71,2.696,72,1.299,77,3.209,78,2.133,81,2.613,91,3.22,164,5.271,174,2.784,356,5.629,887,6.676,888,5.609,889,5.609,890,6.374]],["title/classes/Funding.html",[0,0.299,96,2.444]],["body/classes/Funding.html",[0,0.469,2,0.598,3,0.129,4,0.129,5,0.091,10,0.252,20,0.548,23,0.01,24,0.924,28,0.976,29,0.527,42,0.156,44,0.166,59,0.006,60,0.008,61,0.006,65,0.864,69,1.226,70,1.697,96,3.828,228,1.414,229,1.685,406,1.916,509,1.332,533,2.167,535,2.236,539,1.828,548,2.309,550,1.29,551,1.818,552,1.828,553,1.649,554,0.996,559,1.865,560,2.179,561,1.966,563,3.157,565,3.051,566,2.422,568,2.18,569,2.03,572,1.607,573,1.876,891,3.922,892,5.285,893,5.285,894,5.285,895,5.285,896,5.285,897,4.234,898,3.922]],["title/classes/FundingFillableFields.html",[0,0.299,898,3.202]],["body/classes/FundingFillableFields.html",[0,0.494,2,0.649,3,0.141,4,0.141,5,0.099,10,0.274,20,0.481,23,0.01,24,0.96,28,1.001,29,0.513,42,0.169,44,0.174,59,0.006,60,0.008,61,0.006,65,0.91,69,1.143,96,3.25,228,1.489,229,1.736,406,1.974,509,1.026,539,1.925,550,1.4,551,1.888,552,1.925,553,1.737,554,1.082,559,1.437,560,1.679,561,1.782,563,2.681,566,2.195,568,2.246,569,1.724,572,1.693,573,1.976,891,4.257,897,4.596,898,5.28,899,5.738,900,5.738]],["title/classes/Hash.html",[0,0.299,485,2.998]],["body/classes/Hash.html",[0,0.385,2,0.627,3,0.136,4,0.136,5,0.096,10,0.265,11,2.331,20,0.471,22,2.268,23,0.01,24,1.08,27,2.465,28,0.838,30,2.331,42,0.163,44,0.136,45,1.885,55,2.078,59,0.006,60,0.008,61,0.006,244,3.341,245,3.926,301,6.73,485,5.838,901,4.88,902,8.233,903,6.967,904,6.967,905,5.546,906,7.618,907,7.618,908,6.967,909,6.967,910,5.546,911,7.618,912,6.102,913,6.131,914,6.967,915,5.546,916,5.546,917,5.546]],["title/classes/Invoice.html",[0,0.299,918,2.684]],["body/classes/Invoice.html",[0,0.448,2,0.558,3,0.121,4,0.121,5,0.085,10,0.236,20,0.561,23,0.01,28,0.594,29,0.52,32,2.422,42,0.19,44,0.158,59,0.005,60,0.007,61,0.005,65,0.826,66,2.866,69,1.311,70,1.737,72,1.717,79,3.986,112,3.99,115,1.522,116,2.657,509,1.289,526,3.428,533,2.023,550,1.759,551,1.988,553,1.577,554,0.93,559,1.805,561,1.618,572,1.537,627,3.235,628,4.533,631,3.235,918,4.484,919,3.952,920,6.343,921,6.731,922,5.015,923,4.934,924,4.934,925,4.934,926,4.934,927,4.342,928,4.934,929,4.934,930,4.934,931,4.934,932,5.688,933,3.661,934,3.661,935,3.661,936,4.342,937,3.661]],["title/classes/InvoiceFillableFields.html",[0,0.299,937,3.202]],["body/classes/InvoiceFillableFields.html",[0,0.471,2,0.601,3,0.13,4,0.13,5,0.092,10,0.254,20,0.549,23,0.01,28,0.64,29,0.513,32,2.948,42,0.2,44,0.166,59,0.006,60,0.008,61,0.006,65,0.867,66,2.113,69,1.308,72,1.604,79,3.95,112,4.104,115,1.64,116,2.72,509,0.951,526,3.693,550,1.655,551,2.028,553,1.655,554,1.002,559,1.331,561,1.331,572,1.613,627,4.897,628,4.663,631,4.897,918,4.219,919,4.258,920,4.678,921,6.924,932,5.969,933,3.944,934,3.944,935,3.944,936,4.678,937,5.032,938,5.315,939,5.315,940,5.315,941,5.315,942,5.315]],["title/injectables/JwtAuthGuard.html",[333,1.444,943,3.456]],["body/injectables/JwtAuthGuard.html",[0,0.392,3,0.197,4,0.138,5,0.097,10,0.27,11,2.357,20,0.476,22,2.294,23,0.01,27,2.493,28,0.848,29,0.348,30,2.357,42,0.208,43,1.527,44,0.138,45,2.078,59,0.006,60,0.008,61,0.006,226,3.072,333,2.357,334,2.834,385,2.466,427,2.834,470,4.968,479,5.643,515,4.189,712,3.346,943,5.643,944,6.759,945,4.968,946,7.045,947,7.045,948,7.045,949,8.042,950,5.646,951,5.646,952,7.045,953,5.646,954,7.68,955,4.189,956,5.646,957,4.522,958,5.646,959,4.968,960,5.646,961,5.646,962,5.646,963,5.646,964,5.646,965,5.646,966,5.646,967,5.646]],["title/injectables/JwtStrategy.html",[333,1.444,422,2.829]],["body/injectables/JwtStrategy.html",[0,0.385,3,0.136,4,0.136,5,0.096,10,0.265,11,2.331,14,2.205,20,0.471,22,1.806,23,0.01,27,2.465,28,0.838,29,0.43,30,2.331,42,0.243,43,1.5,44,0.136,55,2.078,59,0.006,60,0.008,61,0.006,226,2.019,253,2.77,286,3.794,333,2.331,334,2.784,336,3.372,339,3.286,350,3.222,390,4.994,398,4.631,422,4.568,427,2.784,436,3.142,439,3.636,458,4.115,479,4.442,509,0.992,712,3.286,968,4.88,969,5.546,970,5.546,971,5.546,972,7.991,973,7.618,974,5.546,975,5.546,976,5.546,977,4.88,978,5.546,979,5.546,980,5.546,981,5.546,982,5.546,983,6.967,984,6.967,985,6.967]],["title/classes/ListResidentCompanyPayload.html",[0,0.299,986,3.456]],["body/classes/ListResidentCompanyPayload.html",[0,0.299,2,0.488,3,0.106,4,0.106,5,0.074,10,0.206,20,0.572,23,0.01,24,0.972,29,0.527,32,3.062,42,0.127,44,0.106,59,0.005,60,0.007,61,0.005,65,0.755,69,1.158,70,1.771,71,3.581,77,3.61,78,1.443,81,3.471,83,3.499,85,3.499,86,2.997,115,2.744,146,3.796,162,3.796,200,3.26,228,0.902,229,0.926,230,2.088,231,2.015,232,2.166,233,2.25,247,4.681,986,4.732,987,6.836,988,4.681,989,4.681,990,4.681,991,4.999,992,4.999,993,4.999,994,4.999,995,4.999,996,5.396,997,4.314,998,3.992,999,4.314,1000,4.314,1001,3.796,1002,4.314,1003,4.314,1004,4.314,1005,4.314,1006,4.314]],["title/classes/ListUserPayload.html",[0,0.299,1007,2.998]],["body/classes/ListUserPayload.html",[0,0.348,2,0.568,3,0.123,4,0.123,5,0.087,10,0.24,20,0.571,23,0.01,24,1.016,29,0.522,32,2.886,42,0.148,44,0.123,59,0.006,60,0.007,61,0.006,65,0.836,69,1.21,70,1.768,71,3.576,77,3.615,78,1.68,81,3.466,115,2.741,193,3.292,200,3.519,215,4.419,247,5.052,991,5.394,992,5.394,993,5.394,994,5.394,995,5.394,996,5.823,1007,4.543,1008,7.521,1009,5.021,1010,5.021,1011,5.021,1012,5.021,1013,5.021,1014,5.021,1015,4.419]],["title/classes/LoginPayload.html",[0,0.299,376,2.998]],["body/classes/LoginPayload.html",[0,0.513,2,0.691,3,0.15,4,0.15,5,0.105,10,0.292,20,0.5,23,0.01,24,1.026,29,0.457,42,0.218,44,0.15,59,0.007,60,0.008,61,0.007,65,0.946,70,1.547,71,3.129,72,1.508,77,3.365,78,2.045,81,3.033,91,3.163,164,5.14,165,4.85,172,4.246,174,2.67,197,3.475,376,5.14,889,5.378,1016,5.378,1017,6.111,1018,4.895,1019,6.111,1020,4.895]],["title/classes/Mail.html",[0,0.299,1021,2.998]],["body/classes/Mail.html",[0,0.102,2,0.166,3,0.036,4,0.036,5,0.025,10,0.07,11,0.848,14,1.331,20,0.226,22,1.09,23,0.01,24,0.802,27,0.896,28,0.305,29,0.246,30,0.848,42,0.043,44,0.036,45,1.513,55,1.688,57,4.725,59,0.002,60,0.003,61,0.002,91,1.961,169,4.481,197,2.311,229,0.544,231,0.684,244,1.961,245,2.471,248,0.868,255,1.661,278,1.742,339,0.868,342,1.289,350,2.086,358,1.435,384,3.194,385,1.462,391,3.29,392,0.96,408,1.107,460,2.946,474,4.069,618,1.018,656,5.176,659,2.946,790,5.176,880,2.946,1021,3.887,1022,1.173,1023,3.988,1024,2.533,1025,2.533,1026,1.465,1027,5.29,1028,2.533,1029,5.531,1030,7.005,1031,4.655,1032,1.465,1033,2.946,1034,2.533,1035,1.465,1036,1.465,1037,1.289,1038,1.289,1039,1.173,1040,1.289,1041,1.173,1042,1.289,1043,1.465,1044,1.465,1045,1.465,1046,1.465,1047,1.465,1048,1.465,1049,1.465,1050,1.465,1051,1.465,1052,1.465,1053,1.465,1054,1.465,1055,2.533,1056,2.533,1057,2.229,1058,2.533,1059,1.465,1060,1.173,1061,1.465,1062,1.465,1063,1.465,1064,1.465,1065,1.465,1066,1.465,1067,1.465,1068,2.533,1069,1.465,1070,2.533,1071,2.533,1072,1.465,1073,1.465,1074,1.289,1075,2.533,1076,2.533,1077,2.533,1078,7.377,1079,2.533,1080,2.533,1081,2.533,1082,8.084,1083,2.533,1084,1.88,1085,2.533,1086,1.183,1087,2.533,1088,2.533,1089,6.761,1090,2.533,1091,6.084,1092,2.533,1093,7.005,1094,2.533,1095,7.005,1096,2.533,1097,8.944,1098,7.377,1099,3.988,1100,2.533,1101,2.533,1102,3.988,1103,2.533,1104,2.533,1105,2.533,1106,2.533,1107,2.533,1108,2.533,1109,2.533,1110,4.932,1111,6.761,1112,7.207,1113,2.533,1114,2.533,1115,2.533,1116,2.533,1117,3.988,1118,2.533,1119,3.988,1120,4.932,1121,3.988,1122,7.207,1123,2.533,1124,3.988,1125,2.533,1126,2.533,1127,2.533,1128,2.533,1129,3.988,1130,2.533,1131,2.533,1132,3.988,1133,2.533,1134,2.533,1135,2.533,1136,2.533,1137,5.594,1138,7.005,1139,5.594,1140,5.594,1141,2.533,1142,6.084,1143,3.988,1144,4.932,1145,4.932,1146,6.084,1147,3.988,1148,6.084,1149,4.932,1150,4.932,1151,6.462,1152,5.594,1153,2.533,1154,2.533,1155,2.533,1156,3.988,1157,8.301,1158,7.939,1159,5.354,1160,3.988,1161,6.084,1162,2.533,1163,6.084,1164,2.533,1165,5.594,1166,2.533,1167,4.932,1168,3.988,1169,2.533,1170,2.533,1171,3.988,1172,4.932,1173,4.932,1174,2.533,1175,2.533,1176,2.533,1177,2.533,1178,5.594,1179,2.533,1180,4.932,1181,2.533,1182,2.533,1183,2.533,1184,2.533,1185,6.084,1186,2.533,1187,2.533,1188,2.533,1189,2.533,1190,2.533,1191,2.533,1192,2.533,1193,2.533,1194,2.533,1195,2.533,1196,3.988,1197,3.988,1198,6.084,1199,3.988,1200,2.533,1201,2.533,1202,3.988,1203,2.533,1204,2.533,1205,2.533,1206,2.533,1207,2.533,1208,2.533,1209,2.229,1210,3.988,1211,3.988,1212,3.988,1213,1.465,1214,2.533,1215,2.533,1216,1.465,1217,1.465,1218,2.533,1219,3.988,1220,2.533,1221,2.533,1222,2.533,1223,2.533,1224,1.465,1225,1.465,1226,1.465,1227,2.533,1228,2.533,1229,2.229,1230,2.533,1231,2.533,1232,3.988,1233,3.509,1234,3.988,1235,2.533,1236,2.533,1237,3.988,1238,2.533,1239,1.289,1240,1.289,1241,1.465,1242,1.465,1243,1.465,1244,1.087,1245,1.289,1246,1.173,1247,1.173,1248,1.465,1249,2.533,1250,1.465,1251,1.465,1252,1.465,1253,1.465,1254,1.465,1255,1.465,1256,1.465,1257,2.533,1258,1.88,1259,1.465,1260,2.229,1261,2.533,1262,1.465,1263,1.465]],["title/controllers/MasterController.html",[238,1.825,1264,3.202]],["body/controllers/MasterController.html",[0,0.169,3,0.06,4,0.095,5,0.042,10,0.117,11,1.296,20,0.481,22,2.319,23,0.01,27,2.358,28,0.802,29,0.496,30,2.23,42,0.142,43,0.66,44,0.06,45,1.927,59,0.003,60,0.004,61,0.003,70,1.49,78,0.817,113,3.345,226,1.752,238,1.032,240,1.032,244,3.564,245,4.132,248,4.221,252,1.696,253,0.97,255,3.156,293,2.174,348,1.518,350,3.586,358,3.776,362,5.033,367,4.795,368,4.795,370,4.802,372,4.063,373,4.631,374,4.795,394,3.776,395,5.07,396,1.518,406,2.025,408,1.692,452,3.345,587,3.856,766,5.033,767,4.669,791,4.533,897,3.856,1264,2.873,1265,2.148,1266,2.441,1267,3.872,1268,3.872,1269,5.48,1270,3.872,1271,3.872,1272,3.872,1273,3.872,1274,3.872,1275,5.48,1276,2.441,1277,6.331,1278,3.872,1279,2.441,1280,2.441,1281,6.289,1282,4.814,1283,5.779,1284,2.441,1285,2.441,1286,2.441,1287,3.872,1288,2.148,1289,2.441,1290,2.441,1291,2.441,1292,2.441,1293,2.441,1294,2.441,1295,2.441,1296,3.572,1297,2.441,1298,2.441,1299,2.441,1300,3.856,1301,2.441,1302,2.441,1303,2.441,1304,3.572,1305,2.441,1306,3.872,1307,2.441,1308,2.441,1309,4.814,1310,3.872,1311,2.441,1312,2.441,1313,2.441,1314,2.441,1315,2.441,1316,2.441,1317,2.441,1318,2.441,1319,2.441,1320,2.441,1321,2.441,1322,2.441,1323,2.441,1324,2.441,1325,2.441,1326,2.441,1327,2.441,1328,2.441,1329,2.441,1330,2.441,1331,2.441,1332,2.441,1333,2.441,1334,2.441,1335,2.441,1336,1.955,1337,2.441]],["title/modules/MasterModule.html",[256,1.484,272,2.829]],["body/modules/MasterModule.html",[0,0.369,3,0.13,4,0.13,5,0.092,23,0.01,42,0.26,43,1.441,44,0.13,59,0.006,60,0.008,61,0.006,96,3.847,101,3.847,111,3.066,113,3.7,200,3.286,240,2.873,255,3.491,256,2.572,258,2.577,259,2.488,260,2.778,261,2.778,262,2.577,263,3.9,264,3.9,272,5.541,277,3.542,278,2.326,279,2.674,281,3.156,282,3.491,284,2.577,426,3.491,427,2.674,434,4.452,435,4.452,436,3.847,452,6.122,556,3.312,578,4.224,1264,5.547,1338,4.686,1339,4.686,1340,4.686,1341,5.325,1342,4.266,1343,5.325,1344,5.325,1345,5.325,1346,5.325,1347,5.325,1348,4.224,1349,4.266,1350,5.325,1351,5.325,1352,5.325]],["title/classes/MasterPayload.html",[0,0.299,1277,3.202]],["body/classes/MasterPayload.html",[0,0.445,2,0.552,3,0.12,4,0.12,5,0.084,10,0.233,20,0.559,23,0.01,24,0.945,29,0.511,32,2.854,42,0.189,44,0.12,59,0.005,60,0.007,61,0.005,65,0.821,69,1.2,70,1.732,71,3.503,77,3.555,78,1.634,81,3.395,115,2.699,166,4.702,167,5.499,169,3.911,170,6.311,171,3.911,172,4.983,174,2.133,183,3.911,188,3.911,228,1.021,229,1.378,231,2.999,247,4.983,991,5.321,992,5.321,993,5.321,994,5.321,995,5.321,1084,3.623,1277,4.763,1353,4.296,1354,4.983,1355,7.618,1356,6.419,1357,4.882,1358,4.882,1359,4.882,1360,4.882,1361,4.882,1362,4.882,1363,4.882,1364,4.882,1365,4.882,1366,4.882,1367,4.882,1368,4.882,1369,4.882,1370,4.882,1371,4.882]],["title/classes/Modality.html",[0,0.299,101,2.444]],["body/classes/Modality.html",[0,0.469,2,0.598,3,0.129,4,0.129,5,0.091,10,0.252,20,0.548,23,0.01,24,0.924,28,0.976,29,0.527,42,0.156,44,0.166,59,0.006,60,0.008,61,0.006,65,0.864,69,1.226,70,1.697,101,3.828,228,1.414,229,1.685,406,1.916,509,1.332,533,2.167,535,2.236,539,1.828,548,2.309,550,1.29,551,1.818,552,1.828,553,1.649,554,0.996,559,1.865,560,2.179,561,1.966,563,3.157,565,3.051,566,2.422,568,2.18,569,2.03,572,1.607,573,1.876,1296,3.922,1372,3.922,1373,5.285,1374,5.285,1375,5.285,1376,5.285,1377,5.285,1378,3.922]],["title/classes/ModalityFillableFields.html",[0,0.299,1378,3.202]],["body/classes/ModalityFillableFields.html",[0,0.494,2,0.649,3,0.141,4,0.141,5,0.099,10,0.274,20,0.481,23,0.01,24,0.96,28,1.001,29,0.513,42,0.169,44,0.174,59,0.006,60,0.008,61,0.006,65,0.91,69,1.143,101,3.25,228,1.489,229,1.736,406,1.974,509,1.026,539,1.925,550,1.4,551,1.888,552,1.925,553,1.737,554,1.082,559,1.437,560,1.679,561,1.782,563,2.681,566,2.195,568,2.246,569,1.724,572,1.693,573,1.976,1296,4.257,1372,4.257,1378,5.28,1379,5.738,1380,5.738]],["title/classes/Order.html",[0,0.299,79,2.166]],["body/classes/Order.html",[0,0.459,2,0.579,3,0.125,4,0.125,5,0.088,10,0.245,20,0.556,23,0.01,28,0.616,29,0.524,30,2.216,42,0.216,44,0.162,59,0.006,60,0.007,61,0.006,65,0.847,66,3.085,68,5.446,69,1.216,70,1.722,72,1.35,79,3.896,116,1.714,509,1.313,532,4.396,533,2.1,535,2.802,548,2.238,550,1.791,551,1.616,552,1.792,553,1.616,554,0.966,559,1.838,561,1.943,572,1.575,918,4.998,922,3.358,927,4.507,933,3.8,935,3.8,1381,4.103,1382,6.459,1383,6.459,1384,5.122,1385,5.122,1386,5.122,1387,5.122,1388,5.122,1389,4.762,1390,5.122,1391,5.122,1392,5.828,1393,4.507,1394,3.8,1395,4.507,1396,4.507,1397,3.8,1398,4.507]],["title/classes/OrderFillableFields.html",[0,0.299,1397,3.202]],["body/classes/OrderFillableFields.html",[0,0.49,2,0.641,3,0.139,4,0.139,5,0.098,10,0.271,20,0.477,23,0.01,28,0.682,29,0.497,42,0.227,44,0.173,59,0.006,60,0.008,61,0.006,65,0.903,66,3.202,68,4.206,69,1.248,72,1.155,79,3.863,116,1.897,509,1.014,532,4.001,550,1.724,551,1.724,552,1.911,553,1.724,554,1.069,559,1.419,561,1.768,572,1.68,918,5.009,933,4.206,935,4.206,1381,4.54,1382,4.988,1383,4.988,1389,4.773,1392,6.216,1393,4.988,1394,4.206,1395,4.988,1396,4.988,1397,5.241,1398,6.771,1399,5.668,1400,5.668]],["title/classes/OrderProduct.html",[0,0.299,1389,2.557]],["body/classes/OrderProduct.html",[0,0.409,2,0.487,3,0.106,4,0.106,5,0.074,10,0.206,20,0.572,23,0.01,24,0.941,28,0.518,29,0.536,30,1.975,32,2.935,42,0.174,44,0.145,59,0.005,60,0.007,61,0.005,65,0.754,69,1.251,70,1.77,72,1.597,79,4.101,112,3.777,115,2.234,116,2.538,457,2.088,509,1.204,532,4.102,533,1.766,534,5.8,535,1.822,537,5.193,539,1.596,548,1.882,550,1.643,551,1.993,552,1.596,553,1.44,554,0.812,559,1.685,560,1.969,561,1.813,565,2.665,572,1.404,626,4.504,627,4.747,628,4.291,629,4.995,630,5.373,631,4.747,922,2.824,934,3.196,1389,3.497,1401,6.834,1402,3.45,1403,4.307,1404,4.307,1405,4.727,1406,4.307,1407,4.307,1408,4.307,1409,4.307,1410,4.307,1411,4.747,1412,4.307,1413,4.307,1414,4.307,1415,4.307,1416,4.307,1417,5.193,1418,3.79,1419,3.79,1420,3.196]],["title/controllers/OrderProductController.html",[238,1.825,1421,3.202]],["body/controllers/OrderProductController.html",[0,0.225,3,0.079,4,0.079,5,0.056,10,0.155,11,1.612,14,1.289,20,0.43,22,2.071,23,0.01,27,2.251,28,0.766,29,0.468,30,2.129,42,0.2,43,0.877,44,0.079,45,1.721,55,2.384,57,4.67,59,0.004,60,0.005,61,0.004,62,5.265,68,4.72,69,1.053,70,1.331,78,1.085,79,4.106,85,3.318,112,2.512,226,2.316,238,1.371,240,1.371,244,3.504,245,3.781,248,3.77,253,1.289,293,3.693,336,1.569,348,2.016,350,3.424,358,3.604,362,4.713,367,4.491,368,4.491,370,4.585,372,4.222,374,4.491,392,3.158,393,2.405,394,3.256,395,4.816,396,2.016,406,1.849,408,2.779,509,1.138,532,4.036,628,3.77,654,3.256,755,2.455,766,4.713,767,4.171,791,2.125,912,4.603,1421,3.574,1422,2.852,1423,3.241,1424,5.454,1425,4.238,1426,4.238,1427,4.238,1428,4.238,1429,2.852,1430,2.852,1431,3.241,1432,6.482,1433,5.096,1434,2.852,1435,3.241,1436,3.241,1437,2.852,1438,3.241,1439,3.241,1440,5.057,1441,5.747,1442,5.747,1443,2.852,1444,4.42,1445,3.241,1446,3.241,1447,3.993,1448,2.852,1449,2.852,1450,2.852,1451,2.852,1452,3.768,1453,2.852,1454,3.241,1455,2.852,1456,3.241,1457,3.241,1458,3.241,1459,3.241,1460,3.241,1461,3.241,1462,3.241,1463,3.241,1464,2.852,1465,3.241,1466,3.241]],["title/classes/OrderProductFillableFields.html",[0,0.299,1420,3.202]],["body/classes/OrderProductFillableFields.html",[0,0.451,2,0.564,3,0.122,4,0.122,5,0.086,10,0.238,20,0.552,23,0.01,24,0.953,28,0.6,29,0.532,32,3.061,42,0.192,44,0.159,59,0.006,60,0.007,61,0.006,65,0.832,69,1.272,72,1.477,79,4,112,4.006,115,2.008,116,2.424,457,2.302,509,0.892,532,3.687,534,5.213,539,1.761,550,1.588,551,2.06,552,1.761,553,1.588,554,0.94,559,1.248,560,1.459,561,1.629,572,1.548,626,4.777,627,5.035,628,4.551,629,3.699,630,5.699,631,5.035,934,3.699,1389,2.955,1401,6.667,1402,3.994,1411,4.267,1417,5.727,1418,4.388,1419,4.388,1420,4.829,1467,4.986,1468,4.986,1469,4.986,1470,4.986,1471,4.986,1472,4.986]],["title/modules/OrderProductModule.html",[256,1.484,273,2.998]],["body/modules/OrderProductModule.html",[0,0.355,3,0.125,4,0.125,5,0.088,23,0.01,42,0.255,43,1.386,44,0.125,45,1.386,59,0.006,60,0.007,61,0.006,79,3.325,240,2.802,256,2.525,258,2.479,259,2.393,260,2.672,261,2.672,262,2.479,263,3.829,264,3.829,270,4.548,273,5.96,277,3.455,278,2.238,279,2.571,281,4.35,282,3.358,284,2.479,286,2.99,314,3.186,315,3.358,339,3.035,424,3.559,425,3.035,426,3.358,427,2.571,434,3.358,435,3.358,436,2.902,437,3.559,438,3.559,439,3.358,440,3.559,441,3.358,442,3.358,443,3.559,918,4.119,1389,3.925,1394,3.8,1421,5.446,1452,5.745,1453,4.507,1473,4.507,1474,5.122,1475,4.507,1476,4.507,1477,5.122,1478,5.122,1479,4.507,1480,4.507,1481,5.122,1482,4.103]],["title/injectables/OrderProductService.html",[333,1.444,1452,2.829]],["body/injectables/OrderProductService.html",[0,0.24,3,0.085,4,0.085,5,0.06,10,0.165,11,1.693,14,2.011,20,0.472,22,2.375,23,0.01,27,2.472,28,0.841,29,0.431,30,2.338,42,0.222,43,0.937,44,0.085,45,1.974,47,4.028,55,1.298,59,0.004,60,0.006,61,0.004,62,5.07,69,1.078,79,4.316,112,3.116,244,3.225,245,3.608,253,2.011,284,1.677,333,1.693,334,1.739,336,2.448,350,3.47,372,3.806,385,3.187,394,3.958,408,3.187,509,1.249,532,4.375,554,0.653,628,4.141,654,4.133,663,2.775,755,1.337,912,2.775,1389,3.893,1394,2.571,1424,5.248,1425,4.452,1426,4.452,1427,4.452,1428,4.452,1429,4.452,1432,5.844,1434,4.452,1437,4.452,1440,3.049,1443,4.452,1444,5.07,1448,3.049,1449,3.049,1450,3.049,1451,3.049,1452,3.316,1479,3.049,1480,3.049,1483,3.049,1484,3.465,1485,6.63,1486,5.975,1487,3.465,1488,5.058,1489,3.465,1490,5.058,1491,3.465,1492,3.465,1493,3.465,1494,5.058,1495,3.049,1496,3.465,1497,3.465,1498,3.465,1499,3.465,1500,5.058,1501,3.465,1502,3.465,1503,3.465,1504,3.465,1505,3.465,1506,3.465,1507,3.465,1508,5.058,1509,5.058,1510,5.058,1511,5.058,1512,5.058,1513,5.058,1514,5.058,1515,5.058,1516,5.058,1517,5.058,1518,5.058,1519,5.058,1520,5.058,1521,5.058,1522,3.465,1523,3.465,1524,5.058,1525,3.465,1526,3.465,1527,5.058,1528,3.465,1529,3.465,1530,3.465,1531,3.465]],["title/classes/PasswordPayload.html",[0,0.299,381,3.202]],["body/classes/PasswordPayload.html",[0,0.494,2,0.65,3,0.141,4,0.141,5,0.099,10,0.275,20,0.523,23,0.01,24,1.052,29,0.478,42,0.239,44,0.141,59,0.006,60,0.008,61,0.006,65,0.911,70,1.62,71,3.276,72,1.65,77,3.424,78,1.924,81,3.175,165,4.672,172,3.995,174,2.512,197,3.383,198,5.38,223,4.672,225,5.287,237,4.266,381,5.287,391,4.816,1018,4.605,1020,4.605,1532,5.06,1533,5.749,1534,5.06,1535,5.749,1536,5.749,1537,5.06,1538,4.605]],["title/classes/PasswordTransformer.html",[0,0.299,1539,2.998]],["body/classes/PasswordTransformer.html",[0,0.423,2,0.689,3,0.149,4,0.149,5,0.105,8,4.595,10,0.291,11,2.472,20,0.499,22,2.405,23,0.01,27,2.614,28,0.889,30,2.472,31,4.162,42,0.218,44,0.149,45,2.15,59,0.007,60,0.008,61,0.007,485,4.237,486,5.366,554,1.15,1539,5.133,1540,5.366,1541,7.947,1542,7.387,1543,6.098,1544,7.387,1545,6.098,1546,6.098]],["title/classes/Product.html",[0,0.299,1424,2.829]],["body/classes/Product.html",[0,0.467,2,0.594,3,0.129,4,0.129,5,0.091,10,0.251,20,0.56,23,0.01,24,1.028,28,0.975,29,0.52,42,0.155,44,0.165,59,0.006,60,0.007,61,0.006,65,0.861,69,1.274,70,1.733,72,1.689,115,2.077,116,2.71,244,3.115,509,1.329,526,5.163,533,2.155,539,1.422,550,1.813,551,1.977,553,1.643,554,0.991,559,1.86,561,1.686,565,2.373,572,1.602,626,4.874,922,4.871,1411,4.415,1424,4.871,1547,4.21,1548,5.256,1549,5.256,1550,5.256,1551,5.256,1552,5.256,1553,5.256,1554,3.9]],["title/classes/ProductFillableFields.html",[0,0.299,1554,3.202]],["body/classes/ProductFillableFields.html",[0,0.494,2,0.65,3,0.141,4,0.141,5,0.099,10,0.275,20,0.523,23,0.01,24,1.052,28,1.001,29,0.5,42,0.169,44,0.175,59,0.006,60,0.008,61,0.006,65,0.911,69,1.253,72,1.578,115,1.774,116,2.708,244,3.218,509,1.028,526,3.995,539,1.555,550,1.739,551,2.03,553,1.739,554,1.084,559,1.44,561,1.44,572,1.695,626,5.035,1411,3.769,1424,4.672,1547,4.605,1554,5.287,1555,5.749,1556,5.749,1557,5.749]],["title/classes/RegisterPayload.html",[0,0.299,1558,3.456]],["body/classes/RegisterPayload.html",[0,0.424,2,0.513,3,0.111,4,0.111,5,0.078,10,0.217,20,0.572,23,0.01,24,1.09,29,0.523,42,0.228,44,0.111,59,0.005,60,0.007,61,0.005,65,0.782,69,1.093,70,1.771,71,3.581,72,1.79,77,3.613,78,1.518,81,3.471,91,2.749,115,1.886,116,2.045,125,3.634,164,4.247,165,4.007,166,4.007,172,3.152,174,1.982,175,2.822,176,3.992,194,4.804,195,4.532,196,4.804,197,3.02,198,4.804,199,4.804,200,3.346,201,4.532,202,3.606,214,3.992,223,2.974,225,3.366,226,2.225,236,3.992,237,3.366,1018,3.634,1020,3.634,1534,3.992,1538,3.634,1558,4.896,1559,3.992,1560,4.536,1561,4.536,1562,4.536,1563,4.536,1564,4.536,1565,4.536,1566,4.536,1567,4.536,1568,4.536,1569,4.536]],["title/classes/ResidentCompanyAdvisory.html",[0,0.299,1570,2.998]],["body/classes/ResidentCompanyAdvisory.html",[0,0.41,2,0.488,3,0.106,4,0.106,5,0.074,10,0.206,20,0.552,23,0.01,24,1.029,28,0.914,29,0.523,42,0.127,44,0.145,59,0.005,60,0.007,61,0.005,65,0.756,66,2.883,69,1.225,70,1.71,72,1.598,83,3.399,116,2.624,202,3.782,228,1.588,229,1.683,406,1.769,457,2.092,459,1.951,509,1.206,533,1.771,535,1.828,539,1.961,548,1.887,550,1.645,551,1.959,552,1.6,553,1.443,554,0.814,559,1.688,560,1.972,561,1.815,565,3.274,566,2.522,568,2.013,569,1.776,572,1.407,573,1.872,755,1.667,832,2.018,1086,2.018,1570,4.109,1571,4.502,1572,3.206,1573,6.38,1574,4.32,1575,4.32,1576,4.32,1577,4.32,1578,4.32,1579,4.32,1580,4.32,1581,4.32,1582,2.091,1583,2.862,1584,2.169,1585,2.091,1586,2.091,1587,1.951,1588,3.802,1589,3.206,1590,2.56]],["title/classes/ResidentCompanyAdvisoryFillableFields.html",[0,0.299,1589,3.202]],["body/classes/ResidentCompanyAdvisoryFillableFields.html",[0,0.437,2,0.536,3,0.116,4,0.116,5,0.082,10,0.226,20,0.544,23,0.01,24,1.049,28,0.943,29,0.522,42,0.14,44,0.154,59,0.005,60,0.007,61,0.005,65,0.805,66,2.995,69,1.215,72,1.441,83,3.371,116,2.365,202,3.929,228,1.575,229,1.73,406,1.838,457,1.678,459,2.141,509,1.264,539,2.037,550,1.537,551,1.966,552,1.703,553,1.537,554,0.894,559,1.187,560,1.387,561,1.577,566,2.323,568,2.091,569,1.425,572,1.498,573,1.963,755,1.83,832,2.216,1086,2.216,1570,3.295,1571,4.465,1572,3.519,1573,6.628,1582,2.295,1583,3.048,1584,2.381,1585,2.295,1586,2.295,1587,2.141,1588,4.173,1589,4.672,1590,2.81,1591,4.742,1592,4.742,1593,4.742,1594,4.742,1595,4.742,1596,4.742]],["title/controllers/ResidentCompanyController.html",[238,1.825,1597,3.202]],["body/controllers/ResidentCompanyController.html",[0,0.165,3,0.058,4,0.058,5,0.041,10,0.114,11,1.272,14,0.948,20,0.446,22,2.15,23,0.01,27,2.227,28,0.795,29,0.484,30,2.107,31,2.294,42,0.202,43,0.645,44,0.058,45,1.787,55,1.776,57,4.496,59,0.003,60,0.004,61,0.003,69,0.93,70,1.382,78,0.798,82,4.671,83,2.812,85,3.477,111,2.843,226,1.384,228,0.499,229,1.018,238,1.009,240,1.009,244,3.53,245,3.901,248,4.064,249,4.671,253,0.948,293,3.733,336,1.154,348,1.483,350,3.478,357,3.294,358,4.331,362,4.819,367,4.463,368,4.384,370,4.657,372,4.262,373,1.657,374,4.591,392,2.493,393,2.821,394,3.885,395,4.819,396,1.483,406,2.028,408,1.042,427,1.197,432,3.724,453,2.809,483,2.809,509,1.296,568,1.056,573,0.662,597,4.172,654,2.686,737,2.821,766,4.819,767,4.127,791,2.493,955,1.77,957,1.91,1060,3.045,1281,3.518,1283,4.013,1288,2.099,1354,3.294,1430,2.099,1433,5.291,1447,3.758,1455,2.099,1597,2.821,1598,2.099,1599,2.385,1600,3.802,1601,3.802,1602,3.802,1603,5.409,1604,3.802,1605,3.802,1606,3.802,1607,2.385,1608,2.385,1609,2.385,1610,2.099,1611,2.099,1612,3.346,1613,2.154,1614,2.385,1615,5.54,1616,2.385,1617,2.099,1618,2.385,1619,5.043,1620,4.172,1621,4.172,1622,2.385,1623,2.385,1624,4.172,1625,2.385,1626,4.013,1627,2.385,1628,2.385,1629,4.76,1630,2.385,1631,4.76,1632,2.099,1633,2.385,1634,4.76,1635,5.244,1636,2.385,1637,2.385,1638,2.385,1639,1.91,1640,3.346,1641,4.741,1642,2.385,1643,2.385,1644,2.385,1645,2.099,1646,2.385,1647,4.732,1648,2.385,1649,2.099,1650,2.099,1651,2.099,1652,2.099,1653,2.385,1654,2.385,1655,2.099,1656,2.385,1657,2.385,1658,2.385,1659,2.385,1660,2.385,1661,2.385,1662,2.385,1663,2.385,1664,2.099,1665,2.385,1666,2.385]],["title/classes/ResidentCompanyDocuments.html",[0,0.299,1667,2.998]],["body/classes/ResidentCompanyDocuments.html",[0,0.414,2,0.495,3,0.107,4,0.107,5,0.075,10,0.209,20,0.554,23,0.01,24,1.043,28,0.918,29,0.524,42,0.129,44,0.146,59,0.005,60,0.007,61,0.005,65,0.762,69,1.228,70,1.715,72,1.216,83,3.408,91,1.739,228,1.595,229,1.689,371,5.837,406,1.778,457,2.11,459,1.975,509,1.213,533,1.793,535,1.85,539,1.836,548,1.911,550,1.656,551,1.921,552,1.613,553,1.455,554,0.825,559,1.699,560,1.985,561,1.825,565,3.064,566,2.428,568,2.023,569,1.791,572,1.418,573,1.884,755,1.688,832,2.044,1086,2.044,1571,4.514,1582,2.117,1583,2.886,1584,2.196,1585,2.117,1586,2.117,1587,1.975,1590,2.592,1613,3.378,1667,4.144,1668,3.246,1669,6.413,1670,6.413,1671,4.374,1672,4.374,1673,3.849,1674,4.374,1675,4.374,1676,4.374,1677,4.374,1678,4.374,1679,4.374,1680,3.849,1681,2.868,1682,3.246]],["title/classes/ResidentCompanyDocumentsFillableFields.html",[0,0.299,1682,3.202]],["body/classes/ResidentCompanyDocumentsFillableFields.html",[0,0.434,2,0.531,3,0.115,4,0.115,5,0.081,10,0.224,20,0.554,23,0.01,24,1.066,28,0.94,29,0.526,42,0.138,44,0.153,59,0.005,60,0.007,61,0.005,65,0.8,69,1.212,72,0.957,83,3.416,91,2.797,228,1.569,229,1.725,371,6.009,406,1.831,457,1.661,459,2.12,509,1.258,539,1.903,550,1.526,551,1.907,552,1.692,553,1.526,554,0.885,559,1.176,560,1.374,561,1.566,566,2.17,568,2.083,569,1.41,572,1.488,573,1.953,755,1.812,832,2.193,1086,2.193,1571,4.524,1582,2.272,1583,3.027,1584,2.357,1585,2.272,1586,2.272,1587,2.12,1590,2.782,1613,2.66,1667,3.262,1668,3.484,1669,6.601,1670,6.601,1680,4.132,1681,3.078,1682,4.641,1683,4.695,1684,4.695,1685,4.695,1686,4.695,1687,4.695,1688,4.695,1689,4.695]],["title/classes/ResidentCompanyFillableFields.html",[0,0.299,1690,3.456]],["body/classes/ResidentCompanyFillableFields.html",[0,0.217,2,0.212,3,0.046,4,0.046,5,0.032,10,0.09,20,0.589,23,0.01,24,1.103,28,0.627,29,0.541,32,3.159,42,0.055,44,0.077,48,4.931,59,0.002,60,0.003,61,0.002,65,0.4,69,1.264,72,1.728,83,3.58,87,3.754,88,3.754,89,3.754,90,3.754,91,1.863,92,3.754,93,3.754,94,3.754,95,3.754,96,2.655,97,3.477,98,3.754,99,3.754,100,3.754,101,2.655,102,3.754,103,3.754,104,3.754,105,3.754,106,3.754,107,3.754,108,3.754,109,3.754,110,3.754,111,2.116,112,2.445,113,3.256,114,3.754,115,0.964,116,2.805,177,1.303,228,1.176,229,1.392,230,1.512,231,1.46,232,1.569,233,1.63,406,1.144,432,4.742,457,2.887,459,0.847,509,0.335,539,2.159,550,0.763,551,2.11,552,0.845,553,0.763,554,0.354,559,0.47,560,0.549,561,0.782,566,1.446,568,1.301,569,0.939,572,0.743,573,1.115,755,0.724,832,0.876,876,3.256,988,3.256,989,3.256,990,3.256,998,2.777,1084,2.319,1086,0.876,1411,4.85,1582,0.908,1583,1.512,1585,0.908,1586,0.908,1587,0.847,1613,2.655,1681,3.414,1690,2.503,1691,1.502,1692,4.124,1693,4.124,1694,4.124,1695,4.124,1696,4.124,1697,4.124,1698,4.017,1699,4.124,1700,4.124,1701,4.686,1702,4.124,1703,4.124,1704,4.124,1705,4.124,1706,4.124,1707,4.124,1708,4.124,1709,4.686,1710,4.686,1711,4.686,1712,1.875,1713,1.875,1714,1.875,1715,1.875,1716,1.875,1717,1.875,1718,1.875,1719,1.875,1720,1.875,1721,1.875,1722,1.875,1723,1.875,1724,1.875,1725,1.875,1726,1.875,1727,1.875,1728,1.875,1729,1.875,1730,1.875,1731,1.875,1732,1.875,1733,1.875,1734,1.875,1735,1.875,1736,1.875,1737,1.875,1738,1.875,1739,1.875,1740,1.875,1741,1.875,1742,1.875,1743,1.875,1744,1.875,1745,1.875,1746,1.875,1747,1.875,1748,1.875,1749,1.875,1750,1.875,1751,1.875,1752,1.875,1753,1.875,1754,1.875,1755,1.875,1756,1.875,1757,1.875,1758,1.875,1759,1.875,1760,1.875,1761,1.875,1762,1.875,1763,1.875,1764,1.875,1765,1.875,1766,1.875,1767,2.75,1768,1.65,1769,1.875,1770,1.875]],["title/classes/ResidentCompanyHistoryFillableFields.html",[0,0.299,1771,3.456]],["body/classes/ResidentCompanyHistoryFillableFields.html",[0,0.219,2,0.215,3,0.047,4,0.047,5,0.033,10,0.091,20,0.585,23,0.01,24,1.089,28,0.632,29,0.538,32,3.189,42,0.177,44,0.077,48,4.83,59,0.002,60,0.004,61,0.002,65,0.404,69,1.258,72,1.717,83,3.556,87,3.788,88,3.788,89,3.788,90,3.788,91,1.881,92,3.788,93,3.788,94,3.788,95,1.524,96,2.974,97,3.509,98,3.788,99,3.788,100,3.788,101,2.974,102,3.788,103,3.788,104,3.788,105,3.788,106,3.788,107,3.788,108,3.788,109,3.788,110,3.788,111,2.37,112,2.467,113,3.286,114,3.788,115,0.976,116,2.782,228,1.256,229,1.349,230,1.531,231,1.478,232,1.588,233,1.65,293,3.916,406,1.154,432,4.71,457,2.831,459,0.859,509,0.34,539,2.081,550,0.772,551,2.091,552,0.856,553,0.772,554,0.359,556,1.184,559,0.476,560,0.557,561,0.792,566,0.976,568,1.313,569,0.95,572,0.752,573,1.127,578,1.184,755,0.734,832,0.889,988,3.286,989,3.286,990,3.286,998,2.803,1084,1.412,1086,0.889,1342,1.524,1348,1.184,1349,1.524,1411,4.869,1582,0.921,1583,1.531,1584,0.955,1585,0.921,1586,0.921,1587,0.859,1613,2.679,1681,3.714,1692,4.162,1693,4.162,1694,4.162,1695,4.162,1696,4.162,1697,4.162,1699,4.162,1700,4.162,1702,4.162,1703,4.162,1704,4.162,1705,4.162,1706,4.162,1707,4.162,1708,4.162,1767,2.784,1771,2.534,1772,1.524,1773,4.06,1774,1.903,1775,1.903,1776,1.903,1777,1.903,1778,1.903,1779,1.903,1780,1.903,1781,1.903,1782,1.903,1783,1.903,1784,1.903,1785,1.903,1786,1.903,1787,1.903,1788,1.903,1789,1.903,1790,1.903,1791,1.903,1792,1.903,1793,1.903,1794,1.903,1795,1.903,1796,1.903,1797,1.903,1798,1.903,1799,1.903,1800,1.903,1801,1.903,1802,1.903,1803,1.903,1804,1.903,1805,1.903,1806,1.903,1807,1.903,1808,1.903,1809,1.903,1810,1.903,1811,1.903,1812,1.903,1813,1.903,1814,1.903,1815,1.903,1816,1.903,1817,1.903,1818,1.903,1819,1.903,1820,1.903,1821,1.903,1822,1.675,1823,1.675,1824,1.675,1825,1.675,1826,1.675,1827,1.675,1828,1.903,1829,1.524,1830,1.903]],["title/classes/ResidentCompanyManagement.html",[0,0.299,1831,2.998]],["body/classes/ResidentCompanyManagement.html",[0,0.343,2,0.379,3,0.082,4,0.082,5,0.058,10,0.16,20,0.569,23,0.01,24,1.071,28,0.83,29,0.528,32,3.053,42,0.099,44,0.121,59,0.004,60,0.005,61,0.004,65,0.631,66,2.572,69,1.154,70,1.762,72,1.766,83,3.474,91,2.572,115,1.524,116,2.864,202,3.374,228,1.442,229,1.548,406,1.578,457,2.074,459,1.514,509,1.048,533,1.375,535,1.419,539,2.07,548,1.465,550,1.431,551,2.042,552,1.336,553,1.205,554,0.632,559,1.468,560,1.715,561,1.619,565,3.455,566,2.562,568,1.796,569,1.484,572,1.175,573,1.628,755,1.294,832,1.567,922,3.844,1086,1.567,1405,2.686,1571,4.601,1582,1.623,1583,2.39,1584,1.684,1585,1.623,1586,1.623,1587,1.514,1590,1.987,1831,3.432,1832,2.488,1833,5.692,1834,4.799,1835,4.799,1836,4.799,1837,4.799,1838,4.799,1839,4.799,1840,4.799,1841,3.353,1842,3.353,1843,3.353,1844,3.353,1845,3.353,1846,3.353,1847,3.353,1848,3.353,1849,3.353,1850,3.353,1851,3.353,1852,3.664,1853,3.353,1854,3.353,1855,3.353,1856,3.353,1857,3.353,1858,2.951,1859,2.488]],["title/classes/ResidentCompanyManagementFillableFields.html",[0,0.299,1859,3.202]],["body/classes/ResidentCompanyManagementFillableFields.html",[0,0.376,2,0.43,3,0.093,4,0.093,5,0.066,10,0.182,20,0.573,23,0.01,24,1.087,28,0.872,29,0.532,32,3.129,42,0.112,44,0.133,59,0.004,60,0.006,61,0.004,65,0.692,66,2.728,69,1.145,72,1.686,83,3.5,91,2.728,115,1.174,116,2.767,202,3.579,228,1.435,229,1.617,406,1.674,457,1.915,459,1.719,509,1.127,539,2.143,550,1.321,551,2.07,552,1.464,553,1.321,554,0.718,559,0.953,560,1.114,561,1.355,566,2.391,568,1.905,569,1.143,572,1.288,573,1.749,755,1.469,832,1.778,1086,1.778,1571,4.635,1582,1.842,1583,2.62,1584,1.911,1585,1.842,1586,1.842,1587,1.719,1590,2.256,1831,2.645,1832,2.824,1833,6.038,1834,5.091,1835,5.091,1836,5.091,1837,5.091,1838,5.091,1839,5.091,1840,5.091,1852,2.824,1858,3.35,1859,4.017,1860,3.807,1861,3.807,1862,3.807,1863,3.807,1864,3.807,1865,3.807,1866,3.807,1867,3.807,1868,3.807,1869,3.807,1870,3.807,1871,3.807,1872,3.807,1873,3.807]],["title/modules/ResidentCompanyModule.html",[256,1.484,274,2.444]],["body/modules/ResidentCompanyModule.html",[0,0.317,3,0.112,4,0.112,5,0.079,23,0.01,42,0.262,43,1.237,44,0.112,45,1.237,59,0.005,60,0.007,61,0.005,83,1.875,85,3.043,96,3.482,101,3.482,111,2.775,177,4.27,178,4.024,240,2.6,256,2.388,258,2.213,259,2.136,260,2.385,261,2.385,262,2.213,263,3.621,264,3.621,270,4.424,274,4.753,277,3.206,278,1.998,279,2.296,281,4.114,282,2.998,284,2.213,286,2.775,293,2.065,314,2.844,315,2.998,339,2.71,424,3.178,425,2.71,426,2.998,427,2.296,432,2.483,434,2.998,435,2.998,436,2.591,437,3.178,438,3.178,439,2.998,440,3.178,441,2.998,442,2.998,443,3.178,453,5.105,489,3.663,556,3.823,578,3.823,1342,3.663,1348,3.823,1349,3.663,1482,3.663,1570,4.27,1597,5.151,1667,4.27,1822,4.024,1823,4.024,1824,4.024,1825,4.024,1826,4.024,1827,4.024,1829,4.923,1831,4.27,1874,4.024,1875,4.024,1876,4.024,1877,4.573,1878,4.573,1879,7.422,1880,4.573,1881,4.573,1882,4.573,1883,4.27,1884,4.573,1885,4.573,1886,4.573]],["title/classes/ResidentCompanyTechnical.html",[0,0.299,1883,2.998]],["body/classes/ResidentCompanyTechnical.html",[0,0.35,2,0.391,3,0.085,4,0.085,5,0.06,10,0.165,20,0.568,23,0.01,24,1.061,28,0.84,29,0.528,32,3.072,42,0.102,44,0.124,59,0.004,60,0.006,61,0.004,65,0.646,66,2.609,69,1.163,70,1.759,72,1.759,83,3.47,91,2.609,115,1.558,116,2.848,202,3.423,228,1.46,229,1.565,406,1.601,457,2.111,459,1.561,509,1.067,533,1.417,535,1.462,539,2.037,548,1.51,550,1.456,551,2.037,552,1.366,553,1.232,554,0.652,559,1.494,560,1.745,561,1.643,565,3.399,566,2.468,568,1.822,569,1.517,572,1.201,573,1.656,755,1.334,832,1.615,922,3.912,1086,1.615,1405,2.768,1571,4.595,1582,1.673,1583,2.444,1584,1.735,1585,1.673,1586,1.673,1587,1.561,1590,2.048,1834,4.869,1835,4.869,1836,4.869,1837,4.869,1838,2.564,1839,4.869,1840,4.869,1852,4.869,1883,3.509,1887,2.564,1888,5.25,1889,3.456,1890,3.456,1891,3.456,1892,3.456,1893,3.456,1894,3.456,1895,3.456,1896,3.456,1897,3.456,1898,3.456,1899,3.456,1900,3.456,1901,3.456,1902,3.456,1903,3.456,1904,3.042,1905,2.564]],["title/classes/ResidentCompanyTechnicalFillableFields.html",[0,0.299,1905,3.202]],["body/classes/ResidentCompanyTechnicalFillableFields.html",[0,0.383,2,0.442,3,0.096,4,0.096,5,0.067,10,0.187,20,0.571,23,0.01,24,1.078,28,0.881,29,0.532,32,3.144,42,0.115,44,0.135,59,0.004,60,0.006,61,0.004,65,0.705,66,2.76,69,1.154,72,1.675,83,3.492,91,2.76,115,1.205,116,2.75,202,3.621,228,1.452,229,1.631,406,1.694,457,1.951,459,1.764,509,1.143,539,2.112,550,1.346,551,2.064,552,1.492,553,1.346,554,0.737,559,0.978,560,1.143,561,1.381,566,2.258,568,1.927,569,1.174,572,1.312,573,1.774,755,1.508,832,1.825,1086,1.825,1571,4.625,1582,1.891,1583,2.669,1584,1.961,1585,1.891,1586,1.891,1587,1.764,1590,2.315,1834,5.151,1835,5.151,1836,5.151,1837,5.151,1838,4.742,1839,5.151,1840,5.151,1852,4.091,1883,2.715,1887,2.899,1888,3.438,1904,3.438,1905,4.091,1906,3.907,1907,3.907,1908,3.907,1909,3.907,1910,3.907,1911,3.907,1912,3.907,1913,3.907,1914,3.907,1915,3.907,1916,3.907,1917,3.907,1918,3.907]],["title/classes/Role.html",[0,0.299,200,2.088]],["body/classes/Role.html",[0,0.469,2,0.598,3,0.129,4,0.129,5,0.091,10,0.252,20,0.548,23,0.01,24,0.924,28,0.976,29,0.527,42,0.156,44,0.166,59,0.006,60,0.008,61,0.006,65,0.864,69,1.226,70,1.697,200,3.271,228,1.414,229,1.685,406,1.916,509,1.332,533,2.167,535,2.236,539,1.828,548,2.309,550,1.29,551,1.818,552,1.828,553,1.649,554,0.996,559,1.865,560,2.179,561,1.966,563,3.157,565,3.051,566,2.422,568,2.18,569,2.03,572,1.607,573,1.876,1300,4.234,1919,3.922,1920,5.285,1921,5.285,1922,5.285,1923,5.285,1924,5.285,1925,3.922]],["title/classes/RoleFillableFields.html",[0,0.299,1925,3.202]],["body/classes/RoleFillableFields.html",[0,0.494,2,0.649,3,0.141,4,0.141,5,0.099,10,0.274,20,0.481,23,0.01,24,0.96,28,1.001,29,0.513,42,0.169,44,0.174,59,0.006,60,0.008,61,0.006,65,0.91,69,1.143,200,2.777,228,1.489,229,1.736,406,1.974,509,1.026,539,1.925,550,1.4,551,1.888,552,1.925,553,1.737,554,1.082,559,1.437,560,1.679,561,1.782,563,2.681,566,2.195,568,2.246,569,1.724,572,1.693,573,1.976,1300,4.596,1919,4.257,1925,5.28,1926,5.738,1927,5.738]],["title/injectables/SchedulerService.html",[333,1.444,1928,3.456]],["body/injectables/SchedulerService.html",[0,0.43,3,0.152,4,0.152,5,0.107,10,0.296,14,3.181,20,0.418,23,0.01,31,2.997,42,0.22,43,1.675,44,0.152,59,0.007,60,0.008,61,0.007,65,0.953,253,3.181,298,4.96,333,2.495,334,3.109,385,3.257,457,2.191,1928,5.972,1929,5.449,1930,8.303,1931,7.456,1932,6.192,1933,6.192,1934,6.192,1935,6.192,1936,6.192,1937,5.449,1938,6.192,1939,6.192]],["title/classes/SearchResidentCompanyPayload.html",[0,0.299,1626,3.202]],["body/classes/SearchResidentCompanyPayload.html",[0,0.326,2,0.355,3,0.077,4,0.077,5,0.054,10,0.15,20,0.573,23,0.01,24,0.777,29,0.528,32,2.812,42,0.184,44,0.077,46,3.893,59,0.003,60,0.005,61,0.003,65,0.601,69,1.27,70,1.774,71,3.588,72,1.276,77,3.605,78,1.05,81,3.477,83,3.493,85,3.493,86,2.18,97,4.182,115,2.71,126,2.76,136,2.76,149,2.76,165,3.695,167,4.658,171,2.512,173,2.76,174,1.37,183,2.512,185,6.604,188,2.512,200,2.728,228,0.656,229,0.673,230,1.518,231,1.465,232,1.575,233,1.636,247,3.916,535,2.648,988,3.916,989,3.916,990,3.916,991,4.182,992,4.182,993,4.182,994,4.182,995,4.182,996,4.514,998,3.34,1001,2.76,1296,4.182,1354,3.916,1626,3.487,1940,6.826,1941,5.636,1942,5.636,1943,5.636,1944,5.636,1945,5.636,1946,3.137,1947,3.137,1948,3.137,1949,3.137,1950,3.137,1951,3.137,1952,3.137,1953,3.137,1954,3.137,1955,3.137,1956,3.137,1957,3.137,1958,3.137,1959,3.137,1960,3.137,1961,3.137,1962,3.137,1963,3.137,1964,3.137,1965,4.7,1966,3.137,1967,4.96,1968,3.137,1969,2.512,1970,3.137,1971,3.764,1972,4.7,1973,2.512,1974,3.137,1975,2.512,1976,2.76,1977,4.7,1978,3.137,1979,3.137,1980,3.137,1981,3.137,1982,3.137,1983,3.137,1984,3.137,1985,3.137,1986,4.7]],["title/classes/Site.html",[0,0.299,111,1.948]],["body/classes/Site.html",[0,0.469,2,0.598,3,0.129,4,0.129,5,0.091,10,0.252,20,0.548,23,0.01,24,0.924,28,0.976,29,0.527,42,0.156,44,0.166,59,0.006,60,0.008,61,0.006,65,0.864,69,1.226,70,1.697,111,3.051,228,1.414,229,1.685,406,1.916,509,1.332,533,2.167,535,2.236,539,1.828,548,2.309,550,1.29,551,1.818,552,1.828,553,1.649,554,0.996,559,1.865,560,2.179,561,1.966,563,3.157,565,3.051,566,2.422,568,2.18,569,2.03,572,1.607,573,1.876,1304,3.922,1987,3.922,1988,5.285,1989,5.285,1990,5.285,1991,5.285,1992,5.285,1993,3.922]],["title/classes/SiteFillableFields.html",[0,0.299,1993,3.202]],["body/classes/SiteFillableFields.html",[0,0.494,2,0.649,3,0.141,4,0.141,5,0.099,10,0.274,20,0.481,23,0.01,24,0.96,28,1.001,29,0.513,42,0.169,44,0.174,59,0.006,60,0.008,61,0.006,65,0.91,69,1.143,111,2.591,228,1.489,229,1.736,406,1.974,509,1.026,539,1.925,550,1.4,551,1.888,552,1.925,553,1.737,554,1.082,559,1.437,560,1.679,561,1.782,563,2.681,566,2.195,568,2.246,569,1.724,572,1.693,573,1.976,1304,4.257,1987,4.257,1993,5.28,1994,5.738,1995,5.738]],["title/classes/Sponsor.html",[0,0.299,483,2.557]],["body/classes/Sponsor.html",[0,0.48,2,0.783,3,0.17,4,0.17,5,0.119,23,0.009,44,0.17,59,0.008,60,0.009,61,0.008,483,4.718,1996,6.092]],["title/controllers/SponsorController.html",[238,1.825,1997,3.202]],["body/controllers/SponsorController.html",[0,0.324,3,0.114,4,0.114,5,0.081,10,0.223,11,2.086,14,1.857,20,0.421,22,2.03,23,0.01,29,0.385,42,0.23,43,1.264,44,0.114,45,1.687,59,0.005,60,0.007,61,0.005,70,1.304,78,1.563,85,1.915,111,3.168,238,1.976,240,1.976,244,3.475,245,3.748,248,3.695,249,5.206,252,3.246,253,2.479,293,2.109,348,2.906,358,3.532,362,4.657,367,4.437,368,4.437,370,4.545,372,3.905,373,4.332,394,3.532,395,4.851,396,2.906,406,1.827,427,2.345,453,4.158,474,5.783,483,4.755,766,4.657,767,4.087,791,4.087,955,3.466,1624,7.491,1639,3.742,1647,4.994,1655,4.111,1997,4.626,1998,4.111,1999,4.672,2000,7.486,2001,4.672,2002,6.234,2003,4.672,2004,8.023,2005,4.672,2006,4.672,2007,4.6,2008,4.111,2009,4.672,2010,4.672,2011,4.672,2012,4.672,2013,4.672]],["title/modules/SponsorModule.html",[256,1.484,275,2.998]],["body/modules/SponsorModule.html",[0,0.365,3,0.129,4,0.129,5,0.091,23,0.01,42,0.251,43,1.422,44,0.129,45,1.422,59,0.006,60,0.007,61,0.006,85,2.155,177,4.679,240,2.848,256,2.556,258,2.544,259,2.455,260,2.742,261,2.742,262,2.544,263,3.876,264,2.742,270,4.575,274,4.695,275,6.037,277,3.512,278,2.296,279,2.639,281,4.403,282,3.446,284,2.544,286,3.04,287,4.625,293,2.373,314,3.269,315,3.446,424,3.652,425,3.115,426,3.446,427,2.639,434,3.446,435,3.446,436,2.977,437,3.652,438,3.652,439,3.446,440,3.652,441,3.446,442,3.446,443,3.652,1482,4.21,1997,5.513,2007,5.433,2008,4.625,2014,4.625,2015,5.256,2016,4.625,2017,5.256,2018,5.256]],["title/injectables/SponsorService.html",[333,1.444,2007,2.829]],["body/injectables/SponsorService.html",[0,0.461,3,0.163,4,0.163,5,0.115,22,2.163,23,0.01,42,0.196,43,1.798,44,0.163,45,1.798,59,0.007,60,0.009,61,0.007,333,2.601,334,3.336,483,3.938,2007,5.097,2019,5.848,2020,6.645,2021,5.322]],["title/classes/TechnologyStage.html",[0,0.299,1348,2.684]],["body/classes/TechnologyStage.html",[0,0.465,2,0.591,3,0.128,4,0.128,5,0.09,10,0.25,20,0.546,23,0.01,24,0.919,28,0.973,29,0.526,42,0.154,44,0.164,59,0.006,60,0.007,61,0.006,65,0.858,69,1.223,70,1.691,228,1.403,229,1.678,406,1.908,509,1.325,533,2.143,535,2.211,539,1.815,548,2.283,550,1.275,551,1.808,552,1.815,553,1.637,554,0.985,559,1.855,560,2.168,561,1.958,563,3.135,565,3.03,566,2.412,568,2.171,569,2.015,572,1.596,573,1.863,1348,4.173,2022,6.14,2023,3.878,2024,5.227,2025,5.227,2026,5.227,2027,5.227,2028,5.227,2029,4.6,2030,3.878]],["title/classes/TechnologyStageFillableFields.html",[0,0.299,2030,3.202]],["body/classes/TechnologyStageFillableFields.html",[0,0.492,2,0.645,3,0.14,4,0.14,5,0.098,10,0.272,20,0.479,23,0.01,24,0.957,28,0.999,29,0.512,42,0.168,44,0.174,59,0.006,60,0.008,61,0.006,65,0.906,69,1.14,228,1.483,229,1.732,406,1.97,509,1.02,539,1.918,550,1.392,551,1.883,552,1.918,553,1.73,554,1.075,559,1.428,560,1.668,561,1.775,563,2.664,566,2.187,568,2.241,569,1.713,572,1.686,573,1.968,1348,3.547,2022,5.724,2023,4.231,2029,5.019,2030,5.26,2031,5.703,2032,5.703]],["title/classes/TrimStringsPipe.html",[0,0.299,2033,3.456]],["body/classes/TrimStringsPipe.html",[0,0.355,1,6.298,2,0.579,3,0.125,4,0.125,5,0.088,10,0.245,11,2.216,12,7.371,13,7.371,14,3.085,15,5.828,16,5.828,17,5.828,18,5.879,19,6.829,20,0.566,22,2.727,23,0.01,24,0.822,25,4.507,27,2.843,28,0.967,29,0.479,30,2.689,31,3.889,32,1.919,33,4.507,34,5.305,35,5.828,37,5.828,38,4.507,40,6.459,42,0.151,44,0.125,45,1.792,46,3.186,59,0.006,60,0.007,61,0.006,197,2.238,198,3.559,712,3.925,2033,5.305,2034,6.459,2035,4.507,2036,5.122,2037,5.122,2038,8.035,2039,5.122,2040,5.122,2041,5.122,2042,5.122,2043,5.122,2044,5.122,2045,5.122]],["title/interfaces/UniqueValidationArguments.html",[708,2.684,2046,3.202]],["body/interfaces/UniqueValidationArguments.html",[0,0.462,3,0.127,4,0.127,5,0.089,8,3.215,10,0.247,14,2.055,23,0.01,24,0.915,28,0.622,29,0.319,31,2.502,42,0.229,43,1.398,44,0.163,45,1.802,46,3.215,47,3.475,55,1.937,59,0.006,60,0.007,61,0.006,65,0.852,72,1.054,174,2.91,175,3.215,253,2.055,284,2.502,333,2.229,350,2.818,408,2.258,554,0.974,595,4.368,646,3.592,708,3.215,710,4.14,712,3.948,713,5.979,714,5.599,716,3.835,717,4.833,718,4.943,719,4.943,720,4.943,721,4.943,722,4.943,723,5.41,724,4.943,725,3.835,726,3.835,727,3.835,728,3.835,729,5.47,730,4.943,731,3.835,732,3.835,733,5.122,734,3.835,739,3.835,740,3.835,742,3.835,743,5.47,744,3.389,745,3.835,746,3.592,2046,5.47,2047,3.592,2048,5.905,2049,4.14]],["title/injectables/UniqueValidator.html",[333,1.444,595,2.829]],["body/injectables/UniqueValidator.html",[0,0.438,3,0.117,4,0.117,5,0.082,8,2.96,10,0.227,11,2.112,14,1.892,20,0.478,22,2.055,23,0.01,24,1.001,27,2.668,28,0.908,29,0.466,30,2.369,31,3.054,42,0.222,43,1.287,44,0.155,45,1.707,46,2.96,47,3.292,55,1.783,59,0.005,60,0.007,61,0.005,72,0.97,174,2.757,175,2.96,253,1.892,284,2.303,333,2.112,334,2.389,336,2.303,350,3.19,390,4.138,408,2.079,554,0.897,595,4.643,646,4.92,708,2.96,712,2.82,713,5.984,714,4.385,716,3.531,717,5.288,718,4.683,719,4.683,720,4.683,721,4.683,722,4.683,723,5.24,724,4.683,725,3.531,726,4.683,727,5.596,728,3.531,729,5.254,730,4.683,731,3.531,732,3.531,733,4.92,734,3.531,735,3.812,739,3.531,740,4.683,742,3.531,743,5.254,744,3.12,745,3.531,746,3.306,747,5.554,748,4.188,2046,5.596,2047,3.306,2048,3.812,2049,3.812,2050,4.758,2051,4.758,2052,4.758]],["title/classes/UpdateOrderProductDto.html",[0,0.299,1444,2.998]],["body/classes/UpdateOrderProductDto.html",[0,0.347,2,0.566,3,0.123,4,0.123,5,0.086,10,0.239,20,0.563,23,0.01,24,0.954,29,0.514,32,2.882,42,0.147,44,0.123,59,0.006,60,0.007,61,0.006,65,0.834,69,0.964,70,1.742,71,3.524,72,1.821,77,3.573,78,1.674,81,3.415,112,3.786,115,2.523,116,2.883,532,4.357,624,6.766,626,4.514,627,4.758,628,4.301,629,5.385,630,5.385,631,4.758,1444,4.533,2053,4.403,2054,5.004,2055,5.004,2056,5.004,2057,5.004,2058,5.004,2059,5.004,2060,5.004]],["title/classes/UpdateResidentCompanyStatusPayload.html",[0,0.299,1635,3.202]],["body/classes/UpdateResidentCompanyStatusPayload.html",[0,0.377,2,0.615,3,0.133,4,0.133,5,0.094,10,0.26,20,0.536,23,0.01,29,0.505,32,2.973,42,0.16,44,0.133,59,0.006,60,0.008,61,0.006,65,0.88,66,3.002,69,1.017,70,1.66,71,3.356,72,1.403,77,3.462,78,1.82,81,3.253,83,3.356,85,3.356,115,2.579,228,1.138,229,1.167,230,2.632,231,2.541,232,2.73,233,2.837,293,3.696,988,5.246,989,5.246,990,5.246,998,4.474,1635,5.106,2061,6.556,2062,4.356,2063,5.438,2064,5.438,2065,5.438,2066,5.438]],["title/classes/UpdateSponsorDto.html",[0,0.299,2067,3.456]],["body/classes/UpdateSponsorDto.html",[0,0.463,2,0.755,3,0.164,4,0.164,5,0.115,23,0.01,42,0.23,44,0.164,59,0.007,60,0.009,61,0.007,639,4.954,641,5.348,654,3.782,712,3.956,1336,5.348,2067,6.245,2068,5.875,2069,6.676,2070,6.676,2071,6.676,2072,6.676]],["title/classes/UpdateUserPayload.html",[0,0.299,2073,3.202]],["body/classes/UpdateUserPayload.html",[0,0.413,2,0.493,3,0.107,4,0.107,5,0.075,10,0.208,20,0.568,23,0.01,24,1.061,29,0.524,42,0.214,44,0.107,59,0.005,60,0.007,61,0.005,65,0.761,66,2.694,69,1.162,70,1.758,71,3.555,72,1.765,77,3.588,78,1.459,81,3.445,115,2.527,116,2.435,166,3.902,167,4.135,174,1.905,193,2.859,194,4.707,196,4.707,197,2.959,198,4.707,199,4.707,201,4.442,202,3.534,203,5.027,204,3.837,211,3.837,217,3.837,218,4.015,223,3.902,225,4.416,228,0.912,229,0.936,230,2.11,231,2.037,232,2.189,233,2.275,234,2.859,235,2.859,237,3.235,509,1.212,1015,3.837,1537,3.837,1538,3.493,2073,4.416,2074,6.794,2075,4.361,2076,4.361,2077,4.361,2078,4.361,2079,4.361,2080,4.361,2081,4.361,2082,4.361]],["title/classes/UploadPayload.html",[0,0.299,2083,3.456]],["body/classes/UploadPayload.html",[0,0.496,2,0.654,3,0.142,4,0.142,5,0.1,10,0.276,20,0.525,23,0.01,29,0.501,42,0.211,44,0.142,59,0.006,60,0.008,61,0.006,65,0.914,66,3.087,69,1.199,70,1.624,71,3.285,72,1.458,77,3.431,78,1.936,81,3.183,115,2.206,166,5.091,174,2.527,226,2.106,760,6.22,786,6.22,876,4.02,877,4.292,2083,5.729,2084,6.497,2085,4.634,2086,7.153,2087,5.785,2088,5.761,2089,5.785,2090,5.785]],["title/classes/User.html",[0,0.299,226,1.571]],["body/classes/User.html",[0,0.34,2,0.376,3,0.081,4,0.081,5,0.057,10,0.159,11,1.641,20,0.568,22,1.081,23,0.01,24,1.07,28,0.59,29,0.528,42,0.145,44,0.12,45,0.899,55,1.245,59,0.004,60,0.005,61,0.004,65,0.627,66,2.56,69,1.234,70,1.747,72,1.69,91,2.56,115,1.513,116,2.722,194,4.473,195,4.221,196,4.473,197,3.14,199,4.473,200,3.116,201,4.221,202,3.358,203,4.777,218,3.815,226,1.785,228,1.63,229,1.638,230,2.374,231,2.291,232,2.462,233,2.558,234,3.215,235,3.215,385,1.451,406,1.571,457,2.278,459,1.5,509,1.043,533,1.362,535,2.466,539,2.144,548,1.451,550,1.423,551,1.985,552,1.327,553,1.197,554,0.626,559,1.46,560,1.706,561,1.612,565,3.446,566,2.624,568,1.787,569,1.934,572,1.167,573,1.619,704,2.308,755,1.282,832,1.552,1086,1.552,1539,3.408,1582,1.608,1583,2.374,1584,1.668,1585,1.608,1586,1.608,1587,1.5,1613,2.778,1673,4.316,1681,3.215,2091,2.465,2092,5.666,2093,3.322,2094,3.322,2095,3.322,2096,3.322,2097,3.322,2098,3.322,2099,3.322,2100,3.322,2101,3.928,2102,4.316,2103,3.322,2104,3.322,2105,3.322,2106,3.322,2107,3.322,2108,3.322,2109,3.322,2110,3.322,2111,3.322,2112,2.923,2113,4.316,2114,2.308]],["title/controllers/UserController.html",[238,1.825,2115,3.202]],["body/controllers/UserController.html",[0,0.19,3,0.067,4,0.067,5,0.047,10,0.131,11,1.417,14,1.087,20,0.426,22,2.054,23,0.01,27,2.232,28,0.803,29,0.474,30,2.111,31,2.822,42,0.212,43,0.74,44,0.067,45,1.706,55,2.363,57,4.135,59,0.003,60,0.005,61,0.003,69,1.114,70,1.319,78,0.915,111,3.012,191,4.95,226,3.071,228,0.886,229,0.909,238,1.157,240,1.157,244,3.517,245,3.857,248,3.738,249,4.95,253,1.087,336,1.323,348,1.701,350,3.411,357,5.238,358,4.523,362,4.689,367,4.468,368,4.373,370,4.568,372,4.118,373,1.9,374,4.468,385,2.263,392,2.776,393,3.141,394,3.941,395,4.774,396,1.701,398,2.299,401,1.793,404,2.029,406,1.927,408,2.263,427,1.373,509,1.412,568,1.175,573,0.759,654,2.934,704,3.599,737,3.141,755,2.25,766,4.689,767,4.135,790,3.391,791,2.776,955,2.029,957,2.19,1007,4.383,1060,3.391,1258,3.141,1281,4.327,1283,3.141,1354,3.599,1433,5.343,1447,2.942,1464,2.407,1587,2.339,1610,2.407,1611,2.407,1612,3.725,1613,2.398,1617,2.407,1619,4.149,1620,5.871,1621,5.132,1632,2.407,1634,3.725,1639,2.19,1640,3.725,1645,2.407,1647,5.052,1649,2.407,1650,2.407,1651,2.407,1652,2.407,1664,2.407,2073,4.95,2115,3.141,2116,2.407,2117,2.735,2118,3.725,2119,3.725,2120,3.725,2121,3.725,2122,3.725,2123,2.407,2124,5.831,2125,2.735,2126,2.735,2127,6.494,2128,2.407,2129,2.735,2130,2.735,2131,2.735,2132,2.407,2133,2.735,2134,2.735,2135,2.407,2136,2.735,2137,4.558,2138,2.735,2139,2.735,2140,2.735,2141,2.735,2142,2.735,2143,2.735,2144,2.735,2145,2.735,2146,2.735,2147,2.735,2148,2.735,2149,2.735]],["title/classes/UserFillableFields.html",[0,0.299,2114,2.998]],["body/classes/UserFillableFields.html",[0,0.378,2,0.434,3,0.094,4,0.094,5,0.066,10,0.183,20,0.565,23,0.01,24,1.088,28,0.655,29,0.53,42,0.16,44,0.133,45,1.038,55,1.438,59,0.004,60,0.006,61,0.004,65,0.696,66,2.738,69,1.236,72,1.584,91,2.738,115,1.184,116,2.527,194,4.785,195,4.515,196,4.785,197,3.177,199,4.785,200,3.333,201,4.515,202,3.592,203,5.11,218,4.081,226,1.397,228,1.625,229,1.704,230,2.635,231,2.544,232,2.734,233,2.84,234,3.57,235,3.57,385,1.676,406,1.681,457,1.926,459,1.733,509,0.686,539,2.184,550,1.329,551,2.021,552,1.473,553,1.329,554,0.723,559,0.961,560,1.123,561,1.363,566,2.491,568,1.912,569,1.636,572,1.295,573,1.757,704,2.667,755,1.481,832,1.793,1086,1.793,1539,3.783,1582,1.857,1583,2.635,1584,1.927,1585,1.857,1586,1.857,1587,1.733,1613,2.174,1681,3.57,2091,2.847,2092,3.377,2101,3.074,2102,3.377,2112,3.377,2113,4.792,2114,3.783,2150,3.838,2151,3.838,2152,3.838,2153,3.838,2154,3.838,2155,3.838,2156,3.838,2157,3.838,2158,3.838,2159,3.838,2160,3.838,2161,3.838]],["title/modules/UserModule.html",[256,1.484,276,2.684]],["body/modules/UserModule.html",[0,0.339,3,0.12,4,0.12,5,0.084,23,0.01,42,0.256,43,1.321,44,0.12,45,1.321,59,0.005,60,0.007,61,0.005,85,2.002,226,2.337,240,2.715,256,2.467,258,2.363,259,2.281,260,2.547,261,2.547,262,2.363,263,3.741,264,3.741,270,4.496,274,4.602,276,5.442,277,3.348,278,2.133,279,2.451,281,4.25,282,3.201,284,2.363,286,2.898,314,3.037,315,3.201,339,2.893,398,4.725,422,5.326,424,3.392,425,2.893,426,3.201,427,2.451,432,2.651,433,4.296,434,3.201,435,3.201,436,2.766,437,3.392,438,3.392,439,3.201,440,3.392,441,3.201,442,3.201,443,3.392,1021,4.46,2115,5.321,2162,4.296,2163,4.882,2164,4.296,2165,4.296,2166,4.882,2167,4.296,2168,4.882,2169,4.882,2170,4.296,2171,4.882,2172,4.208,2173,4.296,2174,4.882]],["title/classes/UserToken.html",[0,0.299,2172,2.829]],["body/classes/UserToken.html",[0,0.455,2,0.57,3,0.123,4,0.123,5,0.087,10,0.241,20,0.554,23,0.01,24,0.957,28,0.606,29,0.528,42,0.149,44,0.161,59,0.006,60,0.007,61,0.006,65,0.838,69,1.264,70,1.714,228,1.371,229,1.759,391,4.797,406,1.882,457,2.319,509,1.302,533,2.066,535,2.132,539,1.773,548,2.201,550,1.777,551,1.951,552,1.773,553,1.599,554,0.95,559,1.823,560,2.131,561,1.931,565,2.959,566,2.379,568,2.022,569,1.969,572,1.559,573,1.82,2172,4.297,2175,6.191,2176,3.739,2177,6.177,2178,5.039,2179,5.039,2180,5.039,2181,5.039,2182,5.039,2183,5.039,2184,4.435,2185,3.739]],["title/classes/UserTokenFillableFields.html",[0,0.299,2185,3.202]],["body/classes/UserTokenFillableFields.html",[0,0.483,2,0.626,3,0.136,4,0.136,5,0.095,10,0.264,20,0.514,23,0.01,24,1.021,28,0.666,29,0.518,42,0.163,44,0.17,59,0.006,60,0.008,61,0.006,65,0.89,69,1.241,228,1.456,229,1.766,391,4.967,406,1.949,457,1.958,509,0.99,539,1.882,550,1.698,551,1.949,552,1.882,553,1.698,554,1.043,559,1.386,560,1.619,561,1.742,566,2.147,568,1.932,569,1.663,572,1.655,573,1.932,2172,3.629,2175,5.925,2176,4.107,2177,6.396,2184,4.871,2185,5.163,2186,5.535,2187,5.535,2188,5.535]],["title/injectables/UsersService.html",[333,1.444,398,2.343]],["body/injectables/UsersService.html",[0,0.104,3,0.131,4,0.037,5,0.026,10,0.072,11,0.866,14,1.819,20,0.461,22,2.174,23,0.01,24,0.763,27,2.412,28,0.862,29,0.436,30,2.281,42,0.187,43,0.406,44,0.037,45,2.122,47,4.387,48,0.934,55,2.809,59,0.002,60,0.003,61,0.002,69,0.964,72,0.306,85,0.615,91,2.655,195,1.697,197,2.184,200,1.651,226,3.253,228,0.957,229,1.15,244,3.384,245,3.858,253,1.819,278,1.998,284,0.727,293,1.54,321,2.073,333,0.866,334,0.754,336,1.252,350,3.493,351,2.073,353,2.277,355,2.073,357,3.933,358,3.595,370,4.678,372,3.556,380,2.277,384,2.732,385,3.383,390,2.236,391,4.567,394,3.933,398,1.405,401,0.984,406,1.22,408,3.466,425,0.89,432,0.815,448,2.277,450,1.321,451,4.401,453,3.175,463,4.401,468,4.401,475,2.277,489,1.203,508,1.321,509,1.364,510,3.569,512,4.401,513,4.401,515,4.708,518,3.569,520,1.321,554,0.283,573,0.947,654,3.207,755,1.93,816,2.073,860,3.569,868,1.321,882,3.569,1007,3.475,1021,3.723,1031,3.569,1033,3.001,1037,1.321,1074,1.321,1239,1.321,1244,2.531,1281,3.009,1354,3.178,1447,3.475,1485,4.715,1495,1.321,1587,1.54,1613,1.466,1619,4.924,1629,1.321,1975,2.073,2114,4.736,2118,2.277,2119,2.277,2120,2.277,2121,2.277,2122,2.277,2123,2.277,2128,2.277,2132,2.277,2135,2.277,2137,1.321,2167,1.321,2170,1.321,2172,0.984,2173,1.321,2177,2.732,2189,1.321,2190,2.588,2191,2.588,2192,2.588,2193,3.411,2194,3.411,2195,1.501,2196,1.501,2197,2.588,2198,1.501,2199,1.501,2200,2.588,2201,1.501,2202,4.055,2203,2.588,2204,1.501,2205,2.588,2206,1.501,2207,1.501,2208,2.588,2209,1.501,2210,1.321,2211,1.501,2212,1.501,2213,2.588,2214,2.588,2215,1.501,2216,2.588,2217,1.501,2218,3.001,2219,3.411,2220,1.501,2221,1.501,2222,1.501,2223,1.501,2224,1.501,2225,1.501,2226,1.501,2227,1.501,2228,1.501,2229,1.501,2230,1.501,2231,3.411,2232,4.715,2233,3.001,2234,1.501,2235,3.411,2236,1.501,2237,2.588,2238,1.501,2239,2.588,2240,1.501,2241,2.588,2242,1.501,2243,2.588,2244,2.588,2245,2.588,2246,2.588,2247,1.501,2248,1.501,2249,2.588,2250,2.588,2251,1.501,2252,1.501,2253,1.501,2254,1.501,2255,1.501,2256,1.501,2257,1.501,2258,1.501,2259,1.501,2260,4.574,2261,2.588,2262,1.501,2263,4.055,2264,3.569,2265,1.501,2266,1.501,2267,2.588,2268,2.588,2269,1.501,2270,1.501,2271,1.501,2272,1.501,2273,1.501,2274,4.055,2275,1.501,2276,3.411,2277,1.501,2278,1.501,2279,1.501,2280,3.411,2281,3.001,2282,1.321,2283,3.411,2284,2.588,2285,1.501,2286,1.501,2287,1.501,2288,1.501,2289,1.501,2290,1.501,2291,4.574,2292,2.588,2293,2.588,2294,4.055,2295,1.501,2296,1.501,2297,1.501,2298,1.501,2299,2.588,2300,1.501,2301,1.501,2302,1.501,2303,1.501,2304,1.501,2305,1.501,2306,1.501]],["title/coverage.html",[2307,4.733]],["body/coverage.html",[0,0.622,1,1.729,5,0.04,6,2.05,7,2.05,23,0.01,29,0.144,59,0.003,60,0.004,61,0.003,62,1.619,63,2.05,64,2.05,75,1.729,79,1.17,82,1.729,83,3.314,84,2.05,85,2.394,86,3.708,91,0.926,96,1.32,101,1.32,111,1.685,175,1.449,177,1.619,191,1.729,192,1.866,193,3.499,200,1.127,218,1.381,223,1.527,226,0.848,228,1.904,238,2.876,239,1.729,241,2.05,250,1.527,256,0.801,262,1.806,280,1.866,286,1.052,293,2.107,304,3.463,333,2.543,335,2.05,346,1.729,347,2.05,356,1.729,376,1.619,381,1.729,385,1.018,397,1.527,398,1.265,422,1.527,432,3.383,444,3.739,452,1.619,453,1.381,458,1.729,480,1.866,482,1.866,483,1.381,484,1.866,485,1.619,488,1.866,490,2.989,523,1.866,524,2.05,556,1.449,557,2.769,558,2.769,575,1.729,578,1.449,579,2.769,588,1.729,594,1.527,595,1.527,607,2.05,618,1.619,624,2.989,625,2.05,639,1.729,640,2.05,641,2.989,642,1.866,643,2.05,644,1.866,656,1.866,697,1.619,705,1.866,706,2.05,708,2.321,709,1.729,711,3.243,733,4.547,752,1.729,753,2.989,799,1.527,801,1.866,839,2.05,887,2.05,888,2.05,891,2.769,898,1.729,901,2.05,918,1.449,919,2.989,937,1.729,943,1.866,944,2.05,945,2.05,968,2.05,986,1.866,987,1.866,998,1.381,1007,1.619,1008,2.05,1016,2.05,1021,1.619,1022,4.275,1039,1.866,1041,1.866,1264,1.729,1265,2.05,1277,1.729,1348,1.449,1353,2.05,1372,2.769,1378,1.729,1381,2.989,1389,1.381,1397,1.729,1401,2.989,1402,2.989,1420,1.729,1421,1.729,1422,2.05,1424,1.527,1444,1.619,1452,1.527,1483,2.05,1532,2.05,1539,1.619,1540,2.05,1547,2.989,1554,1.729,1558,1.866,1559,2.05,1570,1.619,1571,3.692,1572,2.769,1589,1.729,1597,1.729,1598,2.05,1626,1.729,1631,2.05,1635,1.729,1667,1.619,1668,2.769,1682,1.729,1690,1.866,1691,2.989,1771,1.866,1772,2.989,1829,1.866,1831,1.619,1832,2.769,1859,1.729,1883,1.619,1887,2.769,1905,1.729,1919,2.769,1925,1.729,1928,1.866,1929,2.05,1940,1.866,1969,1.866,1971,2.989,1973,1.866,1987,2.769,1993,1.729,1996,2.05,1997,1.729,1998,2.05,2007,1.527,2019,2.05,2022,2.769,2023,2.769,2030,1.729,2033,1.866,2034,2.05,2035,2.05,2046,1.729,2047,3.243,2053,2.05,2061,2.989,2062,1.866,2067,1.866,2068,2.05,2073,1.729,2074,1.866,2083,1.866,2084,1.866,2085,1.866,2088,1.729,2091,2.769,2114,1.619,2115,1.729,2116,2.05,2172,1.527,2175,2.769,2176,2.769,2185,1.729,2189,2.05,2307,1.866,2308,2.05,2309,2.33,2310,2.33,2311,2.05,2312,2.05,2313,7.287,2314,8.603,2315,2.05,2316,2.05,2317,3.284,2318,4.697,2319,2.05,2320,3.284,2321,2.05,2322,2.05,2323,2.989,2324,2.05,2325,7.484,2326,5.337,2327,6.8,2328,6.23,2329,6.8,2330,5.839,2331,2.05,2332,3.284,2333,2.05,2334,2.05,2335,2.05,2336,2.33,2337,2.33,2338,3.731,2339,2.33,2340,3.731,2341,2.33,2342,3.284,2343,3.731,2344,2.33,2345,2.33,2346,3.731,2347,3.731,2348,6.544,2349,2.33,2350,2.33,2351,3.739,2352,2.33,2353,2.33,2354,3.731,2355,2.33,2356,2.33,2357,3.731,2358,2.33,2359,2.33,2360,2.33,2361,3.731,2362,2.33,2363,2.33,2364,2.33,2365,2.33,2366,2.33,2367,2.33,2368,2.33,2369,2.33,2370,2.33,2371,3.731,2372,3.731,2373,3.731,2374,2.33,2375,2.33,2376,2.33,2377,2.33,2378,4.697,2379,2.05,2380,2.05,2381,2.05,2382,2.05,2383,2.05,2384,2.05,2385,2.33,2386,2.33]],["title/dependencies.html",[259,2.427,2387,3.594]],["body/dependencies.html",[0,0.499,23,0.01,34,4.682,43,1.581,59,0.006,60,0.008,61,0.006,78,1.956,174,2.553,259,2.731,284,2.829,298,4.682,300,5.144,301,4.682,401,4.719,425,3.464,427,2.934,436,3.311,554,1.102,618,4.061,795,5.144,858,5.144,859,5.144,913,5.144,977,6.335,2101,4.682,2388,5.845,2389,5.845,2390,5.845,2391,7.8,2392,5.845,2393,5.845,2394,7.198,2395,5.845,2396,5.845,2397,5.845,2398,5.845,2399,5.845,2400,5.845,2401,5.845,2402,5.845,2403,5.845,2404,5.144,2405,5.845,2406,5.845,2407,5.845,2408,5.845,2409,5.845,2410,5.845,2411,5.845,2412,5.845,2413,5.845,2414,5.144,2415,5.845,2416,5.845,2417,5.845,2418,5.845,2419,5.845]],["title/miscellaneous/enumerations.html",[2420,2.13,2421,4.572]],["body/miscellaneous/enumerations.html",[10,0.311,23,0.01,31,4.268,59,0.007,60,0.009,61,0.007,361,5.739,364,5.739,367,3.865,368,3.865,766,4.057,1244,4.839,1768,5.739,2420,3.865,2421,5.739,2422,7.69,2423,6.522,2424,6.522,2425,6.522,2426,6.522,2427,6.522,2428,6.522,2429,6.522,2430,6.522,2431,6.522]],["title/miscellaneous/functions.html",[2420,2.13,2432,4.572]],["body/miscellaneous/functions.html",[10,0.277,23,0.01,27,2.952,28,1.004,30,2.792,59,0.006,60,0.008,61,0.006,175,4.46,223,4.701,262,4.114,697,4.983,711,4.036,714,4.983,723,6.133,741,4.653,1969,5.744,1971,6.507,1973,5.744,2047,4.036,2049,4.653,2210,7.344,2323,4.653,2324,5.112,2331,5.112,2332,7.149,2333,5.112,2334,5.112,2335,6.311,2420,3.442,2432,5.112,2433,5.112,2434,5.809,2435,5.112,2436,5.809,2437,5.809,2438,5.809,2439,5.112,2440,5.809,2441,7.779,2442,5.809,2443,5.809]],["title/index.html",[10,0.172,2444,3.163,2445,3.163]],["body/index.html",[5,0.116,23,0.01,59,0.005,60,0.007,61,0.005,72,1.209,197,1.896,244,1.726,255,4.431,256,1.493,259,2.028,286,1.96,314,2.7,317,3.82,319,5.22,329,3.82,341,5.413,352,3.82,370,2.459,385,2.591,411,3.82,436,3.361,474,3.016,554,1.274,644,3.477,654,3.829,660,3.82,663,5.819,717,2.846,959,5.22,1244,3.221,1245,3.82,1246,5.413,1247,3.477,1258,3.221,1260,3.82,1283,3.221,1336,3.477,1432,4.752,1937,3.82,2233,6.393,2264,3.82,2281,3.82,2307,3.477,2313,3.82,2342,3.82,2404,3.82,2414,5.22,2446,4.34,2447,4.34,2448,4.34,2449,8.395,2450,5.932,2451,7.606,2452,4.34,2453,5.932,2454,4.34,2455,5.932,2456,4.752,2457,4.34,2458,4.34,2459,5.932,2460,5.932,2461,4.34,2462,4.34,2463,4.34,2464,7.264,2465,4.34,2466,4.34,2467,5.932,2468,4.34,2469,4.34,2470,5.932,2471,4.34,2472,5.932,2473,4.34,2474,5.932,2475,7.606,2476,5.932,2477,4.34,2478,4.34,2479,4.34,2480,4.34,2481,4.34,2482,5.932,2483,8.038,2484,4.34,2485,6.758,2486,4.34,2487,4.34,2488,4.34,2489,4.34,2490,4.34,2491,5.932,2492,4.34,2493,4.34,2494,5.932,2495,4.34,2496,6.758,2497,4.34,2498,4.34,2499,4.34,2500,6.758,2501,5.932,2502,4.34,2503,4.34,2504,3.82,2505,4.34,2506,4.34,2507,4.34,2508,4.34,2509,3.82,2510,4.34,2511,6.758,2512,4.34,2513,4.34,2514,4.34,2515,4.34,2516,4.34,2517,7.852,2518,7.852,2519,4.34,2520,4.34,2521,4.34,2522,4.34,2523,4.34,2524,4.34,2525,4.34,2526,4.34,2527,4.34,2528,4.34,2529,4.34,2530,5.932,2531,5.932,2532,4.34,2533,4.34,2534,4.34,2535,5.932,2536,4.34,2537,4.34,2538,4.34,2539,4.34,2540,4.34,2541,4.34,2542,4.34,2543,4.34,2544,5.932,2545,4.34,2546,5.932,2547,4.34,2548,4.34,2549,4.34,2550,4.34,2551,4.34,2552,4.34,2553,4.34]],["title/license.html",[2444,3.163,2445,3.163,2554,3.163]],["body/license.html",[23,0.008,59,0.006,60,0.008,61,0.006,279,2.881,401,3.762,717,3.762,1029,5.049,1159,5.049,1229,5.049,1246,5.7,2021,4.596,2232,5.049,2308,5.049,2504,6.808,2509,5.049,2554,5.049,2555,7.116,2556,7.736,2557,5.738,2558,5.738,2559,5.738,2560,7.116,2561,5.738,2562,5.738,2563,5.738,2564,5.738,2565,5.738,2566,5.738,2567,7.116,2568,8.752,2569,5.738,2570,5.738,2571,5.738,2572,5.738,2573,7.116,2574,5.738,2575,5.738,2576,5.738,2577,5.738,2578,5.738,2579,5.738,2580,5.738,2581,5.738,2582,7.116,2583,5.738,2584,5.738,2585,5.738,2586,5.738,2587,5.738,2588,5.738,2589,7.116,2590,7.116,2591,5.738,2592,5.738,2593,5.738,2594,5.738,2595,5.738,2596,5.738,2597,5.738,2598,5.738,2599,5.738,2600,5.738,2601,5.738,2602,5.738,2603,5.738,2604,5.738,2605,5.738,2606,5.738,2607,5.738,2608,5.738,2609,5.738,2610,5.738,2611,5.738,2612,5.738,2613,5.738,2614,5.738,2615,5.738]],["title/modules.html",[258,2.859]],["body/modules.html",[23,0.008,59,0.007,60,0.008,61,0.007,257,4.666,258,3.044,268,4.37,269,4.37,270,3.415,271,4.37,272,4.123,273,4.37,274,3.563,275,4.37,276,3.912,2616,8.93,2617,8.93,2618,8.93,2619,8.93]],["title/overview.html",[2620,5.2]],["body/overview.html",[2,0.486,23,0.01,59,0.005,60,0.007,61,0.005,230,2.081,240,1.819,250,4.41,256,1.479,257,6.597,258,2.081,259,2.009,260,2.243,261,2.243,262,2.081,263,2.243,264,2.243,265,3.785,266,3.785,267,3.785,268,6.035,269,5.571,270,4.498,271,5.823,272,5.257,273,5.674,274,4.832,275,5.756,276,5.374,277,3.075,278,1.879,279,2.159,286,3.267,334,2.159,397,4.41,398,4.354,419,3.785,421,3.785,422,4.744,452,5.571,453,4.752,592,3.785,593,3.785,594,4.41,595,4.41,600,3.785,601,3.785,710,3.445,799,5.257,833,3.785,835,3.785,836,3.785,1338,3.785,1339,3.785,1340,3.785,1452,5.257,1473,3.785,1475,3.785,1476,3.785,1874,3.785,1875,3.785,1876,3.785,2007,4.41,2014,3.785,2016,3.785,2162,3.785,2164,3.785,2165,3.785,2282,3.785,2620,3.785,2621,4.301,2622,4.301,2623,4.301]],["title/miscellaneous/typealiases.html",[2420,2.13,2624,5.195]],["body/miscellaneous/typealiases.html",[10,0.141,23,0.01,29,0.182,59,0.003,60,0.005,61,0.003,83,3.091,85,2.928,86,4.531,192,2.358,193,3.973,218,4.071,226,1.071,228,1.831,229,1.933,230,3.562,231,3.438,232,3.695,233,3.839,234,3.555,235,3.555,293,2.944,432,2.432,457,1.041,459,3.224,557,2.184,558,3.323,568,2.435,573,2.375,579,2.184,711,2.045,715,3.588,755,2.755,832,3.336,876,2.045,877,2.184,891,2.184,987,2.358,998,4.557,1086,3.336,1372,2.184,1571,3.291,1572,3.323,1582,3.456,1583,3.922,1584,3.448,1585,3.456,1586,3.456,1587,3.224,1668,3.323,1691,4.343,1772,4.343,1832,3.323,1887,3.323,1919,2.184,1940,2.358,1967,3.942,1975,2.358,1976,2.59,1987,2.184,2022,2.184,2023,3.323,2047,2.045,2048,3.588,2061,2.358,2062,3.588,2074,2.358,2084,2.358,2085,3.588,2088,3.323,2091,2.184,2175,2.184,2176,3.323,2351,2.358,2420,1.744,2435,2.59,2439,2.59,2625,2.943,2626,2.943,2627,6.06,2628,4.479,2629,4.479,2630,2.943,2631,2.943,2632,2.943,2633,2.943,2634,2.943,2635,2.59,2636,2.943,2637,2.943,2638,2.943,2639,6.06,2640,2.59,2641,4.479,2642,2.943]],["title/miscellaneous/variables.html",[2420,2.13,2456,4.161]],["body/miscellaneous/variables.html",[5,0.031,10,0.085,23,0.01,24,0.682,28,1.054,29,0.473,31,3.802,47,2.865,55,1.126,59,0.002,60,0.003,61,0.002,65,0.229,72,1.849,85,2.699,91,1.545,111,1.755,115,2.767,197,0.782,218,1.782,226,1.847,228,0.629,229,0.834,230,1.881,231,1.815,232,1.951,233,0.934,234,1.174,235,1.174,242,2.7,244,0.712,255,2.984,256,1.034,278,1.313,280,1.434,303,3.113,304,4.076,305,3.113,341,2.408,385,0.782,444,1.434,457,2.78,458,2.883,459,1.357,466,4.006,480,2.408,482,2.408,483,3.776,484,2.408,488,2.408,490,3.646,491,2.646,492,2.646,501,1.576,509,1.341,618,2.089,626,3.811,654,4.841,704,3.163,744,1.971,746,2.089,753,1.434,755,3.297,763,2.408,796,1.576,801,2.408,802,1.576,803,2.646,804,2.646,805,1.576,806,1.576,807,1.576,808,1.576,876,1.244,877,1.329,998,1.782,1022,1.434,1038,1.576,1039,2.408,1040,1.576,1041,2.408,1042,1.576,1057,6.519,1209,1.576,1233,1.576,1240,1.576,1247,1.434,1258,2.231,1304,4.546,1447,5.938,1615,5.392,2021,6.896,2088,2.231,2127,6.519,2218,5.392,2311,1.576,2312,2.646,2315,1.576,2316,1.576,2317,4.006,2318,4.006,2319,2.646,2320,4.006,2321,2.646,2322,1.576,2323,1.434,2351,1.434,2378,1.576,2379,2.646,2380,2.646,2381,2.646,2382,2.646,2383,1.576,2384,2.646,2420,1.061,2433,1.576,2456,1.434,2635,2.646,2640,1.576,2643,1.79,2644,1.79,2645,3.006,2646,3.886,2647,1.79,2648,1.79,2649,1.79,2650,4.552,2651,1.79,2652,4.552,2653,1.79,2654,1.79,2655,1.79,2656,1.79,2657,1.79,2658,1.79,2659,1.79,2660,1.79,2661,1.79,2662,1.79,2663,1.79,2664,1.79,2665,1.79,2666,6.127,2667,8.637,2668,3.006,2669,4.552,2670,6.127,2671,6.127,2672,4.552,2673,6.127,2674,1.79,2675,1.79,2676,1.79,2677,1.79,2678,1.79,2679,1.79,2680,1.79,2681,3.006,2682,1.79,2683,1.79,2684,1.79,2685,1.79,2686,3.006,2687,1.79,2688,1.79,2689,1.79,2690,1.79,2691,1.79,2692,1.79,2693,1.79,2694,1.79,2695,1.79,2696,1.79]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":228,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0'::status_enum",{"_index":672,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["0.1.13",{"_index":2411,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["0.2.30",{"_index":2417,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2406,"title":{},"body":{"dependencies.html":{}}}],["0.4.3",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2314,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/49",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["0/53",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["0/55",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["0/58",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1169,"title":{},"body":{"classes/Mail.html":{}}}],["0px!important",{"_index":1171,"title":{},"body":{"classes/Mail.html":{}}}],["0})@isnumber()@min(0)@isoptional",{"_index":1359,"title":{},"body":{"classes/MasterPayload.html":{}}}],["1",{"_index":229,"title":{},"body":{"classes/AddUserPayload.html":{},"injectables/AuthService.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/Mail.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.1.11",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2282,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["100",{"_index":1084,"title":{},"body":{"classes/Mail.html":{},"classes/MasterPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["100})@isnumber()@min(1)@max(100)@isoptional",{"_index":1357,"title":{},"body":{"classes/MasterPayload.html":{}}}],["10px",{"_index":1170,"title":{},"body":{"classes/Mail.html":{}}}],["110",{"_index":1769,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["12.5.0",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2622,"title":{},"body":{"overview.html":{}}}],["13/15",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["1611484925515",{"_index":2526,"title":{},"body":{"index.html":{}}}],["1\\',\\'0\\',\\'1\\',\\'2\\',\\'3\\',\\'4\\',\\'96\\',\\'97\\',\\'98\\',\\'99",{"_index":655,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["2",{"_index":230,"title":{},"body":{"classes/AddUserPayload.html":{},"injectables/AuthService.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.1.4",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":2405,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1852,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["200",{"_index":766,"title":{},"body":{"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["201",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/enumerations.html":{}}}],["2018",{"_index":2557,"title":{},"body":{"license.html":{}}}],["2147483647",{"_index":666,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["25/27",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":566,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["2:hover",{"_index":1126,"title":{},"body":{"classes/Mail.html":{}}}],["3",{"_index":231,"title":{},"body":{"classes/AddUserPayload.html":{},"injectables/AuthService.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/Mail.html":{},"classes/MasterPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1368,"title":{},"body":{"classes/MasterPayload.html":{}}}],["30/32",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{}}}],["3000",{"_index":2462,"title":{},"body":{"index.html":{}}}],["30})@minlength(3)@maxlength(30)@isoptional",{"_index":1363,"title":{},"body":{"classes/MasterPayload.html":{}}}],["33",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["3533c6",{"_index":1132,"title":{},"body":{"classes/Mail.html":{}}}],["3533c6!important",{"_index":1133,"title":{},"body":{"classes/Mail.html":{}}}],["3:hover",{"_index":1127,"title":{},"body":{"classes/Mail.html":{}}}],["4",{"_index":232,"title":{},"body":{"classes/AddUserPayload.html":{},"injectables/AuthService.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["4.7.12",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/enumerations.html":{}}}],["401",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["404",{"_index":2428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["406",{"_index":2430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["45",{"_index":1939,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["5",{"_index":233,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":2375,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1768,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"miscellaneous/enumerations.html":{}}}],["510",{"_index":1411,"title":{},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["6",{"_index":234,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6.6.3",{"_index":2413,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2623,"title":{},"body":{"overview.html":{}}}],["7",{"_index":235,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["7.1.5",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2621,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2409,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2342,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["83",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1086,"title":{},"body":{"classes/Mail.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["97",{"_index":1585,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["98",{"_index":1586,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["99",{"_index":573,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["9999",{"_index":187,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["__dirname",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["a.es",{"_index":1120,"title":{},"body":{"classes/Mail.html":{}}}],["a[x",{"_index":1103,"title":{},"body":{"classes/Mail.html":{}}}],["above",{"_index":2588,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":18,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/BaseEntity.html":{},"classes/TrimStringsPipe.html":{}}}],["abstracttransformpipe",{"_index":1,"title":{"classes/AbstractTransformPipe.html":{}},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{},"coverage.html":{}}}],["abstracttransformpipe:10",{"_index":2040,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["abstracttransformpipe:14",{"_index":2042,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["abstracttransformpipe:29",{"_index":2041,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["abstracttransformpipe:4",{"_index":2043,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["abstracttransformpipe:6",{"_index":2039,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["academiapartnershipdetails",{"_index":1692,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["academiapartnerships",{"_index":1693,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["academic",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["academicaffiliation",{"_index":1833,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{}}}],["accepted",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"classes/Mail.html":{}}}],["accesstoken",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1218,"title":{},"body":{"classes/Mail.html":{}}}],["action",{"_index":2021,"title":{},"body":{"injectables/SponsorService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["active",{"_index":1583,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["actual",{"_index":2507,"title":{},"body":{"index.html":{}}}],["adapt",{"_index":1180,"title":{},"body":{"classes/Mail.html":{}}}],["adaptive",{"_index":1174,"title":{},"body":{"classes/Mail.html":{}}}],["add",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["addbearerauth",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added_at",{"_index":674,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["added_by",{"_index":673,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["addorderdto",{"_index":62,"title":{"classes/AddOrderDto.html":{}},"body":{"classes/AddOrderDto.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"coverage.html":{}}}],["addorderproduct",{"_index":1425,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["addorderproduct(@body",{"_index":1456,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["addorderproduct(payload",{"_index":1429,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["addresidentcompany",{"_index":1600,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["addresidentcompany(@body",{"_index":1644,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["addresidentcompany(payload",{"_index":1607,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["addresidentcompanypayload",{"_index":82,"title":{"classes/AddResidentCompanyPayload.html":{}},"body":{"classes/AddResidentCompanyPayload.html":{},"controllers/ResidentCompanyController.html":{},"coverage.html":{}}}],["address",{"_index":1233,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["address&nbsp",{"_index":1241,"title":{},"body":{"classes/Mail.html":{}}}],["addselect(\"users.email",{"_index":2226,"title":{},"body":{"injectables/UsersService.html":{}}}],["addselect(\"users.password",{"_index":2227,"title":{},"body":{"injectables/UsersService.html":{}}}],["adduser",{"_index":2118,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["adduser(@body",{"_index":2140,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(payload",{"_index":2123,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["adduserpayload",{"_index":191,"title":{"classes/AddUserPayload.html":{}},"body":{"classes/AddUserPayload.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["admin",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["admin.ts",{"_index":2320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["advisor",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advisory.entity",{"_index":1880,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["advisory.entity.ts",{"_index":1572,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["advisory.entity.ts:18",{"_index":1576,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:21",{"_index":1574,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:24",{"_index":1577,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:27",{"_index":1580,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:30",{"_index":1578,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:33",{"_index":1579,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:36",{"_index":1575,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:39",{"_index":1581,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{}}}],["advisory.entity.ts:43",{"_index":1592,"title":{},"body":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["advisory.entity.ts:44",{"_index":1591,"title":{},"body":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["advisory.entity.ts:45",{"_index":1593,"title":{},"body":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["advisory.entity.ts:46",{"_index":1596,"title":{},"body":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["advisory.entity.ts:47",{"_index":1594,"title":{},"body":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["advisory.entity.ts:48",{"_index":1595,"title":{},"body":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["affected",{"_index":2213,"title":{},"body":{"injectables/UsersService.html":{}}}],["affiliatedinstitution",{"_index":87,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["aliases",{"_index":2625,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align:center",{"_index":1144,"title":{},"body":{"classes/Mail.html":{}}}],["align:center!important",{"_index":1160,"title":{},"body":{"classes/Mail.html":{}}}],["align:left!important",{"_index":1164,"title":{},"body":{"classes/Mail.html":{}}}],["align:right!important",{"_index":1162,"title":{},"body":{"classes/Mail.html":{}}}],["already",{"_index":2233,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["always",{"_index":660,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"index.html":{}}}],["and/or",{"_index":2580,"title":{},"body":{"license.html":{}}}],["andwhere(\"users.site_id",{"_index":2272,"title":{},"body":{"injectables/UsersService.html":{}}}],["api",{"_index":1258,"title":{},"body":{"classes/Mail.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/auth",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/docs",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/file",{"_index":754,"title":{},"body":{"controllers/FileController.html":{}}}],["api/master",{"_index":1266,"title":{},"body":{"controllers/MasterController.html":{}}}],["api/order",{"_index":1423,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["api/resident",{"_index":1599,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["api/sponsor",{"_index":1999,"title":{},"body":{"controllers/SponsorController.html":{}}}],["api/user",{"_index":2117,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth",{"_index":249,"title":{},"body":{"controllers/AppController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@useguards(undefined)@delete(':id')@apiresponse({status",{"_index":2133,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@useguards(undefined)@get('/search')@apiresponse({status",{"_index":1627,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["apibearerauth()@useguards(undefined)@get(':id')@apiresponse({status",{"_index":1617,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@useguards(undefined)@get('global",{"_index":2001,"title":{},"body":{"controllers/SponsorController.html":{}}}],["apibearerauth()@useguards(undefined)@get('site",{"_index":2005,"title":{},"body":{"controllers/SponsorController.html":{}}}],["apibearerauth()@useguards(undefined)@get()@apiresponse({status",{"_index":1610,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@useguards(undefined)@post()@apiresponse({status",{"_index":2125,"title":{},"body":{"controllers/UserController.html":{}}}],["apibearerauth()@useguards(undefined)@put('/update",{"_index":1637,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["apibearerauth()@useguards(undefined)@put()@apiresponse({status",{"_index":1632,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["apibody",{"_index":796,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["apiconsumes",{"_index":797,"title":{},"body":{"controllers/FileController.html":{}}}],["apiconsumes('multipart/form",{"_index":813,"title":{},"body":{"controllers/FileController.html":{}}}],["apifile",{"_index":801,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiheader",{"_index":1640,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":77,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"classes/ForgotPasswordPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/MasterPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{}}}],["apiproperty({required",{"_index":71,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"classes/ForgotPasswordPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/MasterPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{}}}],["apiquery",{"_index":798,"title":{},"body":{"controllers/FileController.html":{}}}],["apiresponse",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["apis",{"_index":2541,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["apitags('authentication",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('file",{"_index":810,"title":{},"body":{"controllers/FileController.html":{}}}],["apitags('master",{"_index":1314,"title":{},"body":{"controllers/MasterController.html":{}}}],["apitags('resident",{"_index":1455,"title":{},"body":{"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{}}}],["apitags('sponsor",{"_index":2010,"title":{},"body":{"controllers/SponsorController.html":{}}}],["apitags('user",{"_index":2139,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":251,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":239,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apple",{"_index":1104,"title":{},"body":{"classes/Mail.html":{}}}],["appliaction",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["application",{"_index":2127,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["application/x",{"_index":1055,"title":{},"body":{"classes/Mail.html":{}}}],["applications",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":257,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approot",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":250,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":727,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["args.constraints",{"_index":731,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["args.property",{"_index":730,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["argumentmetadata",{"_index":35,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["arising",{"_index":2614,"title":{},"body":{"license.html":{}}}],["array",{"_index":1613,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{}}}],["array[:...siteidarr]::int",{"_index":2273,"title":{},"body":{"injectables/UsersService.html":{}}}],["as.validator",{"_index":225,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["as.validator.ts",{"_index":2335,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["asc",{"_index":1975,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["asnd",{"_index":2202,"title":{},"body":{"injectables/UsersService.html":{}}}],["associated",{"_index":2569,"title":{},"body":{"license.html":{}}}],["async",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["attachment",{"_index":774,"title":{},"body":{"controllers/FileController.html":{}}}],["auth.controller",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/jwt.strategy",{"_index":2171,"title":{},"body":{"modules/UserModule.html":{}}}],["authcontroller",{"_index":346,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["authguard",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["authguard('jwt",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":268,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authors",{"_index":2605,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":397,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1249,"title":{},"body":{"classes/Mail.html":{}}}],["autocompletion",{"_index":2481,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":2538,"title":{},"body":{"index.html":{}}}],["available",{"_index":2264,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["await",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["axios",{"_index":1039,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["axios(config",{"_index":1066,"title":{},"body":{"classes/Mail.html":{}}}],["axios.defaults.headers.post['authorization",{"_index":1253,"title":{},"body":{"classes/Mail.html":{}}}],["axios.defaults.headers.post['content",{"_index":1252,"title":{},"body":{"classes/Mail.html":{}}}],["axios.post(process.env.appsetting_microsoft_email_endpoint_mail",{"_index":1254,"title":{},"body":{"classes/Mail.html":{}}}],["azure/storage",{"_index":858,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["azureconnection",{"_index":840,"title":{},"body":{"injectables/FileService.html":{}}}],["background:#3533c6!important",{"_index":1121,"title":{},"body":{"classes/Mail.html":{}}}],["background:#405a72!important",{"_index":1124,"title":{},"body":{"classes/Mail.html":{}}}],["bad",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["bad_request",{"_index":2426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["badrequestexception",{"_index":789,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{}}}],["badrequestexception('companyid",{"_index":818,"title":{},"body":{"controllers/FileController.html":{}}}],["baseentity",{"_index":523,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["bash",{"_index":2466,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":913,"title":{},"body":{"classes/Hash.html":{},"dependencies.html":{}}}],["bcrypt.comparesync(plaintext",{"_index":917,"title":{},"body":{"classes/Hash.html":{}}}],["bcrypt.gensaltsync",{"_index":915,"title":{},"body":{"classes/Hash.html":{}}}],["bcrypt.hashsync(plaintext",{"_index":916,"title":{},"body":{"classes/Hash.html":{}}}],["below",{"_index":1220,"title":{},"body":{"classes/Mail.html":{}}}],["between",{"_index":1525,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["binary",{"_index":808,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["biolabdoc/architecturedoc",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["biolabs",{"_index":255,"title":{},"body":{"controllers/AppController.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["biolabs_sources",{"_index":574,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{}}}],["biolabsall",{"_index":1228,"title":{},"body":{"classes/Mail.html":{}}}],["biolabsassistanceneeded",{"_index":1694,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["biolabssource",{"_index":556,"title":{"classes/BiolabsSource.html":{}},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"modules/MasterModule.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["biolabssourcefillablefields",{"_index":575,"title":{"classes/BiolabsSourceFillableFields.html":{}},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"coverage.html":{}}}],["biolabssources",{"_index":88,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["blob",{"_index":859,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["blobclient",{"_index":866,"title":{},"body":{"injectables/FileService.html":{}}}],["blobclient.deleteifexists",{"_index":886,"title":{},"body":{"injectables/FileService.html":{}}}],["blobclient.download",{"_index":884,"title":{},"body":{"injectables/FileService.html":{}}}],["blobclient.uploaddata(file.buffer",{"_index":874,"title":{},"body":{"injectables/FileService.html":{}}}],["blobclientservice",{"_index":862,"title":{},"body":{"injectables/FileService.html":{}}}],["blobclientservice.getcontainerclient(containername",{"_index":865,"title":{},"body":{"injectables/FileService.html":{}}}],["blobdownloaded",{"_index":883,"title":{},"body":{"injectables/FileService.html":{}}}],["blobdownloaded.readablestreambody",{"_index":885,"title":{},"body":{"injectables/FileService.html":{}}}],["blobserviceclient",{"_index":857,"title":{},"body":{"injectables/FileService.html":{}}}],["blobserviceclient.fromconnectionstring(this.azureconnection",{"_index":863,"title":{},"body":{"injectables/FileService.html":{}}}],["block",{"_index":1208,"title":{},"body":{"classes/Mail.html":{}}}],["block!important",{"_index":1212,"title":{},"body":{"classes/Mail.html":{}}}],["blockblobclient",{"_index":850,"title":{},"body":{"injectables/FileService.html":{}}}],["body",{"_index":57,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"controllers/AuthController.html":{},"classes/Mail.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":32,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/BaseEntity.html":{},"classes/CreateOrderProductDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/TrimStringsPipe.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["boot",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["border",{"_index":1122,"title":{},"body":{"classes/Mail.html":{}}}],["border:hover",{"_index":1119,"title":{},"body":{"classes/Mail.html":{}}}],["bottom:0!important",{"_index":1192,"title":{},"body":{"classes/Mail.html":{}}}],["bottom:20px!important",{"_index":1194,"title":{},"body":{"classes/Mail.html":{}}}],["brdr",{"_index":1175,"title":{},"body":{"classes/Mail.html":{}}}],["break",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["browse",{"_index":2619,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2616,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":1172,"title":{},"body":{"classes/Mail.html":{}}}],["build",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1098,"title":{},"body":{"classes/Mail.html":{}}}],["c",{"_index":1159,"title":{},"body":{"classes/Mail.html":{},"license.html":{}}}],["cache",{"_index":667,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["call",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["canactivate",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":879,"title":{},"body":{"injectables/FileService.html":{}}}],["catch((error",{"_index":1256,"title":{},"body":{"classes/Mail.html":{}}}],["catch(function",{"_index":1069,"title":{},"body":{"classes/Mail.html":{}}}],["categories",{"_index":587,"title":{},"body":{"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"controllers/MasterController.html":{}}}],["category",{"_index":578,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/MasterModule.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["category.entity",{"_index":1343,"title":{},"body":{"modules/MasterModule.html":{}}}],["categoryfillablefields",{"_index":588,"title":{"classes/CategoryFillableFields.html":{}},"body":{"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"coverage.html":{}}}],["cc_email_user",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccrecipients",{"_index":1236,"title":{},"body":{"classes/Mail.html":{}}}],["cell!important",{"_index":1205,"title":{},"body":{"classes/Mail.html":{}}}],["change",{"_index":2501,"title":{},"body":{"index.html":{}}}],["character",{"_index":668,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["charge",{"_index":2564,"title":{},"body":{"license.html":{}}}],["charset=utf8mb4",{"_index":695,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["check",{"_index":2525,"title":{},"body":{"index.html":{}}}],["child",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claim",{"_index":2608,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class=\"gmail",{"_index":1154,"title":{},"body":{"classes/Mail.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"overview.html":{}}}],["cli",{"_index":2515,"title":{},"body":{"index.html":{}}}],["click",{"_index":1219,"title":{},"body":{"classes/Mail.html":{}}}],["client_credentials",{"_index":1052,"title":{},"body":{"classes/Mail.html":{}}}],["client_id",{"_index":1045,"title":{},"body":{"classes/Mail.html":{}}}],["client_secret",{"_index":1049,"title":{},"body":{"classes/Mail.html":{}}}],["cluster_appmodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":592,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":593,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":600,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":601,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":833,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":835,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_imports",{"_index":834,"title":{},"body":{"modules/FileModule.html":{}}}],["cluster_filemodule_providers",{"_index":836,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_mastermodule",{"_index":1338,"title":{},"body":{"modules/MasterModule.html":{},"overview.html":{}}}],["cluster_mastermodule_exports",{"_index":1340,"title":{},"body":{"modules/MasterModule.html":{},"overview.html":{}}}],["cluster_mastermodule_providers",{"_index":1339,"title":{},"body":{"modules/MasterModule.html":{},"overview.html":{}}}],["cluster_orderproductmodule",{"_index":1473,"title":{},"body":{"modules/OrderProductModule.html":{},"overview.html":{}}}],["cluster_orderproductmodule_exports",{"_index":1476,"title":{},"body":{"modules/OrderProductModule.html":{},"overview.html":{}}}],["cluster_orderproductmodule_imports",{"_index":1474,"title":{},"body":{"modules/OrderProductModule.html":{}}}],["cluster_orderproductmodule_providers",{"_index":1475,"title":{},"body":{"modules/OrderProductModule.html":{},"overview.html":{}}}],["cluster_residentcompanymodule",{"_index":1874,"title":{},"body":{"modules/ResidentCompanyModule.html":{},"overview.html":{}}}],["cluster_residentcompanymodule_exports",{"_index":1876,"title":{},"body":{"modules/ResidentCompanyModule.html":{},"overview.html":{}}}],["cluster_residentcompanymodule_imports",{"_index":1877,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["cluster_residentcompanymodule_providers",{"_index":1875,"title":{},"body":{"modules/ResidentCompanyModule.html":{},"overview.html":{}}}],["cluster_sponsormodule",{"_index":2014,"title":{},"body":{"modules/SponsorModule.html":{},"overview.html":{}}}],["cluster_sponsormodule_imports",{"_index":2015,"title":{},"body":{"modules/SponsorModule.html":{}}}],["cluster_sponsormodule_providers",{"_index":2016,"title":{},"body":{"modules/SponsorModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2162,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2164,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2163,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2165,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collate",{"_index":670,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["color:#3533c6",{"_index":1131,"title":{},"body":{"classes/Mail.html":{}}}],["color:#3533c6!important",{"_index":1123,"title":{},"body":{"classes/Mail.html":{}}}],["color:#405a72!important",{"_index":1125,"title":{},"body":{"classes/Mail.html":{}}}],["color:inherit!important",{"_index":1106,"title":{},"body":{"classes/Mail.html":{}}}],["column",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["column(\"int",{"_index":1681,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["column(\"json",{"_index":1767,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["column('int",{"_index":1673,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/User.html":{}}}],["column({default",{"_index":1405,"title":{},"body":{"classes/OrderProduct.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{}}}],["column({length",{"_index":565,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/Category.html":{},"classes/Funding.html":{},"classes/Modality.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/Role.html":{},"classes/Site.html":{},"classes/TechnologyStage.html":{},"classes/User.html":{},"classes/UserToken.html":{}}}],["column({name",{"_index":2100,"title":{},"body":{"classes/User.html":{}}}],["column({nullable",{"_index":922,"title":{},"body":{"classes/Invoice.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{}}}],["column({type",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{},"classes/OrderProduct.html":{}}}],["command",{"_index":2516,"title":{},"body":{"index.html":{}}}],["common",{"_index":176,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/RegisterPayload.html":{}}}],["common/validator/greater",{"_index":1970,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["common/validator/less",{"_index":1974,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["common/validator/same",{"_index":1538,"title":{},"body":{"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["commonmodule",{"_index":269,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["comnpanyid",{"_index":1830,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["companies",{"_index":1615,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"miscellaneous/variables.html":{}}}],["company",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company.controller",{"_index":1885,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["company.controller.ts",{"_index":1598,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"coverage.html":{}}}],["company.controller.ts:105",{"_index":1628,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.controller.ts:119",{"_index":1618,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.controller.ts:25",{"_index":1608,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.controller.ts:47",{"_index":1614,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.controller.ts:63",{"_index":1623,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.controller.ts:77",{"_index":1638,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.controller.ts:91",{"_index":1633,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.entity",{"_index":178,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"modules/ResidentCompanyModule.html":{}}}],["company.entity.ts",{"_index":1691,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company.entity.ts:194",{"_index":1724,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:195",{"_index":1742,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:196",{"_index":1717,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:197",{"_index":1757,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:198",{"_index":1716,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:199",{"_index":1745,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:200",{"_index":1760,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:201",{"_index":1755,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:202",{"_index":1758,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:203",{"_index":1719,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:204",{"_index":1728,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:205",{"_index":1720,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:206",{"_index":1746,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:207",{"_index":1731,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:208",{"_index":1732,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:209",{"_index":1747,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:210",{"_index":1736,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:211",{"_index":1749,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:212",{"_index":1737,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:213",{"_index":1714,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:214",{"_index":1744,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:215",{"_index":1725,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:216",{"_index":1764,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:217",{"_index":1727,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:218",{"_index":1733,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:219",{"_index":1748,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:220",{"_index":1741,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:221",{"_index":1750,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:222",{"_index":1754,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:223",{"_index":1759,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:224",{"_index":1721,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:225",{"_index":1722,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:226",{"_index":1718,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:227",{"_index":1723,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:228",{"_index":1740,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:229",{"_index":1739,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:230",{"_index":1715,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:231",{"_index":1761,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:232",{"_index":1762,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:233",{"_index":1751,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:234",{"_index":1752,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:235",{"_index":1729,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:236",{"_index":1713,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:237",{"_index":1712,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:238",{"_index":1734,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:239",{"_index":1735,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:240",{"_index":1743,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:241",{"_index":1756,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:242",{"_index":1726,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:243",{"_index":1765,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:244",{"_index":1730,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:245",{"_index":1753,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:246",{"_index":1738,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.entity.ts:247",{"_index":1763,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["company.module",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["company.module.ts",{"_index":1878,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["company.payload",{"_index":1641,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["company.payload.ts",{"_index":86,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company.payload.ts:100",{"_index":134,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:103",{"_index":1953,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:108",{"_index":136,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:115",{"_index":1966,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:117",{"_index":152,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:12",{"_index":126,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:122",{"_index":1968,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:125",{"_index":139,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:132",{"_index":155,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:139",{"_index":141,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:14",{"_index":1004,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:146",{"_index":118,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:153",{"_index":147,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:160",{"_index":128,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:167",{"_index":163,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:17",{"_index":1963,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:174",{"_index":130,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:180",{"_index":137,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:186",{"_index":153,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:19",{"_index":146,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:192",{"_index":142,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:198",{"_index":156,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:205",{"_index":157,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:212",{"_index":129,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:22",{"_index":1962,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:24",{"_index":1002,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:25",{"_index":123,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:29",{"_index":1001,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:31",{"_index":160,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:34",{"_index":999,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:36",{"_index":1951,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:38",{"_index":121,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:39",{"_index":1000,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:41",{"_index":1947,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:44",{"_index":997,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:46",{"_index":149,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:49",{"_index":1005,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:51",{"_index":1946,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:54",{"_index":162,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:56",{"_index":1964,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:59",{"_index":1006,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:61",{"_index":1949,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:62",{"_index":159,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:66",{"_index":1960,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:68",{"_index":161,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:71",{"_index":1948,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:76",{"_index":132,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:79",{"_index":1959,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:83",{"_index":124,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:87",{"_index":1955,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.payload.ts:9",{"_index":1003,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{}}}],["company.payload.ts:92",{"_index":151,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["company.payload.ts:95",{"_index":1957,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["company.service",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"modules/ResidentCompanyModule.html":{},"injectables/UsersService.html":{}}}],["company.service.ts",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["company/add",{"_index":84,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"coverage.html":{}}}],["company/list",{"_index":987,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company/rc",{"_index":1571,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company/resident",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company/search",{"_index":1940,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company/update",{"_index":2061,"title":{},"body":{"classes/UpdateResidentCompanyStatusPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["company_id",{"_index":1669,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["company_status",{"_index":998,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["companyid",{"_index":66,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddUserPayload.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["companyname",{"_index":89,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["companyonboardingstatus",{"_index":988,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["companysize",{"_index":1695,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["companystage",{"_index":90,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["companystatus",{"_index":989,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["companyvisibility",{"_index":990,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["compare",{"_index":902,"title":{},"body":{"classes/Hash.html":{}}}],["compare(plaintext",{"_index":904,"title":{},"body":{"classes/Hash.html":{}}}],["compodoc/compodoc",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":2472,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":2587,"title":{},"body":{"license.html":{}}}],["config",{"_index":339,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/UserModule.html":{}}}],["config.service",{"_index":603,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configmodule",{"_index":270,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":286,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["configservice('.env",{"_index":606,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configuration",{"_index":2535,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":1073,"title":{},"body":{"classes/Mail.html":{}}}],["connect!your",{"_index":1243,"title":{},"body":{"classes/Mail.html":{}}}],["connection",{"_index":717,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"index.html":{},"license.html":{}}}],["const",{"_index":55,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Hash.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants/email",{"_index":1037,"title":{},"body":{"classes/Mail.html":{},"injectables/UsersService.html":{}}}],["constants/privileges",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["constraint",{"_index":677,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["constraints",{"_index":714,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/ExistsValidator.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectconnection",{"_index":725,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["constructor(config",{"_index":337,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(configservice",{"_index":969,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":748,"title":{},"body":{"injectables/ExistsValidator.html":{},"injectables/UniqueValidator.html":{}}}],["constructor(filepath",{"_index":610,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(jwtservice",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(orderrepository",{"_index":1484,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["constructor(private",{"_index":252,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/SponsorController.html":{}}}],["constructor(userservice",{"_index":843,"title":{},"body":{"injectables/FileService.html":{}}}],["containerclient",{"_index":864,"title":{},"body":{"injectables/FileService.html":{}}}],["containerclient.getblockblobclient(imagename",{"_index":867,"title":{},"body":{"injectables/FileService.html":{}}}],["containername",{"_index":845,"title":{},"body":{"injectables/FileService.html":{}}}],["containers",{"_index":2450,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1433,"title":{},"body":{"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["content",{"_index":1030,"title":{},"body":{"classes/Mail.html":{}}}],["content_type",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contenttype",{"_index":1076,"title":{},"body":{"classes/Mail.html":{}}}],["context",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["contract",{"_index":2612,"title":{},"body":{"license.html":{}}}],["controller",{"_index":238,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api/file",{"_index":809,"title":{},"body":{"controllers/FileController.html":{}}}],["controller('api/master",{"_index":1313,"title":{},"body":{"controllers/MasterController.html":{}}}],["controller('api/order",{"_index":1454,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["controller('api/resident",{"_index":1643,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["controller('api/sponsor",{"_index":2009,"title":{},"body":{"controllers/SponsorController.html":{}}}],["controller('api/user",{"_index":2138,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":240,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"controllers/OrderProductController.html":{},"modules/OrderProductModule.html":{},"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":1059,"title":{},"body":{"classes/Mail.html":{}}}],["copies",{"_index":2582,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2567,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2556,"title":{},"body":{"license.html":{}}}],["cost",{"_index":626,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/UpdateOrderProductDto.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":2307,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":2452,"title":{},"body":{"index.html":{}}}],["create",{"_index":654,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"classes/UpdateSponsorDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create(payload",{"_index":2197,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":1244,"title":{},"body":{"classes/Mail.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["createdat",{"_index":559,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["createdatecolumn",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["createdatecolumn({type",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/Category.html":{},"classes/Funding.html":{},"classes/Invoice.html":{},"classes/Modality.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/Product.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/Role.html":{},"classes/Site.html":{},"classes/TechnologyStage.html":{},"classes/User.html":{},"classes/UserToken.html":{}}}],["createdatetime",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdby",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{}}}],["createinvoice",{"_index":1935,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["createorderproductdto",{"_index":75,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/AddOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createquerybuilder('users",{"_index":2225,"title":{},"body":{"injectables/UsersService.html":{}}}],["creates",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["createsponsordto",{"_index":639,"title":{"classes/CreateSponsorDto.html":{}},"body":{"classes/CreateSponsorDto.html":{},"classes/UpdateSponsorDto.html":{},"coverage.html":{}}}],["createsuperadmin",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtableusers}migration",{"_index":2521,"title":{},"body":{"index.html":{}}}],["createtoken",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(user",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserstable.ts",{"_index":644,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"coverage.html":{},"index.html":{}}}],["createuserstable.ts:109",{"_index":650,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["createuserstable.ts:4",{"_index":652,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["createuserstable1611484925515",{"_index":642,"title":{"classes/CreateUsersTable1611484925515.html":{}},"body":{"classes/CreateUsersTable1611484925515.html":{},"coverage.html":{}}}],["creating",{"_index":2512,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["cron",{"_index":1933,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cron(process.env.appsetting_schedulertime",{"_index":1934,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["current",{"_index":1937,"title":{},"body":{"injectables/SchedulerService.html":{},"index.html":{}}}],["current_timestamp",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["currentcharge",{"_index":627,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/UpdateOrderProductDto.html":{}}}],["custom",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["damages",{"_index":2609,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":1624,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{}}}],["dashboardbysite",{"_index":2000,"title":{},"body":{"controllers/SponsorController.html":{}}}],["data",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FileController.html":{},"classes/Mail.html":{},"controllers/SponsorController.html":{},"index.html":{}}}],["data')@apifile()@apiquery({name",{"_index":785,"title":{},"body":{"controllers/FileController.html":{}}}],["data')@apiresponse({status",{"_index":2002,"title":{},"body":{"controllers/SponsorController.html":{}}}],["data.message.ccrecipients.push",{"_index":1238,"title":{},"body":{"classes/Mail.html":{}}}],["database",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/UpdateOrderProductDto.html":{}}}],["date().gettime",{"_index":868,"title":{},"body":{"injectables/FileService.html":{},"injectables/UsersService.html":{}}}],["db",{"_index":2489,"title":{},"body":{"index.html":{}}}],["db_sync",{"_index":2502,"title":{},"body":{"index.html":{}}}],["de",{"_index":1582,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["deal",{"_index":2571,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2615,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoration",{"_index":1079,"title":{},"body":{"classes/Mail.html":{}}}],["decoration:none!important",{"_index":1102,"title":{},"body":{"classes/Mail.html":{}}}],["decorators",{"_index":70,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/Category.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"controllers/FileController.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/Invoice.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"controllers/MasterController.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/PasswordPayload.html":{},"classes/Product.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/Role.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"controllers/SponsorController.html":{},"classes/TechnologyStage.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserToken.html":{}}}],["default",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CreateUsersTable1611484925515.html":{},"injectables/FileService.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":747,"title":{},"body":{"injectables/ExistsValidator.html":{},"injectables/UniqueValidator.html":{}}}],["defaultmessage(args",{"_index":735,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"injectables/UniqueValidator.html":{}}}],["defaultstrategy",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"controllers/SponsorController.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":755,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":1464,"title":{},"body":{"controllers/OrderProductController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apiresponse({status",{"_index":1435,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["delete(@query('filename",{"_index":830,"title":{},"body":{"controllers/FileController.html":{}}}],["delete(filename",{"_index":759,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{}}}],["deleted",{"_index":832,"title":{},"body":{"controllers/FileController.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["deleteorderproduct",{"_index":1426,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["deleteorderproduct(@param('id",{"_index":1465,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["deleteorderproduct(id",{"_index":1434,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["deleteuserpayload",{"_index":705,"title":{"classes/DeleteUserPayload.html":{}},"body":{"classes/DeleteUserPayload.html":{},"coverage.html":{}}}],["dependencies",{"_index":259,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":1976,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"miscellaneous/typealiases.html":{}}}],["describe",{"_index":2542,"title":{},"body":{"index.html":{}}}],["description",{"_index":244,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"controllers/FileController.html":{},"classes/Hash.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":804,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["desk",{"_index":1111,"title":{},"body":{"classes/Mail.html":{}}}],["details",{"_index":1432,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"index.html":{}}}],["detectors",{"_index":1105,"title":{},"body":{"classes/Mail.html":{}}}],["dev",{"_index":2477,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":1224,"title":{},"body":{"classes/Mail.html":{}}}],["directory",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["display:block!important",{"_index":1167,"title":{},"body":{"classes/Mail.html":{}}}],["display:inline",{"_index":1211,"title":{},"body":{"classes/Mail.html":{}}}],["display:inline!important",{"_index":1166,"title":{},"body":{"classes/Mail.html":{}}}],["display:none",{"_index":1113,"title":{},"body":{"classes/Mail.html":{}}}],["display:none!important",{"_index":1156,"title":{},"body":{"classes/Mail.html":{}}}],["display:table",{"_index":1202,"title":{},"body":{"classes/Mail.html":{}}}],["display:table!important",{"_index":1204,"title":{},"body":{"classes/Mail.html":{}}}],["disposition",{"_index":773,"title":{},"body":{"controllers/FileController.html":{}}}],["distribute",{"_index":2578,"title":{},"body":{"license.html":{}}}],["div",{"_index":1094,"title":{},"body":{"classes/Mail.html":{}}}],["doc",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["doc_type",{"_index":1670,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["docker",{"_index":2449,"title":{},"body":{"index.html":{}}}],["docs",{"_index":2495,"title":{},"body":{"index.html":{}}}],["document",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":2308,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentbuilder",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documents.entity",{"_index":1881,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["documents.entity.ts",{"_index":1668,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["documents.entity.ts:18",{"_index":1675,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:21",{"_index":1671,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:24",{"_index":1674,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:27",{"_index":1677,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:30",{"_index":1676,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:33",{"_index":1678,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:36",{"_index":1672,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:39",{"_index":1679,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{}}}],["documents.entity.ts:43",{"_index":1686,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["documents.entity.ts:44",{"_index":1685,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["documents.entity.ts:45",{"_index":1683,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["documents.entity.ts:46",{"_index":1684,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["documents.entity.ts:47",{"_index":1688,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["documents.entity.ts:48",{"_index":1687,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["documents.entity.ts:49",{"_index":1689,"title":{},"body":{"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["don't",{"_index":2499,"title":{},"body":{"index.html":{}}}],["done",{"_index":973,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":618,"title":{},"body":{"classes/ConfigService.html":{},"classes/Mail.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dotenv.config",{"_index":1043,"title":{},"body":{"classes/Mail.html":{}}}],["dotenv.parse(fs.readfilesync(filepath",{"_index":621,"title":{},"body":{"classes/ConfigService.html":{}}}],["down",{"_index":647,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["down(queryrunner",{"_index":648,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["downloadimage",{"_index":756,"title":{},"body":{"controllers/FileController.html":{}}}],["downloadimage(@res",{"_index":829,"title":{},"body":{"controllers/FileController.html":{}}}],["downloadimage(res",{"_index":769,"title":{},"body":{"controllers/FileController.html":{}}}],["dto/add",{"_index":1448,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["dto/order",{"_index":1450,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["e",{"_index":740,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["e2e",{"_index":2532,"title":{},"body":{"index.html":{}}}],["each",{"_index":120,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["easy",{"_index":2514,"title":{},"body":{"index.html":{}}}],["elevatorpitch",{"_index":1696,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["email",{"_index":91,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/ForgotPasswordPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email.cc_email_user",{"_index":1237,"title":{},"body":{"classes/Mail.html":{}}}],["email.content_type",{"_index":1077,"title":{},"body":{"classes/Mail.html":{}}}],["email.email_confirm_url",{"_index":1222,"title":{},"body":{"classes/Mail.html":{}}}],["email.subject_forgot_password",{"_index":2306,"title":{},"body":{"injectables/UsersService.html":{}}}],["email.subject_invite_user",{"_index":2248,"title":{},"body":{"injectables/UsersService.html":{}}}],["email_confirm_url",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailaddress",{"_index":1232,"title":{},"body":{"classes/Mail.html":{}}}],["emergencyexecutivepoc",{"_index":1888,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["empexpect12months",{"_index":92,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["employee",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encrypt",{"_index":911,"title":{},"body":{"classes/Hash.html":{}}}],["encrypted",{"_index":906,"title":{},"body":{"classes/Hash.html":{}}}],["end",{"_index":1526,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["enddate",{"_index":628,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/UpdateOrderProductDto.html":{}}}],["endpoints",{"_index":2544,"title":{},"body":{"index.html":{}}}],["engine=innodb",{"_index":694,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["entities",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":572,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["entityclass",{"_index":728,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["entityclass.name",{"_index":736,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{}}}],["entityschema",{"_index":718,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["entity{.ts,.js",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":569,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["enumerations",{"_index":2421,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2451,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":2453,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":608,"title":{},"body":{"classes/ConfigService.html":{}}}],["enviourment",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{}}}],["environment",{"_index":2537,"title":{},"body":{"index.html":{}}}],["equals",{"_index":1971,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["equipmentonsite",{"_index":93,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["err",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":880,"title":{},"body":{"injectables/FileService.html":{},"classes/Mail.html":{}}}],["error.message",{"_index":881,"title":{},"body":{"injectables/FileService.html":{}}}],["es",{"_index":1097,"title":{},"body":{"classes/Mail.html":{}}}],["esd",{"_index":1207,"title":{},"body":{"classes/Mail.html":{}}}],["establish",{"_index":964,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["etc",{"_index":2493,"title":{},"body":{"index.html":{}}}],["event",{"_index":2604,"title":{},"body":{"license.html":{}}}],["example",{"_index":962,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["except",{"_index":13,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["exec",{"_index":2517,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executive",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":738,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{}}}],["existing",{"_index":2455,"title":{},"body":{"index.html":{}}}],["exists",{"_index":697,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["exists(constraints",{"_index":741,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"miscellaneous/functions.html":{}}}],["existsvalidationarguments",{"_index":709,"title":{"interfaces/ExistsValidationArguments.html":{}},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"coverage.html":{}}}],["existsvalidationconstraints",{"_index":715,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"miscellaneous/typealiases.html":{}}}],["existsvalidator",{"_index":594,"title":{"injectables/ExistsValidator.html":{}},"body":{"modules/CommonModule.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"coverage.html":{},"overview.html":{}}}],["exp",{"_index":984,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expect",{"_index":1621,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["expect12monthsutilizelab",{"_index":94,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["expects",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MasterController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["expiresin",{"_index":442,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["exposed",{"_index":2460,"title":{},"body":{"index.html":{}}}],["express",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":783,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{}}}],["extends",{"_index":712,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateSponsorDto.html":{}}}],["externalclass",{"_index":1089,"title":{},"body":{"classes/Mail.html":{}}}],["extractjwt",{"_index":975,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":981,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":115,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/BaseEntity.html":{},"controllers/FileController.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/variables.html":{}}}],["false})@isnumber",{"_index":2086,"title":{},"body":{"classes/UploadPayload.html":{}}}],["false})@isnumber()@isoptional",{"_index":204,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["false})@isoptional",{"_index":1361,"title":{},"body":{"classes/MasterPayload.html":{}}}],["false})@isoptional()@validateif(undefined)@greaterthanequalsto('mincompanysize",{"_index":1952,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["false})@isoptional()@validateif(undefined)@greaterthanequalsto('minfund",{"_index":1954,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["false})@isoptional()@validateif(undefined)@lessthanequalsto('maxcompanysize",{"_index":1956,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["false})@isoptional()@validateif(undefined)@lessthanequalsto('maxfund",{"_index":1958,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["false})@sameas('password",{"_index":211,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["false})@validateif(undefined)@isnotempty",{"_index":1965,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["false})@validateif(undefined)@min(0",{"_index":1961,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["false})@validateif(undefined)@min(1",{"_index":1950,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["family:inherit!important",{"_index":1108,"title":{},"body":{"classes/Mail.html":{}}}],["fetch",{"_index":1440,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["fetchorderproductsbetweendates",{"_index":1427,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["fetchorderproductsbetweendates(@query('startdate",{"_index":1461,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["fetchorderproductsbetweendates(startdate",{"_index":1437,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file.controller",{"_index":838,"title":{},"body":{"modules/FileModule.html":{}}}],["file.originalname",{"_index":869,"title":{},"body":{"injectables/FileService.html":{}}}],["file.payload.ts",{"_index":2085,"title":{},"body":{"classes/UploadPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["file.payload.ts:11",{"_index":2090,"title":{},"body":{"classes/UploadPayload.html":{}}}],["file.payload.ts:17",{"_index":2087,"title":{},"body":{"classes/UploadPayload.html":{}}}],["file.payload.ts:22",{"_index":2089,"title":{},"body":{"classes/UploadPayload.html":{}}}],["file.pipe(res",{"_index":827,"title":{},"body":{"controllers/FileController.html":{}}}],["file.service",{"_index":800,"title":{},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{}}}],["file_type",{"_index":2088,"title":{},"body":{"classes/UploadPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filecontroller",{"_index":752,"title":{"controllers/FileController.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"coverage.html":{}}}],["fileinterceptor",{"_index":794,"title":{},"body":{"controllers/FileController.html":{}}}],["filemodule",{"_index":271,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":763,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"miscellaneous/variables.html":{}}}],["filename=test.webp",{"_index":828,"title":{},"body":{"controllers/FileController.html":{}}}],["filename=test.webp')@apiquery({name",{"_index":775,"title":{},"body":{"controllers/FileController.html":{}}}],["filepath",{"_index":612,"title":{},"body":{"classes/ConfigService.html":{}}}],["files",{"_index":2570,"title":{},"body":{"license.html":{}}}],["fileservice",{"_index":799,"title":{"injectables/FileService.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":760,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/UploadPayload.html":{}}}],["findargs",{"_index":1527,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["findcondition",{"_index":729,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["findcondition(args",{"_index":734,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["findconditions",{"_index":719,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["firstname",{"_index":194,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["fitness",{"_index":2600,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1155,"title":{},"body":{"classes/Mail.html":{}}}],["float:left",{"_index":1114,"title":{},"body":{"classes/Mail.html":{}}}],["float:none!important",{"_index":1201,"title":{},"body":{"classes/Mail.html":{}}}],["following",{"_index":2586,"title":{},"body":{"license.html":{}}}],["font",{"_index":1082,"title":{},"body":{"classes/Mail.html":{}}}],["footer",{"_index":1151,"title":{},"body":{"classes/Mail.html":{}}}],["forgot",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotmail",{"_index":1074,"title":{},"body":{"classes/Mail.html":{},"injectables/UsersService.html":{}}}],["forgotpassword",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["forgotpassword(@body",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(payload",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["forgotpasswordpayload",{"_index":356,"title":{"classes/ForgotPasswordPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/ForgotPasswordPayload.html":{},"coverage.html":{}}}],["form",{"_index":1057,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":807,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["foundeddate",{"_index":1773,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["foundedplace",{"_index":95,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["founder",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foundersbusinessindustrybefore",{"_index":1697,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["foundersbusinessindustryname",{"_index":1698,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["foundersbusinessindustryname:string",{"_index":1770,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["fpc=atq01sxesc5anxus4qwit5hok_saaqaaaf9qe9goaaaa",{"_index":1065,"title":{},"body":{"classes/Mail.html":{}}}],["free",{"_index":2563,"title":{},"body":{"license.html":{}}}],["from'../../common",{"_index":222,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["from'../../common/validator/same",{"_index":224,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["from'../user",{"_index":227,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["from'@nestjs/swagger",{"_index":220,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["from'class",{"_index":221,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["from(value",{"_index":1542,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["fs",{"_index":619,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":733,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{}}}],["functions",{"_index":2432,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":96,"title":{"classes/Funding.html":{}},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"modules/MasterModule.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["funding.entity",{"_index":1344,"title":{},"body":{"modules/MasterModule.html":{}}}],["fundingfillablefields",{"_index":898,"title":{"classes/FundingFillableFields.html":{}},"body":{"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"coverage.html":{}}}],["fundings",{"_index":897,"title":{},"body":{"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"controllers/MasterController.html":{}}}],["fundingsource",{"_index":97,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["furnished",{"_index":2585,"title":{},"body":{"license.html":{}}}],["fw",{"_index":1173,"title":{},"body":{"classes/Mail.html":{}}}],["gateway",{"_index":1062,"title":{},"body":{"classes/Mail.html":{}}}],["generate",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["generated",{"_index":659,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"classes/Mail.html":{}}}],["generatetoken",{"_index":2190,"title":{},"body":{"injectables/UsersService.html":{}}}],["generatetoken(user",{"_index":2200,"title":{},"body":{"injectables/UsersService.html":{}}}],["generation",{"_index":1259,"title":{},"body":{"classes/Mail.html":{}}}],["get('/dashboard",{"_index":1654,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["get('/dashboard')@apiresponse({status",{"_index":1622,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["get('/search",{"_index":1661,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["get(':id",{"_index":1664,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["get('biolabs",{"_index":1278,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('category",{"_index":1321,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('category')@apiresponse({status",{"_index":1285,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('company",{"_index":1287,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('delete",{"_index":761,"title":{},"body":{"controllers/FileController.html":{}}}],["get('download",{"_index":770,"title":{},"body":{"controllers/FileController.html":{}}}],["get('fundings",{"_index":1326,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('fundings')@apiresponse({status",{"_index":1291,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('global",{"_index":2011,"title":{},"body":{"controllers/SponsorController.html":{}}}],["get('modality",{"_index":1329,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('modality')@apiresponse({status",{"_index":1294,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('read",{"_index":779,"title":{},"body":{"controllers/FileController.html":{}}}],["get('roles",{"_index":1318,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('roles')@apiresponse({status",{"_index":1298,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('site",{"_index":2012,"title":{},"body":{"controllers/SponsorController.html":{}}}],["get('sites",{"_index":1315,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('sites')@apiresponse({status",{"_index":1302,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('technology",{"_index":1306,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('user",{"_index":1310,"title":{},"body":{"controllers/MasterController.html":{}}}],["get('verify",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apiresponse({status",{"_index":1438,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["get(id",{"_index":2203,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(key",{"_index":614,"title":{},"body":{"classes/ConfigService.html":{}}}],["getbiolabssource",{"_index":1267,"title":{},"body":{"controllers/MasterController.html":{}}}],["getbiolabssource(@query",{"_index":1324,"title":{},"body":{"controllers/MasterController.html":{}}}],["getbiolabssource(params",{"_index":1276,"title":{},"body":{"controllers/MasterController.html":{}}}],["getblobclient",{"_index":841,"title":{},"body":{"injectables/FileService.html":{}}}],["getblobclient(imagename",{"_index":847,"title":{},"body":{"injectables/FileService.html":{}}}],["getbyemail",{"_index":2191,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyemail(email",{"_index":2205,"title":{},"body":{"injectables/UsersService.html":{}}}],["getcategories",{"_index":1268,"title":{},"body":{"controllers/MasterController.html":{}}}],["getcategories(@query",{"_index":1322,"title":{},"body":{"controllers/MasterController.html":{}}}],["getcategories(params",{"_index":1284,"title":{},"body":{"controllers/MasterController.html":{}}}],["getcompanystatus",{"_index":1269,"title":{},"body":{"controllers/MasterController.html":{}}}],["getdashboarddetail",{"_index":2020,"title":{},"body":{"injectables/SponsorService.html":{}}}],["getfilestream",{"_index":842,"title":{},"body":{"injectables/FileService.html":{}}}],["getfilestream(filename",{"_index":851,"title":{},"body":{"injectables/FileService.html":{}}}],["getfundings",{"_index":1270,"title":{},"body":{"controllers/MasterController.html":{}}}],["getfundings(@query",{"_index":1327,"title":{},"body":{"controllers/MasterController.html":{}}}],["getfundings(params",{"_index":1290,"title":{},"body":{"controllers/MasterController.html":{}}}],["getgrapapitoken",{"_index":1023,"title":{},"body":{"classes/Mail.html":{}}}],["getmodalities",{"_index":1271,"title":{},"body":{"controllers/MasterController.html":{}}}],["getmodalities(@query",{"_index":1330,"title":{},"body":{"controllers/MasterController.html":{}}}],["getmodalities(params",{"_index":1293,"title":{},"body":{"controllers/MasterController.html":{}}}],["getone",{"_index":2230,"title":{},"body":{"injectables/UsersService.html":{}}}],["getresidentcompanies",{"_index":1601,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getresidentcompanies(@query",{"_index":1648,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getresidentcompanies(params",{"_index":1609,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getresidentcompany",{"_index":1602,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getresidentcompany(@param('id",{"_index":1665,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getresidentcompany(id",{"_index":1616,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getresidentcompanyforsponsor",{"_index":1603,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["getroles",{"_index":1272,"title":{},"body":{"controllers/MasterController.html":{}}}],["getroles(@query",{"_index":1319,"title":{},"body":{"controllers/MasterController.html":{}}}],["getroles(params",{"_index":1297,"title":{},"body":{"controllers/MasterController.html":{}}}],["getsites",{"_index":1273,"title":{},"body":{"controllers/MasterController.html":{}}}],["getsites(@query",{"_index":1316,"title":{},"body":{"controllers/MasterController.html":{}}}],["getsites(params",{"_index":1301,"title":{},"body":{"controllers/MasterController.html":{}}}],["gettechnologystages",{"_index":1274,"title":{},"body":{"controllers/MasterController.html":{}}}],["gettechnologystages(@query",{"_index":1333,"title":{},"body":{"controllers/MasterController.html":{}}}],["gettechnologystages(params",{"_index":1305,"title":{},"body":{"controllers/MasterController.html":{}}}],["getting",{"_index":2444,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserbyid",{"_index":2119,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(@param('id",{"_index":2148,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(id",{"_index":2128,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["getusers",{"_index":2120,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["getusers(@query",{"_index":2146,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(params",{"_index":2130,"title":{},"body":{"controllers/UserController.html":{}}}],["getusers(payload",{"_index":2208,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusertypes",{"_index":1275,"title":{},"body":{"controllers/MasterController.html":{}}}],["given",{"_index":912,"title":{},"body":{"classes/Hash.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["gives",{"_index":2486,"title":{},"body":{"index.html":{}}}],["gloabalsearchcompanies",{"_index":1604,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["gloabalsearchcompanies(@query",{"_index":1662,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["gloabalsearchcompanies(params",{"_index":1625,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["global",{"_index":597,"title":{},"body":{"modules/CommonModule.html":{},"controllers/ResidentCompanyController.html":{}}}],["going",{"_index":1248,"title":{},"body":{"classes/Mail.html":{}}}],["graduated",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant_type",{"_index":1051,"title":{},"body":{"classes/Mail.html":{}}}],["granted",{"_index":2562,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1257,"title":{},"body":{"classes/Mail.html":{}}}],["greaterthanequalsto",{"_index":1969,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["greaterthanequalsto('mincompanysize",{"_index":1985,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["greaterthanequalsto('minfund",{"_index":1981,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["greaterthanequalsto(property",{"_index":2440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guard.ts",{"_index":945,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["guard.ts:12",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guard.ts:6",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guide",{"_index":2447,"title":{},"body":{"index.html":{}}}],["h1",{"_index":1142,"title":{},"body":{"classes/Mail.html":{}}}],["h2",{"_index":1146,"title":{},"body":{"classes/Mail.html":{}}}],["h3",{"_index":1148,"title":{},"body":{"classes/Mail.html":{}}}],["handlerequest",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":485,"title":{"classes/Hash.html":{}},"body":{"injectables/AuthService.html":{},"classes/Hash.html":{},"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["hash.compare(payload.password",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash.make(value",{"_index":1546,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["hashing",{"_index":2550,"title":{},"body":{"index.html":{}}}],["header",{"_index":790,"title":{},"body":{"controllers/FileController.html":{},"classes/Mail.html":{},"controllers/UserController.html":{}}}],["header('content",{"_index":821,"title":{},"body":{"controllers/FileController.html":{}}}],["headers",{"_index":1054,"title":{},"body":{"classes/Mail.html":{}}}],["height:0",{"_index":1117,"title":{},"body":{"classes/Mail.html":{}}}],["height:100",{"_index":1096,"title":{},"body":{"classes/Mail.html":{}}}],["height:120%!important",{"_index":1145,"title":{},"body":{"classes/Mail.html":{}}}],["height:150%!important",{"_index":1141,"title":{},"body":{"classes/Mail.html":{}}}],["height:auto!important",{"_index":1181,"title":{},"body":{"classes/Mail.html":{}}}],["height:inherit!important",{"_index":1110,"title":{},"body":{"classes/Mail.html":{}}}],["hello",{"_index":254,"title":{},"body":{"controllers/AppController.html":{}}}],["here",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hereby",{"_index":2561,"title":{},"body":{"license.html":{}}}],["hi",{"_index":1214,"title":{},"body":{"classes/Mail.html":{}}}],["hidden",{"_index":1112,"title":{},"body":{"classes/Mail.html":{}}}],["hide:all",{"_index":1118,"title":{},"body":{"classes/Mail.html":{}}}],["history.entity",{"_index":1886,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["history.entity.ts",{"_index":1772,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["history.entity.ts:182",{"_index":1786,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:183",{"_index":1802,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:184",{"_index":1779,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:185",{"_index":1816,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:186",{"_index":1778,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:187",{"_index":1805,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:188",{"_index":1819,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:189",{"_index":1814,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:190",{"_index":1817,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:191",{"_index":1790,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:192",{"_index":1782,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:193",{"_index":1806,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:194",{"_index":1792,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:195",{"_index":1793,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:196",{"_index":1807,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:197",{"_index":1797,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:198",{"_index":1809,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:199",{"_index":1798,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:200",{"_index":1776,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:201",{"_index":1804,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:202",{"_index":1787,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:203",{"_index":1821,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:204",{"_index":1789,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:205",{"_index":1794,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:206",{"_index":1808,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:207",{"_index":1801,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:208",{"_index":1810,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:209",{"_index":1813,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:210",{"_index":1818,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:211",{"_index":1783,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:212",{"_index":1784,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:213",{"_index":1780,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:214",{"_index":1785,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:215",{"_index":1800,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:216",{"_index":1799,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:217",{"_index":1777,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:218",{"_index":1820,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:219",{"_index":1811,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:220",{"_index":1812,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:221",{"_index":1791,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:222",{"_index":1775,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:223",{"_index":1774,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:224",{"_index":1795,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:225",{"_index":1796,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:226",{"_index":1803,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:227",{"_index":1815,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:228",{"_index":1788,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["history.entity.ts:229",{"_index":1781,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["hold",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":2606,"title":{},"body":{"license.html":{}}}],["home",{"_index":246,"title":{},"body":{"controllers/AppController.html":{}}}],["host",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["html",{"_index":1209,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["http://localhost",{"_index":2479,"title":{},"body":{"index.html":{}}}],["http://localhost/api/docs",{"_index":2546,"title":{},"body":{"index.html":{}}}],["http_codes",{"_index":2422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iat",{"_index":983,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"injectables/FileService.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtStrategy.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id'].tostring",{"_index":1652,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["id:number",{"_index":1590,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["ide",{"_index":2480,"title":{},"body":{"index.html":{}}}],["ideas",{"_index":2559,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":661,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["ids",{"_index":1612,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["if(info",{"_index":967,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ignore",{"_index":1226,"title":{},"body":{"classes/Mail.html":{}}}],["image",{"_index":820,"title":{},"body":{"controllers/FileController.html":{}}}],["image')@apiquery({name",{"_index":762,"title":{},"body":{"controllers/FileController.html":{}}}],["image')@header('content",{"_index":771,"title":{},"body":{"controllers/FileController.html":{}}}],["image/webp",{"_index":822,"title":{},"body":{"controllers/FileController.html":{}}}],["image/webp')@apiquery({name",{"_index":780,"title":{},"body":{"controllers/FileController.html":{}}}],["image/webp')@header('content",{"_index":772,"title":{},"body":{"controllers/FileController.html":{}}}],["imagename",{"_index":849,"title":{},"body":{"injectables/FileService.html":{}}}],["imageurl",{"_index":195,"title":{},"body":{"classes/AddUserPayload.html":{},"injectables/FileService.html":{},"classes/RegisterPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{}}}],["img",{"_index":1165,"title":{},"body":{"classes/Mail.html":{}}}],["implementation",{"_index":1260,"title":{},"body":{"classes/Mail.html":{},"index.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"classes/PasswordTransformer.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["implied",{"_index":2596,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":1085,"title":{},"body":{"classes/Mail.html":{}}}],["imports",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["included",{"_index":2591,"title":{},"body":{"license.html":{}}}],["including",{"_index":2573,"title":{},"body":{"license.html":{}}}],["increment",{"_index":662,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"controllers/SponsorController.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["industries",{"_index":1941,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["industry",{"_index":98,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["industrypartnerships",{"_index":1699,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["industrypartnershipsdetails",{"_index":1700,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["inestapplication",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["infoblock",{"_index":1152,"title":{},"body":{"classes/Mail.html":{}}}],["information",{"_index":1619,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":2038,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["init",{"_index":2539,"title":{},"body":{"index.html":{}}}],["initit",{"_index":2468,"title":{},"body":{"index.html":{}}}],["inject",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"index.html":{}}}],["injectable",{"_index":333,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ExistsValidator.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderProductService.html":{},"injectables/SchedulerService.html":{},"injectables/SponsorService.html":{},"injectables/UniqueValidator.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderProductService.html":{},"injectables/SchedulerService.html":{},"injectables/SponsorService.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ExistsValidator.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderProductService.html":{},"injectables/SchedulerService.html":{},"injectables/SponsorService.html":{},"injectables/UniqueValidator.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":716,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["injectrepository",{"_index":1495,"title":{},"body":{"injectables/OrderProductService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(order",{"_index":1498,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["injectrepository(orderproduct",{"_index":1499,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["injectrepository(user",{"_index":2221,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(usertoken",{"_index":2222,"title":{},"body":{"injectables/UsersService.html":{}}}],["inside",{"_index":2463,"title":{},"body":{"index.html":{}}}],["insight",{"_index":1072,"title":{},"body":{"classes/Mail.html":{}}}],["install",{"_index":2458,"title":{},"body":{"index.html":{}}}],["integer",{"_index":658,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["integrated",{"_index":2485,"title":{},"body":{"index.html":{}}}],["intellectualproperty",{"_index":99,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["interface",{"_index":708,"title":{"interfaces/ExistsValidationArguments.html":{},"interfaces/UniqueValidationArguments.html":{}},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{}}}],["interfaces",{"_index":710,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"interfaces/UniqueValidationArguments.html":{},"overview.html":{}}}],["internal_server_error",{"_index":2431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["internalcomment",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{}}}],["invalid",{"_index":882,"title":{},"body":{"injectables/FileService.html":{},"injectables/UsersService.html":{}}}],["investor",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invite",{"_index":1239,"title":{},"body":{"classes/Mail.html":{},"injectables/UsersService.html":{}}}],["invoice",{"_index":918,"title":{"classes/Invoice.html":{}},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"modules/OrderProductModule.html":{},"coverage.html":{}}}],["invoice.entity",{"_index":1393,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["invoice.orders",{"_index":1396,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["invoicefillablefields",{"_index":937,"title":{"classes/InvoiceFillableFields.html":{}},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"coverage.html":{}}}],["invoiceid",{"_index":1398,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["invoices",{"_index":1382,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["invoicingexecutivepoc",{"_index":1834,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["isactive",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{}}}],["isaffiliated",{"_index":100,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["isarchived",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{}}}],["isemail",{"_index":164,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/ForgotPasswordPayload.html":{},"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["isenv",{"_index":609,"title":{},"body":{"classes/ConfigService.html":{}}}],["isnotempty",{"_index":165,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/CreateOrderProductDto.html":{},"classes/LoginPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["isnumber",{"_index":166,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/MasterPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{}}}],["isobject",{"_index":15,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["isobject(value",{"_index":25,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["isoptional",{"_index":167,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["it's",{"_index":2548,"title":{},"body":{"index.html":{}}}],["item",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["join(approot.path",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["joiningasmember",{"_index":1835,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["jointable",{"_index":932,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{}}}],["json.parse(req.headers['x",{"_index":1651,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["json.parse(require(\"fs\").readfilesync(approot.path",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":943,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":980,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.registerasync",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["jwtpayload",{"_index":972,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":422,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":616,"title":{},"body":{"classes/ConfigService.html":{},"classes/CreateUsersTable1611484925515.html":{}}}],["keyof",{"_index":739,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["kind",{"_index":2595,"title":{},"body":{"license.html":{}}}],["l",{"_index":1163,"title":{},"body":{"classes/Mail.html":{}}}],["lab",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laboratoryexecutivepoc",{"_index":1836,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["lastchangedby",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{}}}],["lastchangeddatetime",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{}}}],["lastname",{"_index":196,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["left",{"_index":1176,"title":{},"body":{"classes/Mail.html":{}}}],["left:0px!important",{"_index":1188,"title":{},"body":{"classes/Mail.html":{}}}],["legend",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["lessthanequalsto",{"_index":1973,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lessthanequalsto('maxcompanysize",{"_index":1983,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["lessthanequalsto('maxfund",{"_index":1979,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["lessthanequalsto(property",{"_index":2442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lessthanorequal",{"_index":1496,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["lessthanorequal(enddate",{"_index":1529,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["li",{"_index":1138,"title":{},"body":{"classes/Mail.html":{}}}],["liability",{"_index":2610,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2607,"title":{},"body":{"license.html":{}}}],["license",{"_index":2554,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":991,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["limitation",{"_index":2574,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2597,"title":{},"body":{"license.html":{}}}],["line",{"_index":1095,"title":{},"body":{"classes/Mail.html":{}}}],["link",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["link/:token",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["link/:token')@apiresponse({status",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["linkedinlink",{"_index":1837,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["list",{"_index":1281,"title":{},"body":{"controllers/MasterController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["listresidentcompanypayload",{"_index":986,"title":{"classes/ListResidentCompanyPayload.html":{}},"body":{"classes/ListResidentCompanyPayload.html":{},"coverage.html":{}}}],["listuserpayload",{"_index":1007,"title":{"classes/ListUserPayload.html":{}},"body":{"classes/ListUserPayload.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["literal",{"_index":613,"title":{},"body":{"classes/ConfigService.html":{},"controllers/FileController.html":{}}}],["logged",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger",{"_index":1930,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["logger(schedulerservice.name",{"_index":1931,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["logic",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["login",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["login'})@apiresponse({status",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.payload",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginpayload",{"_index":376,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["logo",{"_index":877,"title":{},"body":{"injectables/FileService.html":{},"classes/UploadPayload.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["logoimgurl",{"_index":1701,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["logoonlicensedspace",{"_index":1702,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["logoonwall",{"_index":1703,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["look",{"_index":2494,"title":{},"body":{"index.html":{}}}],["lose",{"_index":2510,"title":{},"body":{"index.html":{}}}],["m",{"_index":1157,"title":{},"body":{"classes/Mail.html":{}}}],["machine",{"_index":2484,"title":{},"body":{"index.html":{}}}],["made",{"_index":2446,"title":{},"body":{"index.html":{}}}],["mail",{"_index":1021,"title":{"classes/Mail.html":{}},"body":{"classes/Mail.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["mainexecutivepoc",{"_index":1838,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["make",{"_index":903,"title":{},"body":{"classes/Hash.html":{}}}],["make(plaintext",{"_index":909,"title":{},"body":{"classes/Hash.html":{}}}],["manage",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management.entity",{"_index":1882,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["management.entity.ts",{"_index":1832,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["management.entity.ts:18",{"_index":1845,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:21",{"_index":1842,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:24",{"_index":1851,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:27",{"_index":1856,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:30",{"_index":1844,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:33",{"_index":1853,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:36",{"_index":1849,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:39",{"_index":1854,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:42",{"_index":1841,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:45",{"_index":1847,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:48",{"_index":1850,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:51",{"_index":1848,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:54",{"_index":1846,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:57",{"_index":1855,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:60",{"_index":1843,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:63",{"_index":1857,"title":{},"body":{"classes/ResidentCompanyManagement.html":{}}}],["management.entity.ts:67",{"_index":1863,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:68",{"_index":1861,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:69",{"_index":1869,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:70",{"_index":1873,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:71",{"_index":1862,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:72",{"_index":1870,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:73",{"_index":1867,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:74",{"_index":1871,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:75",{"_index":1860,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:76",{"_index":1865,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:77",{"_index":1868,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:78",{"_index":1866,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:79",{"_index":1864,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["management.entity.ts:80",{"_index":1872,"title":{},"body":{"classes/ResidentCompanyManagementFillableFields.html":{}}}],["manytomany",{"_index":933,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["manytomany(type",{"_index":935,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["manytomany(undefined",{"_index":927,"title":{},"body":{"classes/Invoice.html":{},"classes/Order.html":{}}}],["manytoone",{"_index":1417,"title":{},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{}}}],["manytoone(undefined",{"_index":1409,"title":{},"body":{"classes/OrderProduct.html":{}}}],["mariadb",{"_index":2491,"title":{},"body":{"index.html":{}}}],["master",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["master.controller",{"_index":1351,"title":{},"body":{"modules/MasterModule.html":{}}}],["master.service",{"_index":1350,"title":{},"body":{"modules/MasterModule.html":{}}}],["master/biolabs",{"_index":1825,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["master/category.entity",{"_index":1823,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["master/funding.entity",{"_index":1824,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["master/modality.entity",{"_index":1826,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["master/site.entity",{"_index":1822,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["master/technology",{"_index":1827,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["master_category",{"_index":699,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_category_pkey",{"_index":681,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_funding",{"_index":701,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_funding_pkey",{"_index":685,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_modality",{"_index":700,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_modality_pkey",{"_index":683,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_source_to_biolabs",{"_index":703,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_source_to_biolabs_pkey",{"_index":689,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_technology_stage",{"_index":702,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_technology_stage_pkey",{"_index":687,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_user_type",{"_index":698,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["master_user_type_pkey",{"_index":678,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["mastercontroller",{"_index":1264,"title":{"controllers/MasterController.html":{}},"body":{"controllers/MasterController.html":{},"modules/MasterModule.html":{},"coverage.html":{}}}],["mastermodule",{"_index":272,"title":{"modules/MasterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MasterModule.html":{},"modules.html":{},"overview.html":{}}}],["masterpayload",{"_index":1277,"title":{"classes/MasterPayload.html":{}},"body":{"controllers/MasterController.html":{},"classes/MasterPayload.html":{},"coverage.html":{}}}],["masterservice",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"coverage.html":{},"overview.html":{}}}],["matches",{"_index":168,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["matches('^[a",{"_index":181,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["matching",{"_index":60,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":169,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/Mail.html":{},"classes/MasterPayload.html":{}}}],["max(100",{"_index":1371,"title":{},"body":{"classes/MasterPayload.html":{}}}],["maxcompanysize",{"_index":1942,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["maxfund",{"_index":1943,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["maximum",{"_index":1356,"title":{},"body":{"classes/MasterPayload.html":{}}}],["maxlength",{"_index":170,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/MasterPayload.html":{}}}],["maxlength(100",{"_index":180,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["maxlength(250",{"_index":190,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["maxlength(30",{"_index":1370,"title":{},"body":{"classes/MasterPayload.html":{}}}],["maxlength(500",{"_index":182,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["maxvalue",{"_index":665,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["media",{"_index":1134,"title":{},"body":{"classes/Mail.html":{}}}],["menu",{"_index":1150,"title":{},"body":{"classes/Mail.html":{}}}],["merchantability",{"_index":2599,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2576,"title":{},"body":{"license.html":{}}}],["message",{"_index":1075,"title":{},"body":{"classes/Mail.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{},"dependencies.html":{}}}],["method",{"_index":245,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/Hash.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["methoddecorator",{"_index":802,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateUsersTable1611484925515.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Hash.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"classes/TrimStringsPipe.html":{},"injectables/UniqueValidator.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["migration",{"_index":2511,"title":{},"body":{"index.html":{}}}],["migration.json",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["migration:create",{"_index":2519,"title":{},"body":{"index.html":{}}}],["migration:reverttest",{"_index":2528,"title":{},"body":{"index.html":{}}}],["migration:runrevert",{"_index":2527,"title":{},"body":{"index.html":{}}}],["migrationdata",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":645,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["migrations",{"_index":2475,"title":{},"body":{"index.html":{}}}],["min",{"_index":171,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["min(0",{"_index":188,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["min(1",{"_index":183,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["mincompanysize",{"_index":1944,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["minfund",{"_index":1945,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["minimum",{"_index":1355,"title":{},"body":{"classes/MasterPayload.html":{}}}],["minlength",{"_index":172,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/LoginPayload.html":{},"classes/MasterPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(1",{"_index":184,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["minlength(3",{"_index":1369,"title":{},"body":{"classes/MasterPayload.html":{}}}],["minlength(5",{"_index":1020,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{}}}],["minvalue",{"_index":664,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["miscellaneous",{"_index":2420,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2555,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1195,"title":{},"body":{"classes/Mail.html":{}}}],["modalities",{"_index":1296,"title":{},"body":{"controllers/MasterController.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["modality",{"_index":101,"title":{"classes/Modality.html":{}},"body":{"classes/AddResidentCompanyPayload.html":{},"modules/MasterModule.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["modality.entity",{"_index":1345,"title":{},"body":{"modules/MasterModule.html":{}}}],["modalityfillablefields",{"_index":1378,"title":{"classes/ModalityFillableFields.html":{}},"body":{"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"coverage.html":{}}}],["mode",{"_index":2478,"title":{},"body":{"index.html":{}}}],["model/invoice.entity",{"_index":1478,"title":{},"body":{"modules/OrderProductModule.html":{}}}],["model/order",{"_index":1479,"title":{},"body":{"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{}}}],["model/order.entity",{"_index":1480,"title":{},"body":{"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{}}}],["modifiedat",{"_index":1383,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["modify",{"_index":2575,"title":{},"body":{"license.html":{}}}],["module",{"_index":256,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":258,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/common",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/common/validator/same",{"_index":1537,"title":{},"body":{"classes/PasswordPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["modules/config",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/SponsorModule.html":{}}}],["modules/public/auth",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/public/file",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/public/master",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/public/order/order.module",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/public/resident",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/public/sponsor/sponsor.module",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/public/user",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":1441,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["more",{"_index":2496,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":1497,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["morethanorequal(startdate",{"_index":1528,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["ms",{"_index":1061,"title":{},"body":{"classes/Mail.html":{}}}],["mso",{"_index":1099,"title":{},"body":{"classes/Mail.html":{}}}],["mysql",{"_index":2404,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["mysql/mariadb/postgres",{"_index":2457,"title":{},"body":{"index.html":{}}}],["n",{"_index":2520,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddResidentCompanyPayload.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nbsp;2021",{"_index":1227,"title":{},"body":{"classes/Mail.html":{}}}],["need",{"_index":2505,"title":{},"body":{"index.html":{}}}],["nest",{"_index":2518,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":2476,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":43,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"controllers/OrderProductController.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"injectables/SchedulerService.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2392,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2070,"title":{},"body":{"classes/UpdateSponsorDto.html":{}}}],["nestjs/passport",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":795,"title":{},"body":{"controllers/FileController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"injectables/SchedulerService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":78,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"controllers/FileController.html":{},"classes/ForgotPasswordPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"controllers/MasterController.html":{},"classes/MasterPayload.html":{},"controllers/OrderProductController.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"controllers/ResidentCompanyController.html":{},"classes/SearchResidentCompanyPayload.html":{},"controllers/SponsorController.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["network",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"classes/Mail.html":{},"injectables/OrderProductService.html":{},"injectables/SchedulerService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newsletters",{"_index":1704,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["newuser",{"_index":2235,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":2488,"title":{},"body":{"index.html":{}}}],["none",{"_index":1080,"title":{},"body":{"classes/Mail.html":{}}}],["noninfringement",{"_index":2603,"title":{},"body":{"license.html":{}}}],["nooffullemp",{"_index":102,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["not_acceptable",{"_index":2429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":2427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notacceptableexception",{"_index":860,"title":{},"body":{"injectables/FileService.html":{},"injectables/UsersService.html":{}}}],["notacceptableexception('token",{"_index":2294,"title":{},"body":{"injectables/UsersService.html":{}}}],["notacceptableexception('user",{"_index":2263,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":2589,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2459,"title":{},"body":{"index.html":{}}}],["null",{"_index":48,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":116,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/BaseEntity.html":{},"classes/CreateOrderProductDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["number",{"_index":69,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"controllers/FileController.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["number'})@apiquery({name",{"_index":787,"title":{},"body":{"controllers/FileController.html":{}}}],["number(process.env.appsetting_jwt_expiration_time",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["o.companystage",{"_index":186,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["o.fundingsource.includes('9999",{"_index":189,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["o.maxcompanysize",{"_index":1982,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["o.maxfund",{"_index":1978,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["o.mincompanysize",{"_index":1984,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["o.minfund",{"_index":1980,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["o.pagination",{"_index":1977,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["o.sort",{"_index":1986,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["object",{"_index":47,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddResidentCompanyPayload.html":{},"injectables/AuthService.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/OrderProductService.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":745,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["object.keys(values).foreach((key",{"_index":49,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["objecttype",{"_index":720,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["obtaining",{"_index":2566,"title":{},"body":{"license.html":{}}}],["ok",{"_index":2425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ol",{"_index":1139,"title":{},"body":{"classes/Mail.html":{}}}],["onapplicationbootstrap",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["one",{"_index":819,"title":{},"body":{"controllers/FileController.html":{}}}],["onetomany",{"_index":1392,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["onetomany(undefined",{"_index":1390,"title":{},"body":{"classes/Order.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateUsersTable1611484925515.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Hash.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"controllers/ResidentCompanyController.html":{},"classes/TrimStringsPipe.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":746,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":79,"title":{"classes/Order.html":{}},"body":{"classes/AddOrderDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"coverage.html":{}}}],["order.controller",{"_index":1481,"title":{},"body":{"modules/OrderProductModule.html":{}}}],["order.entity",{"_index":934,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{}}}],["order.invoices",{"_index":936,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{}}}],["order.orderproducts",{"_index":1419,"title":{},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{}}}],["order.payload",{"_index":1449,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["order.payload.ts",{"_index":64,"title":{},"body":{"classes/AddOrderDto.html":{},"coverage.html":{}}}],["order.payload.ts:14",{"_index":74,"title":{},"body":{"classes/AddOrderDto.html":{}}}],["order.payload.ts:20",{"_index":76,"title":{},"body":{"classes/AddOrderDto.html":{}}}],["order.payload.ts:9",{"_index":73,"title":{},"body":{"classes/AddOrderDto.html":{}}}],["order.service",{"_index":1453,"title":{},"body":{"controllers/OrderProductController.html":{},"modules/OrderProductModule.html":{}}}],["order_product",{"_index":1418,"title":{},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{}}}],["orderfillablefields",{"_index":1397,"title":{"classes/OrderFillableFields.html":{}},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{},"coverage.html":{}}}],["orderid",{"_index":67,"title":{},"body":{"classes/AddOrderDto.html":{}}}],["orderproduct",{"_index":1389,"title":{"classes/OrderProduct.html":{}},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"coverage.html":{}}}],["orderproduct.cost",{"_index":1512,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproduct.currentcharge",{"_index":1516,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproduct.enddate",{"_index":1520,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproduct.order",{"_index":1395,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{}}}],["orderproduct.productdescription",{"_index":1510,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproduct.productname",{"_index":1508,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproduct.recurrence",{"_index":1514,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproduct.startdate",{"_index":1518,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproductcontroller",{"_index":1421,"title":{"controllers/OrderProductController.html":{}},"body":{"controllers/OrderProductController.html":{},"modules/OrderProductModule.html":{},"coverage.html":{}}}],["orderproductfillablefields",{"_index":1420,"title":{"classes/OrderProductFillableFields.html":{}},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"coverage.html":{}}}],["orderproductmodule",{"_index":273,"title":{"modules/OrderProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderProductModule.html":{},"modules.html":{},"overview.html":{}}}],["orderproductrepository",{"_index":1486,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orderproducts",{"_index":68,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"controllers/OrderProductController.html":{}}}],["orderproductservice",{"_index":1452,"title":{"injectables/OrderProductService.html":{}},"body":{"controllers/OrderProductController.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"coverage.html":{},"overview.html":{}}}],["orderrepository",{"_index":1488,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["orders",{"_index":920,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{}}}],["organization",{"_index":1573,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["origin",{"_index":2243,"title":{},"body":{"injectables/UsersService.html":{}}}],["otherbiolabssources",{"_index":103,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["othercompanystage",{"_index":104,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["otherfundingsource",{"_index":105,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["otherindustries",{"_index":106,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["otherintellectualproperty",{"_index":107,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["othermodality",{"_index":108,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["otherwise",{"_index":2509,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outlook",{"_index":1087,"title":{},"body":{"classes/Mail.html":{}}}],["outside",{"_index":2448,"title":{},"body":{"index.html":{}}}],["overflow:hidden",{"_index":1115,"title":{},"body":{"classes/Mail.html":{}}}],["overflow:visible!important",{"_index":1200,"title":{},"body":{"classes/Mail.html":{}}}],["overview",{"_index":2620,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1091,"title":{},"body":{"classes/Mail.html":{}}}],["p0",{"_index":1182,"title":{},"body":{"classes/Mail.html":{}}}],["p0b",{"_index":1191,"title":{},"body":{"classes/Mail.html":{}}}],["p0l",{"_index":1187,"title":{},"body":{"classes/Mail.html":{}}}],["p0r",{"_index":1184,"title":{},"body":{"classes/Mail.html":{}}}],["p0t",{"_index":1189,"title":{},"body":{"classes/Mail.html":{}}}],["p20b",{"_index":1193,"title":{},"body":{"classes/Mail.html":{}}}],["package",{"_index":2387,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1185,"title":{},"body":{"classes/Mail.html":{}}}],["padding:0",{"_index":1088,"title":{},"body":{"classes/Mail.html":{}}}],["padding:0px!important",{"_index":1183,"title":{},"body":{"classes/Mail.html":{}}}],["page",{"_index":247,"title":{},"body":{"controllers/AppController.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["pagination",{"_index":992,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["pal",{"_index":1645,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["param",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":1620,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateUsersTable1611484925515.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Hash.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"controllers/ResidentCompanyController.html":{},"classes/TrimStringsPipe.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1283,"title":{},"body":{"controllers/MasterController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["parent_id",{"_index":580,"title":{},"body":{"classes/Category.html":{},"classes/CategoryFillableFields.html":{}}}],["partial",{"_index":742,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["partialtype",{"_index":2069,"title":{},"body":{"classes/UpdateSponsorDto.html":{}}}],["partialtype(createsponsordto",{"_index":2072,"title":{},"body":{"classes/UpdateSponsorDto.html":{}}}],["particular",{"_index":2601,"title":{},"body":{"license.html":{}}}],["passport",{"_index":977,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":978,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":979,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passsword",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":197,"title":{},"body":{"classes/AddUserPayload.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/TrimStringsPipe.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["password&nbsp",{"_index":1213,"title":{},"body":{"classes/Mail.html":{}}}],["password')@apiresponse({status",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.payload",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.payload.ts",{"_index":888,"title":{},"body":{"classes/ForgotPasswordPayload.html":{},"coverage.html":{}}}],["password.payload.ts:9",{"_index":890,"title":{},"body":{"classes/ForgotPasswordPayload.html":{}}}],["password.transformer",{"_index":2112,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["password?token",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordconfirmation",{"_index":198,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/TrimStringsPipe.html":{},"classes/UpdateUserPayload.html":{}}}],["passwordpayload",{"_index":381,"title":{"classes/PasswordPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/PasswordPayload.html":{},"coverage.html":{}}}],["passwordtransformer",{"_index":1539,"title":{"classes/PasswordTransformer.html":{}},"body":{"classes/PasswordTransformer.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"coverage.html":{}}}],["patentsfiledgranted",{"_index":1705,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["patentsfiledgranteddetails",{"_index":1706,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["path",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["payload.companyid",{"_index":816,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/UsersService.html":{}}}],["payload.cost",{"_index":1513,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.currentcharge",{"_index":1517,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.email",{"_index":2246,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.enddate",{"_index":1521,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.filetype",{"_index":871,"title":{},"body":{"injectables/FileService.html":{}}}],["payload.firstname",{"_index":2251,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.imageurl",{"_index":2266,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.lastname",{"_index":2253,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.limit",{"_index":2283,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.orderid",{"_index":1500,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.orderproducts",{"_index":1506,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.orderproducts['orderid",{"_index":1501,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.page",{"_index":2284,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.pagination",{"_index":2279,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.password",{"_index":2260,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.phonenumber",{"_index":2257,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.productdescription",{"_index":1511,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.productname",{"_index":1509,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.q",{"_index":2276,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.recurrence",{"_index":1515,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.role",{"_index":2274,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.startdate",{"_index":1519,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["payload.title",{"_index":2255,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.token",{"_index":2295,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload.userid",{"_index":815,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{}}}],["payload.usertype",{"_index":2259,"title":{},"body":{"injectables/UsersService.html":{}}}],["pending/default",{"_index":1584,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["permission",{"_index":2560,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["permit",{"_index":2583,"title":{},"body":{"license.html":{}}}],["person",{"_index":2565,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2584,"title":{},"body":{"license.html":{}}}],["pg",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["pg_catalog.\"default",{"_index":671,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["phone",{"_index":1839,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["phonenumber",{"_index":199,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["pic",{"_index":2219,"title":{},"body":{"injectables/UsersService.html":{}}}],["pipetransform",{"_index":9,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["pitchdeck",{"_index":876,"title":{},"body":{"injectables/FileService.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/UploadPayload.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["placed",{"_index":2522,"title":{},"body":{"index.html":{}}}],["plain",{"_index":907,"title":{},"body":{"classes/Hash.html":{}}}],["plaintext",{"_index":908,"title":{},"body":{"classes/Hash.html":{}}}],["play",{"_index":2503,"title":{},"body":{"index.html":{}}}],["please",{"_index":1247,"title":{},"body":{"classes/Mail.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["portions",{"_index":2593,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2487,"title":{},"body":{"index.html":{}}}],["post",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"classes/Mail.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["post('forgot",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiresponse({status",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":811,"title":{},"body":{"controllers/FileController.html":{}}}],["post('upload')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":784,"title":{},"body":{"controllers/FileController.html":{}}}],["post()@apiresponse({status",{"_index":1430,"title":{},"body":{"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{}}}],["postgres",{"_index":2490,"title":{},"body":{"index.html":{}}}],["preconfigured",{"_index":2547,"title":{},"body":{"index.html":{}}}],["preferredmovein",{"_index":109,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["prefix",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["prepared",{"_index":2465,"title":{},"body":{"index.html":{}}}],["primary",{"_index":679,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["primarygeneratedcolumn",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["primarygeneratedcolumn('rowid",{"_index":563,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{}}}],["priority:100!important",{"_index":1101,"title":{},"body":{"classes/Mail.html":{}}}],["private",{"_index":14,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"injectables/SchedulerService.html":{},"controllers/SponsorController.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["process.env.appsetting_app_env",{"_index":623,"title":{},"body":{"classes/ConfigService.html":{}}}],["process.env.appsetting_app_url",{"_index":345,"title":{},"body":{"injectables/AppService.html":{}}}],["process.env.appsetting_azure_storage_connection",{"_index":855,"title":{},"body":{"injectables/FileService.html":{}}}],["process.env.appsetting_jwt_expiration_time",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["process.env.appsetting_jwt_secret_key",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["process.env.appsetting_microsoft_email_app_id",{"_index":1046,"title":{},"body":{"classes/Mail.html":{}}}],["process.env.appsetting_microsoft_email_app_seceret",{"_index":1050,"title":{},"body":{"classes/Mail.html":{}}}],["process.env.appsetting_microsoft_email_endpoint_token",{"_index":1053,"title":{},"body":{"classes/Mail.html":{}}}],["process.env.appsetting_microsoft_email_graph_scope",{"_index":1048,"title":{},"body":{"classes/Mail.html":{}}}],["process.env.postgresqlconnstr_db_database",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_host",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_password",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_port",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_ssl",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_sync",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_type",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.postgresqlconnstr_db_username",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["product",{"_index":1424,"title":{"classes/Product.html":{}},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"coverage.html":{}}}],["product.create.dto",{"_index":80,"title":{},"body":{"classes/AddOrderDto.html":{}}}],["product.create.dto.ts",{"_index":625,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["product.create.dto.ts:10",{"_index":636,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.create.dto.ts:16",{"_index":635,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.create.dto.ts:23",{"_index":632,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.create.dto.ts:30",{"_index":637,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.create.dto.ts:37",{"_index":633,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.create.dto.ts:43",{"_index":638,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.create.dto.ts:49",{"_index":634,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.entity",{"_index":1394,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{}}}],["product.entity.ts",{"_index":1402,"title":{},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"coverage.html":{}}}],["product.entity.ts:12",{"_index":1410,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:15",{"_index":1413,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:18",{"_index":1412,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:21",{"_index":1403,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:24",{"_index":1414,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:27",{"_index":1406,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:30",{"_index":1415,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:33",{"_index":1407,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:36",{"_index":1404,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:39",{"_index":1416,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.entity.ts:43",{"_index":1470,"title":{},"body":{"classes/OrderProductFillableFields.html":{}}}],["product.entity.ts:44",{"_index":1467,"title":{},"body":{"classes/OrderProductFillableFields.html":{}}}],["product.entity.ts:45",{"_index":1471,"title":{},"body":{"classes/OrderProductFillableFields.html":{}}}],["product.entity.ts:46",{"_index":1468,"title":{},"body":{"classes/OrderProductFillableFields.html":{}}}],["product.entity.ts:47",{"_index":1472,"title":{},"body":{"classes/OrderProductFillableFields.html":{}}}],["product.entity.ts:48",{"_index":1469,"title":{},"body":{"classes/OrderProductFillableFields.html":{}}}],["product.entity.ts:9",{"_index":1408,"title":{},"body":{"classes/OrderProduct.html":{}}}],["product.update.dto",{"_index":1451,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["product.update.dto.ts",{"_index":2053,"title":{},"body":{"classes/UpdateOrderProductDto.html":{},"coverage.html":{}}}],["product.update.dto.ts:13",{"_index":2057,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["product.update.dto.ts:19",{"_index":2054,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["product.update.dto.ts:25",{"_index":2059,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["product.update.dto.ts:31",{"_index":2055,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["product.update.dto.ts:37",{"_index":2060,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["product.update.dto.ts:43",{"_index":2056,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["product.update.dto.ts:8",{"_index":2058,"title":{},"body":{"classes/UpdateOrderProductDto.html":{}}}],["productdescription",{"_index":629,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/UpdateOrderProductDto.html":{}}}],["productfillablefields",{"_index":1554,"title":{"classes/ProductFillableFields.html":{}},"body":{"classes/Product.html":{},"classes/ProductFillableFields.html":{},"coverage.html":{}}}],["production",{"_index":2500,"title":{},"body":{"index.html":{}}}],["productname",{"_index":630,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/UpdateOrderProductDto.html":{}}}],["products",{"_index":1524,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["profile",{"_index":2218,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2470,"title":{},"body":{"index.html":{}}}],["promise",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUsersTable1611484925515.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["properties",{"_index":65,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/PasswordPayload.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"interfaces/UniqueValidationArguments.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":2441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertydescriptor",{"_index":805,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":803,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["propertyname",{"_index":743,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["protected",{"_index":12,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["provide",{"_index":604,"title":{},"body":{"modules/ConfigModule.html":{}}}],["provided",{"_index":2232,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["providers",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":646,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["public.master_category",{"_index":680,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.master_funding",{"_index":684,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.master_modality",{"_index":682,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.master_source_to_biolabs",{"_index":688,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.master_technology_stage",{"_index":686,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.master_user_type",{"_index":657,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.site",{"_index":690,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["public.users",{"_index":692,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["publications",{"_index":1840,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["publish",{"_index":2577,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2602,"title":{},"body":{"license.html":{}}}],["put",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["put('/update",{"_index":1656,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["put(':id",{"_index":1458,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["put(':id')@apiresponse({status",{"_index":1445,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["put('set",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["q",{"_index":993,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["qs",{"_index":1041,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["qs.stringify",{"_index":1044,"title":{},"body":{"classes/Mail.html":{}}}],["query",{"_index":791,"title":{},"body":{"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["query('enddate",{"_index":1462,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["query('filename",{"_index":824,"title":{},"body":{"controllers/FileController.html":{}}}],["query('filetype",{"_index":825,"title":{},"body":{"controllers/FileController.html":{}}}],["queryrunner",{"_index":649,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["queryrunner.query",{"_index":653,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["queryrunner.query(`drop",{"_index":696,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["r",{"_index":1161,"title":{},"body":{"classes/Mail.html":{}}}],["randdpath",{"_index":110,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["rc",{"_index":1879,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["read",{"_index":2536,"title":{},"body":{"index.html":{}}}],["readimage",{"_index":757,"title":{},"body":{"controllers/FileController.html":{}}}],["readimage(@res",{"_index":823,"title":{},"body":{"controllers/FileController.html":{}}}],["readimage(res",{"_index":778,"title":{},"body":{"controllers/FileController.html":{}}}],["readonly",{"_index":253,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"controllers/ResidentCompanyController.html":{},"injectables/SchedulerService.html":{},"controllers/SponsorController.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":1245,"title":{},"body":{"classes/Mail.html":{},"index.html":{}}}],["received",{"_index":1217,"title":{},"body":{"classes/Mail.html":{}}}],["recurrence",{"_index":631,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/UpdateOrderProductDto.html":{}}}],["reflect",{"_index":2410,"title":{},"body":{"dependencies.html":{}}}],["registerdecorator",{"_index":724,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["registerpayload",{"_index":1558,"title":{"classes/RegisterPayload.html":{}},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["registration'})@apiresponse({status",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["rejected",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relatively",{"_index":2513,"title":{},"body":{"index.html":{}}}],["replace",{"_index":2454,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1485,"title":{},"body":{"injectables/OrderProductService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["req.headers['origin",{"_index":2244,"title":{},"body":{"injectables/UsersService.html":{}}}],["req.headers['x",{"_index":1650,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["req.user.site_id",{"_index":1649,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["request",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["request'})@apiresponse({status",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["requestexpress",{"_index":2124,"title":{},"body":{"controllers/UserController.html":{}}}],["require('app",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["require('axios",{"_index":1040,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["require('dotenv",{"_index":1038,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["require('qs",{"_index":1042,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":81,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"controllers/FileController.html":{},"classes/ForgotPasswordPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/MasterPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{}}}],["res",{"_index":777,"title":{},"body":{"controllers/FileController.html":{}}}],["reserved",{"_index":1230,"title":{},"body":{"classes/Mail.html":{}}}],["reset",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"classes/Mail.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resident",{"_index":85,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ListResidentCompanyPayload.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"classes/SearchResidentCompanyPayload.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resident.ts",{"_index":2319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resident_accesslevels",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resident_companies",{"_index":1766,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["resident_company_advisory",{"_index":1588,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{}}}],["resident_company_documents",{"_index":1680,"title":{},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{}}}],["resident_company_history",{"_index":1828,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["resident_company_management",{"_index":1858,"title":{},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{}}}],["resident_company_technical",{"_index":1904,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["residentcompany",{"_index":177,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"coverage.html":{}}}],["residentcompanyadvisory",{"_index":1570,"title":{"classes/ResidentCompanyAdvisory.html":{}},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["residentcompanyadvisoryfillablefields",{"_index":1589,"title":{"classes/ResidentCompanyAdvisoryFillableFields.html":{}},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"coverage.html":{}}}],["residentcompanycontroller",{"_index":1597,"title":{"controllers/ResidentCompanyController.html":{}},"body":{"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["residentcompanydocuments",{"_index":1667,"title":{"classes/ResidentCompanyDocuments.html":{}},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["residentcompanydocumentsfillablefields",{"_index":1682,"title":{"classes/ResidentCompanyDocumentsFillableFields.html":{}},"body":{"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"coverage.html":{}}}],["residentcompanyfillablefields",{"_index":1690,"title":{"classes/ResidentCompanyFillableFields.html":{}},"body":{"classes/ResidentCompanyFillableFields.html":{},"coverage.html":{}}}],["residentcompanyhistory",{"_index":1829,"title":{},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["residentcompanyhistoryfillablefields",{"_index":1771,"title":{"classes/ResidentCompanyHistoryFillableFields.html":{}},"body":{"classes/ResidentCompanyHistoryFillableFields.html":{},"coverage.html":{}}}],["residentcompanymanagement",{"_index":1831,"title":{"classes/ResidentCompanyManagement.html":{}},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"coverage.html":{}}}],["residentcompanymanagementfillablefields",{"_index":1859,"title":{"classes/ResidentCompanyManagementFillableFields.html":{}},"body":{"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"coverage.html":{}}}],["residentcompanymodule",{"_index":274,"title":{"modules/ResidentCompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["residentcompanyservice",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"controllers/SponsorController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["residentcompanytechnical",{"_index":1883,"title":{"classes/ResidentCompanyTechnical.html":{}},"body":{"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"coverage.html":{}}}],["residentcompanytechnicalfillablefields",{"_index":1905,"title":{"classes/ResidentCompanyTechnicalFillableFields.html":{}},"body":{"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"coverage.html":{}}}],["response",{"_index":248,"title":{},"body":{"controllers/AppController.html":{},"controllers/FileController.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["response'})@apiresponse({status",{"_index":767,"title":{},"body":{"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["response.data",{"_index":1068,"title":{},"body":{"classes/Mail.html":{}}}],["restful",{"_index":2540,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":2572,"title":{},"body":{"license.html":{}}}],["result",{"_index":59,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":61,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Hash.html":{},"injectables/JwtAuthGuard.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"controllers/ResidentCompanyController.html":{},"modules/ResidentCompanyModule.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":22,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/CreateUsersTable1611484925515.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/Hash.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"injectables/SponsorService.html":{},"classes/TrimStringsPipe.html":{},"injectables/UniqueValidator.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["right",{"_index":1177,"title":{},"body":{"classes/Mail.html":{}}}],["right:0px!important",{"_index":1186,"title":{},"body":{"classes/Mail.html":{}}}],["rights",{"_index":1229,"title":{},"body":{"classes/Mail.html":{},"license.html":{}}}],["role",{"_index":200,"title":{"classes/Role.html":{}},"body":{"classes/AddUserPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"modules/MasterModule.html":{},"classes/RegisterPayload.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["role.entity",{"_index":1346,"title":{},"body":{"modules/MasterModule.html":{}}}],["rolefillablefields",{"_index":1925,"title":{"classes/RoleFillableFields.html":{}},"body":{"classes/Role.html":{},"classes/RoleFillableFields.html":{},"coverage.html":{}}}],["roles",{"_index":1300,"title":{},"body":{"controllers/MasterController.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{}}}],["root",{"_index":242,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["rootpath",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["row!important",{"_index":1203,"title":{},"body":{"classes/Mail.html":{}}}],["rows",{"_index":2214,"title":{},"body":{"injectables/UsersService.html":{}}}],["run",{"_index":2464,"title":{},"body":{"index.html":{}}}],["running",{"_index":2474,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2412,"title":{},"body":{"dependencies.html":{}}}],["safely",{"_index":1225,"title":{},"body":{"classes/Mail.html":{}}}],["salt",{"_index":914,"title":{},"body":{"classes/Hash.html":{}}}],["sameas",{"_index":223,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sameas('password",{"_index":237,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["sameas(property",{"_index":2443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["saved",{"_index":1490,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["saveduser",{"_index":2237,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveduser.firstname",{"_index":2242,"title":{},"body":{"injectables/UsersService.html":{}}}],["schedulemodule",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulerservice",{"_index":1928,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"coverage.html":{}}}],["schema",{"_index":806,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["scientist",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":1047,"title":{},"body":{"classes/Mail.html":{}}}],["screen",{"_index":1135,"title":{},"body":{"classes/Mail.html":{}}}],["script",{"_index":2467,"title":{},"body":{"index.html":{}}}],["search",{"_index":1629,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"injectables/UsersService.html":{}}}],["searchresidentcompanypayload",{"_index":1626,"title":{"classes/SearchResidentCompanyPayload.html":{}},"body":{"controllers/ResidentCompanyController.html":{},"classes/SearchResidentCompanyPayload.html":{},"coverage.html":{}}}],["second",{"_index":1938,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["secret",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["secretorkey",{"_index":982,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":2552,"title":{},"body":{"index.html":{}}}],["see",{"_index":2543,"title":{},"body":{"index.html":{}}}],["select",{"_index":2102,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["selected",{"_index":737,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["self",{"_index":2113,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["sell",{"_index":2581,"title":{},"body":{"license.html":{}}}],["send",{"_index":1027,"title":{},"body":{"classes/Mail.html":{}}}],["sendemail",{"_index":1024,"title":{},"body":{"classes/Mail.html":{}}}],["sendemail(tenant",{"_index":1028,"title":{},"body":{"classes/Mail.html":{}}}],["sendemailgraphapi",{"_index":1025,"title":{},"body":{"classes/Mail.html":{}}}],["sendemailgraphapi(tenant",{"_index":1034,"title":{},"body":{"classes/Mail.html":{}}}],["serveroot",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":965,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["set",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"classes/Mail.html":{},"injectables/UsersService.html":{}}}],["setdescription(swagger_api_description",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setnewpassword",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["setnewpassword(@body",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{}}}],["setnewpassword(payload",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["setparameter('email",{"_index":2229,"title":{},"body":{"injectables/UsersService.html":{}}}],["settitle(swagger_api_name",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":2469,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":2384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion(swagger_api_current_version",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":2590,"title":{},"body":{"license.html":{}}}],["shareyourprofile",{"_index":1707,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["shouldn't",{"_index":2508,"title":{},"body":{"index.html":{}}}],["show",{"_index":2004,"title":{},"body":{"controllers/SponsorController.html":{}}}],["signoptions",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["simple",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["site",{"_index":111,"title":{"classes/Site.html":{}},"body":{"classes/AddResidentCompanyPayload.html":{},"injectables/AuthService.html":{},"classes/CreateUsersTable1611484925515.html":{},"modules/MasterModule.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["site.entity",{"_index":1347,"title":{},"body":{"modules/MasterModule.html":{}}}],["site_admin_accesslevels",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["site_id",{"_index":201,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/RegisterPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["site_pkey",{"_index":691,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["siteadmin",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sitefillablefields",{"_index":1993,"title":{"classes/SiteFillableFields.html":{}},"body":{"classes/Site.html":{},"classes/SiteFillableFields.html":{},"coverage.html":{}}}],["siteidarr",{"_index":1354,"title":{},"body":{"classes/MasterPayload.html":{},"controllers/ResidentCompanyController.html":{},"classes/SearchResidentCompanyPayload.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["sites",{"_index":1304,"title":{},"body":{"controllers/MasterController.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":1083,"title":{},"body":{"classes/Mail.html":{}}}],["size:12px!important",{"_index":1153,"title":{},"body":{"classes/Mail.html":{}}}],["size:16px!important",{"_index":1140,"title":{},"body":{"classes/Mail.html":{}}}],["size:20px!important",{"_index":1149,"title":{},"body":{"classes/Mail.html":{}}}],["size:26px!important",{"_index":1147,"title":{},"body":{"classes/Mail.html":{}}}],["size:30px!important",{"_index":1143,"title":{},"body":{"classes/Mail.html":{}}}],["size:inherit!important",{"_index":1107,"title":{},"body":{"classes/Mail.html":{}}}],["skip",{"_index":2280,"title":{},"body":{"injectables/UsersService.html":{}}}],["slice=estsfd",{"_index":1063,"title":{},"body":{"classes/Mail.html":{}}}],["social",{"_index":1210,"title":{},"body":{"classes/Mail.html":{}}}],["soft",{"_index":1587,"title":{},"body":{"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["softdeleteuser",{"_index":2121,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["softdeleteuser(@param('id",{"_index":2144,"title":{},"body":{"controllers/UserController.html":{}}}],["softdeleteuser(id",{"_index":2132,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["software",{"_index":2568,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1129,"title":{},"body":{"classes/Mail.html":{}}}],["solid!important",{"_index":1130,"title":{},"body":{"classes/Mail.html":{}}}],["something",{"_index":2551,"title":{},"body":{"index.html":{}}}],["sort",{"_index":994,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["sortfiled",{"_index":995,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/MasterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["sortorder",{"_index":996,"title":{},"body":{"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["sortordertype",{"_index":1967,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateSponsorDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"modules/OrderProductModule.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"injectables/SchedulerService.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateSponsorDto.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["source')@apiresponse({status",{"_index":1279,"title":{},"body":{"controllers/MasterController.html":{}}}],["source.entity",{"_index":1342,"title":{},"body":{"modules/MasterModule.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["source.entity.ts",{"_index":558,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.entity.ts:10",{"_index":564,"title":{},"body":{"classes/BiolabsSource.html":{}}}],["source.entity.ts:13",{"_index":567,"title":{},"body":{"classes/BiolabsSource.html":{}}}],["source.entity.ts:16",{"_index":570,"title":{},"body":{"classes/BiolabsSource.html":{}}}],["source.entity.ts:19",{"_index":562,"title":{},"body":{"classes/BiolabsSource.html":{}}}],["source.entity.ts:22",{"_index":571,"title":{},"body":{"classes/BiolabsSource.html":{}}}],["source.entity.ts:26",{"_index":576,"title":{},"body":{"classes/BiolabsSourceFillableFields.html":{}}}],["source.entity.ts:27",{"_index":577,"title":{},"body":{"classes/BiolabsSourceFillableFields.html":{}}}],["sources",{"_index":1282,"title":{},"body":{"controllers/MasterController.html":{}}}],["span",{"_index":1092,"title":{},"body":{"classes/Mail.html":{}}}],["sponsor",{"_index":483,"title":{"classes/Sponsor.html":{}},"body":{"injectables/AuthService.html":{},"controllers/ResidentCompanyController.html":{},"classes/Sponsor.html":{},"controllers/SponsorController.html":{},"injectables/SponsorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sponsor.controller",{"_index":2018,"title":{},"body":{"modules/SponsorModule.html":{}}}],["sponsor.dto",{"_index":2071,"title":{},"body":{"classes/UpdateSponsorDto.html":{}}}],["sponsor.dto.ts",{"_index":641,"title":{},"body":{"classes/CreateSponsorDto.html":{},"classes/UpdateSponsorDto.html":{},"coverage.html":{}}}],["sponsor.service",{"_index":2008,"title":{},"body":{"controllers/SponsorController.html":{},"modules/SponsorModule.html":{}}}],["sponsor.ts",{"_index":2321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sponsor_accesslevels",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sponsorcontroller",{"_index":1997,"title":{"controllers/SponsorController.html":{}},"body":{"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"coverage.html":{}}}],["sponsormodule",{"_index":275,"title":{"modules/SponsorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SponsorModule.html":{},"modules.html":{},"overview.html":{}}}],["sponsorservice",{"_index":2007,"title":{"injectables/SponsorService.html":{}},"body":{"controllers/SponsorController.html":{},"modules/SponsorModule.html":{},"injectables/SponsorService.html":{},"coverage.html":{},"overview.html":{}}}],["sqlite",{"_index":2492,"title":{},"body":{"index.html":{}}}],["src/.../add",{"_index":2642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app.module.ts",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../biolabs",{"_index":2631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../category.entity.ts",{"_index":2632,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../company",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.ts",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exists.validator.ts",{"_index":2435,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../file",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.controller.ts",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../funding.entity.ts",{"_index":2633,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../greater",{"_index":2436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../httpcode.ts",{"_index":2423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../less",{"_index":2437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../list",{"_index":2626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mail.ts",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.hmr.ts",{"_index":2433,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../master.service.ts",{"_index":2635,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../modality.entity.ts",{"_index":2634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../privileges",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rc",{"_index":2639,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../resident",{"_index":2627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.entity.ts",{"_index":2638,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../same",{"_index":2438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../search",{"_index":2628,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../site.entity.ts",{"_index":2636,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../technology",{"_index":2637,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../unique.validator.ts",{"_index":2439,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../update",{"_index":2629,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload",{"_index":2630,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user",{"_index":2640,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":2641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/constants/company",{"_index":2311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/email.ts",{"_index":2315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/file",{"_index":2316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/privileges",{"_index":2318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/user",{"_index":2322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.hmr.ts",{"_index":2323,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2324,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":2524,"title":{},"body":{"index.html":{}}}],["src/migrations/1611484925515",{"_index":643,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"coverage.html":{}}}],["src/modules/common/common.module.ts",{"_index":596,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/modules/common/model/base.entity.ts",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/modules/common/model/base.entity.ts:11",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:14",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:17",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:20",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:23",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:26",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:5",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/model/base.entity.ts:8",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/modules/common/transformer/abstract",{"_index":6,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"coverage.html":{}}}],["src/modules/common/transformer/trim",{"_index":2034,"title":{},"body":{"classes/TrimStringsPipe.html":{},"coverage.html":{}}}],["src/modules/common/validator/exists.validator.ts",{"_index":711,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/common/validator/exists.validator.ts:11",{"_index":751,"title":{},"body":{"injectables/ExistsValidator.html":{}}}],["src/modules/common/validator/exists.validator.ts:25",{"_index":750,"title":{},"body":{"injectables/ExistsValidator.html":{}}}],["src/modules/common/validator/exists.validator.ts:8",{"_index":749,"title":{},"body":{"injectables/ExistsValidator.html":{}}}],["src/modules/common/validator/greater",{"_index":2331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/common/validator/less",{"_index":2333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/common/validator/same",{"_index":2334,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/common/validator/unique.validator.ts",{"_index":2047,"title":{},"body":{"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/common/validator/unique.validator.ts:11",{"_index":2052,"title":{},"body":{"injectables/UniqueValidator.html":{}}}],["src/modules/common/validator/unique.validator.ts:25",{"_index":2051,"title":{},"body":{"injectables/UniqueValidator.html":{}}}],["src/modules/common/validator/unique.validator.ts:8",{"_index":2050,"title":{},"body":{"injectables/UniqueValidator.html":{}}}],["src/modules/config/config.module.ts",{"_index":602,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":607,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:15",{"_index":615,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:23",{"_index":617,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:5",{"_index":611,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/main/app.controller.ts",{"_index":241,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/main/app.controller.ts:15",{"_index":243,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/main/app.module.ts",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/main/app.service.ts",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/main/app.service.ts:12",{"_index":340,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/main/app.service.ts:5",{"_index":338,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/public/auth/auth.controller.ts",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/public/auth/auth.controller.ts:26",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/public/auth/auth.controller.ts:40",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/public/auth/auth.controller.ts:53",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/public/auth/auth.controller.ts:66",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/public/auth/auth.module.ts",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/public/auth/auth.service.ts",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/public/auth/auth.service.ts:113",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/auth.service.ts:124",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/auth.service.ts:19",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/auth.service.ts:32",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/auth.service.ts:48",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/auth.service.ts:61",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/auth.service.ts:94",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/public/auth/forgot",{"_index":887,"title":{},"body":{"classes/ForgotPasswordPayload.html":{},"coverage.html":{}}}],["src/modules/public/auth/jwt",{"_index":944,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/public/auth/jwt.strategy.ts",{"_index":968,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/public/auth/jwt.strategy.ts:17",{"_index":974,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/public/auth/jwt.strategy.ts:9",{"_index":970,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/public/auth/login.payload.ts",{"_index":1016,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/public/auth/login.payload.ts:15",{"_index":1019,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/public/auth/login.payload.ts:9",{"_index":1017,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/public/auth/password.payload.ts",{"_index":1532,"title":{},"body":{"classes/PasswordPayload.html":{},"coverage.html":{}}}],["src/modules/public/auth/password.payload.ts:13",{"_index":1536,"title":{},"body":{"classes/PasswordPayload.html":{}}}],["src/modules/public/auth/password.payload.ts:20",{"_index":1533,"title":{},"body":{"classes/PasswordPayload.html":{}}}],["src/modules/public/auth/password.payload.ts:24",{"_index":1535,"title":{},"body":{"classes/PasswordPayload.html":{}}}],["src/modules/public/auth/register.payload.ts",{"_index":1559,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/public/auth/register.payload.ts:13",{"_index":1560,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:19",{"_index":1567,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:24",{"_index":1568,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:29",{"_index":1561,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:34",{"_index":1563,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:39",{"_index":1569,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:44",{"_index":1566,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:50",{"_index":1562,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:57",{"_index":1564,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/auth/register.payload.ts:61",{"_index":1565,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/public/file/file.controller.ts",{"_index":753,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/public/file/file.controller.ts:38",{"_index":788,"title":{},"body":{"controllers/FileController.html":{}}}],["src/modules/public/file/file.controller.ts:52",{"_index":781,"title":{},"body":{"controllers/FileController.html":{}}}],["src/modules/public/file/file.controller.ts:64",{"_index":776,"title":{},"body":{"controllers/FileController.html":{}}}],["src/modules/public/file/file.controller.ts:74",{"_index":768,"title":{},"body":{"controllers/FileController.html":{}}}],["src/modules/public/file/file.module.ts",{"_index":837,"title":{},"body":{"modules/FileModule.html":{}}}],["src/modules/public/file/file.service.ts",{"_index":839,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/modules/public/file/file.service.ts:14",{"_index":856,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/public/file/file.service.ts:16",{"_index":848,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/public/file/file.service.ts:23",{"_index":854,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/public/file/file.service.ts:51",{"_index":852,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/public/file/file.service.ts:63",{"_index":846,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/public/file/file.service.ts:7",{"_index":844,"title":{},"body":{"injectables/FileService.html":{}}}],["src/modules/public/file/upload",{"_index":2084,"title":{},"body":{"classes/UploadPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/biolabs",{"_index":557,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/category.entity.ts",{"_index":579,"title":{},"body":{"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/category.entity.ts:10",{"_index":582,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/public/master/category.entity.ts:13",{"_index":584,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/public/master/category.entity.ts:16",{"_index":583,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/public/master/category.entity.ts:19",{"_index":585,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/public/master/category.entity.ts:22",{"_index":581,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/public/master/category.entity.ts:25",{"_index":586,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/public/master/category.entity.ts:29",{"_index":589,"title":{},"body":{"classes/CategoryFillableFields.html":{}}}],["src/modules/public/master/category.entity.ts:30",{"_index":590,"title":{},"body":{"classes/CategoryFillableFields.html":{}}}],["src/modules/public/master/category.entity.ts:31",{"_index":591,"title":{},"body":{"classes/CategoryFillableFields.html":{}}}],["src/modules/public/master/funding.entity.ts",{"_index":891,"title":{},"body":{"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/funding.entity.ts:10",{"_index":893,"title":{},"body":{"classes/Funding.html":{}}}],["src/modules/public/master/funding.entity.ts:13",{"_index":894,"title":{},"body":{"classes/Funding.html":{}}}],["src/modules/public/master/funding.entity.ts:16",{"_index":895,"title":{},"body":{"classes/Funding.html":{}}}],["src/modules/public/master/funding.entity.ts:19",{"_index":892,"title":{},"body":{"classes/Funding.html":{}}}],["src/modules/public/master/funding.entity.ts:22",{"_index":896,"title":{},"body":{"classes/Funding.html":{}}}],["src/modules/public/master/funding.entity.ts:26",{"_index":899,"title":{},"body":{"classes/FundingFillableFields.html":{}}}],["src/modules/public/master/funding.entity.ts:27",{"_index":900,"title":{},"body":{"classes/FundingFillableFields.html":{}}}],["src/modules/public/master/master.controller.ts",{"_index":1265,"title":{},"body":{"controllers/MasterController.html":{},"coverage.html":{}}}],["src/modules/public/master/master.controller.ts:101",{"_index":1289,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:112",{"_index":1312,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:18",{"_index":1303,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:30",{"_index":1299,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:42",{"_index":1286,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:54",{"_index":1280,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:66",{"_index":1292,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:78",{"_index":1295,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.controller.ts:90",{"_index":1308,"title":{},"body":{"controllers/MasterController.html":{}}}],["src/modules/public/master/master.module.ts",{"_index":1341,"title":{},"body":{"modules/MasterModule.html":{}}}],["src/modules/public/master/master.payload.ts",{"_index":1353,"title":{},"body":{"classes/MasterPayload.html":{},"coverage.html":{}}}],["src/modules/public/master/master.payload.ts:13",{"_index":1364,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.payload.ts:19",{"_index":1362,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.payload.ts:28",{"_index":1360,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.payload.ts:39",{"_index":1358,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.payload.ts:44",{"_index":1366,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.payload.ts:49",{"_index":1367,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.payload.ts:54",{"_index":1365,"title":{},"body":{"classes/MasterPayload.html":{}}}],["src/modules/public/master/master.service.ts",{"_index":2351,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/public/master/modality.entity.ts",{"_index":1372,"title":{},"body":{"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/modality.entity.ts:10",{"_index":1374,"title":{},"body":{"classes/Modality.html":{}}}],["src/modules/public/master/modality.entity.ts:13",{"_index":1375,"title":{},"body":{"classes/Modality.html":{}}}],["src/modules/public/master/modality.entity.ts:16",{"_index":1376,"title":{},"body":{"classes/Modality.html":{}}}],["src/modules/public/master/modality.entity.ts:19",{"_index":1373,"title":{},"body":{"classes/Modality.html":{}}}],["src/modules/public/master/modality.entity.ts:22",{"_index":1377,"title":{},"body":{"classes/Modality.html":{}}}],["src/modules/public/master/modality.entity.ts:26",{"_index":1379,"title":{},"body":{"classes/ModalityFillableFields.html":{}}}],["src/modules/public/master/modality.entity.ts:27",{"_index":1380,"title":{},"body":{"classes/ModalityFillableFields.html":{}}}],["src/modules/public/master/role.entity.ts",{"_index":1919,"title":{},"body":{"classes/Role.html":{},"classes/RoleFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/role.entity.ts:10",{"_index":1921,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/public/master/role.entity.ts:13",{"_index":1922,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/public/master/role.entity.ts:16",{"_index":1923,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/public/master/role.entity.ts:19",{"_index":1920,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/public/master/role.entity.ts:22",{"_index":1924,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/public/master/role.entity.ts:26",{"_index":1926,"title":{},"body":{"classes/RoleFillableFields.html":{}}}],["src/modules/public/master/role.entity.ts:27",{"_index":1927,"title":{},"body":{"classes/RoleFillableFields.html":{}}}],["src/modules/public/master/site.entity.ts",{"_index":1987,"title":{},"body":{"classes/Site.html":{},"classes/SiteFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/master/site.entity.ts:10",{"_index":1989,"title":{},"body":{"classes/Site.html":{}}}],["src/modules/public/master/site.entity.ts:13",{"_index":1990,"title":{},"body":{"classes/Site.html":{}}}],["src/modules/public/master/site.entity.ts:16",{"_index":1991,"title":{},"body":{"classes/Site.html":{}}}],["src/modules/public/master/site.entity.ts:19",{"_index":1988,"title":{},"body":{"classes/Site.html":{}}}],["src/modules/public/master/site.entity.ts:22",{"_index":1992,"title":{},"body":{"classes/Site.html":{}}}],["src/modules/public/master/site.entity.ts:26",{"_index":1994,"title":{},"body":{"classes/SiteFillableFields.html":{}}}],["src/modules/public/master/site.entity.ts:27",{"_index":1995,"title":{},"body":{"classes/SiteFillableFields.html":{}}}],["src/modules/public/master/technology",{"_index":2022,"title":{},"body":{"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/order/dto/add",{"_index":63,"title":{},"body":{"classes/AddOrderDto.html":{},"coverage.html":{}}}],["src/modules/public/order/dto/order",{"_index":624,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/UpdateOrderProductDto.html":{},"coverage.html":{}}}],["src/modules/public/order/model/invoice.entity.ts",{"_index":919,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"coverage.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:12",{"_index":923,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:15",{"_index":930,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:18",{"_index":925,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:21",{"_index":931,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:24",{"_index":924,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:28",{"_index":929,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:36",{"_index":941,"title":{},"body":{"classes/InvoiceFillableFields.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:37",{"_index":939,"title":{},"body":{"classes/InvoiceFillableFields.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:38",{"_index":942,"title":{},"body":{"classes/InvoiceFillableFields.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:39",{"_index":940,"title":{},"body":{"classes/InvoiceFillableFields.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:40",{"_index":938,"title":{},"body":{"classes/InvoiceFillableFields.html":{}}}],["src/modules/public/order/model/invoice.entity.ts:9",{"_index":926,"title":{},"body":{"classes/Invoice.html":{}}}],["src/modules/public/order/model/order",{"_index":1401,"title":{},"body":{"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"coverage.html":{}}}],["src/modules/public/order/model/order.entity.ts",{"_index":1381,"title":{},"body":{"classes/Order.html":{},"classes/OrderFillableFields.html":{},"coverage.html":{}}}],["src/modules/public/order/model/order.entity.ts:10",{"_index":1386,"title":{},"body":{"classes/Order.html":{}}}],["src/modules/public/order/model/order.entity.ts:13",{"_index":1391,"title":{},"body":{"classes/Order.html":{}}}],["src/modules/public/order/model/order.entity.ts:16",{"_index":1384,"title":{},"body":{"classes/Order.html":{}}}],["src/modules/public/order/model/order.entity.ts:19",{"_index":1385,"title":{},"body":{"classes/Order.html":{}}}],["src/modules/public/order/model/order.entity.ts:22",{"_index":1388,"title":{},"body":{"classes/Order.html":{}}}],["src/modules/public/order/model/order.entity.ts:25",{"_index":1387,"title":{},"body":{"classes/Order.html":{}}}],["src/modules/public/order/model/order.entity.ts:30",{"_index":1399,"title":{},"body":{"classes/OrderFillableFields.html":{}}}],["src/modules/public/order/model/order.entity.ts:31",{"_index":1400,"title":{},"body":{"classes/OrderFillableFields.html":{}}}],["src/modules/public/order/model/product.entity.ts",{"_index":1547,"title":{},"body":{"classes/Product.html":{},"classes/ProductFillableFields.html":{},"coverage.html":{}}}],["src/modules/public/order/model/product.entity.ts:11",{"_index":1553,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/public/order/model/product.entity.ts:14",{"_index":1551,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/public/order/model/product.entity.ts:17",{"_index":1548,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/public/order/model/product.entity.ts:20",{"_index":1549,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/public/order/model/product.entity.ts:23",{"_index":1550,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/public/order/model/product.entity.ts:28",{"_index":1557,"title":{},"body":{"classes/ProductFillableFields.html":{}}}],["src/modules/public/order/model/product.entity.ts:29",{"_index":1555,"title":{},"body":{"classes/ProductFillableFields.html":{}}}],["src/modules/public/order/model/product.entity.ts:30",{"_index":1556,"title":{},"body":{"classes/ProductFillableFields.html":{}}}],["src/modules/public/order/model/product.entity.ts:8",{"_index":1552,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/public/order/order.controller.ts",{"_index":1422,"title":{},"body":{"controllers/OrderProductController.html":{},"coverage.html":{}}}],["src/modules/public/order/order.controller.ts:22",{"_index":1431,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["src/modules/public/order/order.controller.ts:35",{"_index":1446,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["src/modules/public/order/order.controller.ts:47",{"_index":1439,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["src/modules/public/order/order.controller.ts:59",{"_index":1436,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["src/modules/public/order/order.module.ts",{"_index":1477,"title":{},"body":{"modules/OrderProductModule.html":{}}}],["src/modules/public/order/order.service.ts",{"_index":1483,"title":{},"body":{"injectables/OrderProductService.html":{},"coverage.html":{}}}],["src/modules/public/order/order.service.ts:10",{"_index":1487,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["src/modules/public/order/order.service.ts:25",{"_index":1489,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["src/modules/public/order/order.service.ts:43",{"_index":1493,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["src/modules/public/order/order.service.ts:61",{"_index":1492,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["src/modules/public/order/order.service.ts:78",{"_index":1491,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["src/modules/public/resident",{"_index":83,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/sponsor/dto/create",{"_index":640,"title":{},"body":{"classes/CreateSponsorDto.html":{},"coverage.html":{}}}],["src/modules/public/sponsor/dto/update",{"_index":2068,"title":{},"body":{"classes/UpdateSponsorDto.html":{},"coverage.html":{}}}],["src/modules/public/sponsor/entities/sponsor.entity.ts",{"_index":1996,"title":{},"body":{"classes/Sponsor.html":{},"coverage.html":{}}}],["src/modules/public/sponsor/sponsor.controller.ts",{"_index":1998,"title":{},"body":{"controllers/SponsorController.html":{},"coverage.html":{}}}],["src/modules/public/sponsor/sponsor.controller.ts:24",{"_index":2003,"title":{},"body":{"controllers/SponsorController.html":{}}}],["src/modules/public/sponsor/sponsor.controller.ts:38",{"_index":2006,"title":{},"body":{"controllers/SponsorController.html":{}}}],["src/modules/public/sponsor/sponsor.module.ts",{"_index":2017,"title":{},"body":{"modules/SponsorModule.html":{}}}],["src/modules/public/sponsor/sponsor.service.ts",{"_index":2019,"title":{},"body":{"injectables/SponsorService.html":{},"coverage.html":{}}}],["src/modules/public/user/add",{"_index":192,"title":{},"body":{"classes/AddUserPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/user/delete",{"_index":706,"title":{},"body":{"classes/DeleteUserPayload.html":{},"coverage.html":{}}}],["src/modules/public/user/list",{"_index":1008,"title":{},"body":{"classes/ListUserPayload.html":{},"coverage.html":{}}}],["src/modules/public/user/password.transformer.ts",{"_index":1540,"title":{},"body":{"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["src/modules/public/user/password.transformer.ts:12",{"_index":1543,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/public/user/password.transformer.ts:5",{"_index":1545,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["src/modules/public/user/update",{"_index":2074,"title":{},"body":{"classes/UpdateUserPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/user/user",{"_index":2175,"title":{},"body":{"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/user/user.controller.ts",{"_index":2116,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/public/user/user.controller.ts:28",{"_index":2126,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/public/user/user.controller.ts:46",{"_index":2136,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/public/user/user.controller.ts:61",{"_index":2134,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/public/user/user.controller.ts:81",{"_index":2131,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/public/user/user.controller.ts:99",{"_index":2129,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/public/user/user.entity.ts",{"_index":2091,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/public/user/user.entity.ts:20",{"_index":2097,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:23",{"_index":2105,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:26",{"_index":2106,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:29",{"_index":2093,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:32",{"_index":2095,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:35",{"_index":2096,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:38",{"_index":2099,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:41",{"_index":2108,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:44",{"_index":2104,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:47",{"_index":2107,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:50",{"_index":2098,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:53",{"_index":2110,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:62",{"_index":2103,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:64",{"_index":2111,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:70",{"_index":2094,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:73",{"_index":2109,"title":{},"body":{"classes/User.html":{}}}],["src/modules/public/user/user.entity.ts:77",{"_index":2151,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:78",{"_index":2155,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:79",{"_index":2157,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:80",{"_index":2158,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:81",{"_index":2150,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:82",{"_index":2152,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:83",{"_index":2154,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:84",{"_index":2160,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:85",{"_index":2156,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:86",{"_index":2159,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:87",{"_index":2161,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.entity.ts:88",{"_index":2153,"title":{},"body":{"classes/UserFillableFields.html":{}}}],["src/modules/public/user/user.module.ts",{"_index":2166,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/public/user/user.service.ts",{"_index":2189,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/public/user/user.service.ts:104",{"_index":2215,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:136",{"_index":2217,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:15",{"_index":2195,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:154",{"_index":2212,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:171",{"_index":2209,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:210",{"_index":2207,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:231",{"_index":2220,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:252",{"_index":2211,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:279",{"_index":2201,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:306",{"_index":2199,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:32",{"_index":2204,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:42",{"_index":2206,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:58",{"_index":2198,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/public/user/user.service.ts:76",{"_index":2196,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/scheduler/scheduler.service.ts",{"_index":1929,"title":{},"body":{"injectables/SchedulerService.html":{},"coverage.html":{}}}],["src/modules/scheduler/scheduler.service.ts:6",{"_index":1932,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/swagger/constants.ts",{"_index":2378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/index.ts",{"_index":2383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/hash.ts",{"_index":901,"title":{},"body":{"classes/Hash.html":{},"coverage.html":{}}}],["src/utils/hash.ts:18",{"_index":905,"title":{},"body":{"classes/Hash.html":{}}}],["src/utils/hash.ts:9",{"_index":910,"title":{},"body":{"classes/Hash.html":{}}}],["src/utils/httpcode.ts",{"_index":2424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/mail.ts",{"_index":1022,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/mail.ts:13",{"_index":1026,"title":{},"body":{"classes/Mail.html":{}}}],["src/utils/mail.ts:41",{"_index":1035,"title":{},"body":{"classes/Mail.html":{}}}],["src/utils/mail.ts:446",{"_index":1032,"title":{},"body":{"classes/Mail.html":{}}}],["ssl",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["stack",{"_index":2473,"title":{},"body":{"index.html":{}}}],["stage",{"_index":1332,"title":{},"body":{"controllers/MasterController.html":{}}}],["stage')@apiresponse({status",{"_index":1307,"title":{},"body":{"controllers/MasterController.html":{}}}],["stage.entity",{"_index":1349,"title":{},"body":{"modules/MasterModule.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{}}}],["stage.entity.ts",{"_index":2023,"title":{},"body":{"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stage.entity.ts:10",{"_index":2025,"title":{},"body":{"classes/TechnologyStage.html":{}}}],["stage.entity.ts:13",{"_index":2026,"title":{},"body":{"classes/TechnologyStage.html":{}}}],["stage.entity.ts:16",{"_index":2027,"title":{},"body":{"classes/TechnologyStage.html":{}}}],["stage.entity.ts:19",{"_index":2024,"title":{},"body":{"classes/TechnologyStage.html":{}}}],["stage.entity.ts:22",{"_index":2028,"title":{},"body":{"classes/TechnologyStage.html":{}}}],["stage.entity.ts:26",{"_index":2031,"title":{},"body":{"classes/TechnologyStageFillableFields.html":{}}}],["stage.entity.ts:27",{"_index":2032,"title":{},"body":{"classes/TechnologyStageFillableFields.html":{}}}],["stages",{"_index":1309,"title":{},"body":{"controllers/MasterController.html":{}}}],["start",{"_index":663,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"injectables/OrderProductService.html":{},"index.html":{}}}],["startdate",{"_index":112,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/CreateOrderProductDto.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/UpdateOrderProductDto.html":{}}}],["started",{"_index":2445,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":2471,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"classes/Hash.html":{},"dependencies.html":{}}}],["status",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"controllers/FileController.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"controllers/MasterController.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"controllers/OrderProductController.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"controllers/SponsorController.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["status')@apiresponse({status",{"_index":1288,"title":{},"body":{"controllers/MasterController.html":{},"controllers/ResidentCompanyController.html":{}}}],["status.payload",{"_index":1642,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["status.payload.ts",{"_index":2062,"title":{},"body":{"classes/UpdateResidentCompanyStatusPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["status.payload.ts:14",{"_index":2065,"title":{},"body":{"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["status.payload.ts:19",{"_index":2066,"title":{},"body":{"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["status.payload.ts:24",{"_index":2064,"title":{},"body":{"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["status.payload.ts:9",{"_index":2063,"title":{},"body":{"classes/UpdateResidentCompanyStatusPayload.html":{}}}],["status.ts",{"_index":2312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["status_enum",{"_index":568,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"miscellaneous/typealiases.html":{}}}],["strategy",{"_index":976,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":24,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Hash.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/PasswordPayload.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string'})@apiresponse({status",{"_index":765,"title":{},"body":{"controllers/FileController.html":{}}}],["strings.pipe.ts",{"_index":2035,"title":{},"body":{"classes/TrimStringsPipe.html":{},"coverage.html":{}}}],["strings.pipe.ts:4",{"_index":2036,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["strings.pipe.ts:8",{"_index":2037,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["string})@apiquery({name",{"_index":764,"title":{},"body":{"controllers/FileController.html":{}}}],["stsservicecookie=estsfd",{"_index":1064,"title":{},"body":{"classes/Mail.html":{}}}],["style",{"_index":1100,"title":{},"body":{"classes/Mail.html":{}}}],["style:solid",{"_index":1128,"title":{},"body":{"classes/Mail.html":{}}}],["subject",{"_index":1029,"title":{},"body":{"classes/Mail.html":{},"license.html":{}}}],["subject_forgot_password",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject_invite_user",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject_new_registration",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject_welcome",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2579,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2592,"title":{},"body":{"license.html":{}}}],["successful",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["suggested",{"_index":2549,"title":{},"body":{"index.html":{}}}],["sup",{"_index":1081,"title":{},"body":{"classes/Mail.html":{}}}],["super",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["super.canactivate(context",{"_index":966,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.login(request",{"_index":963,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin_accesslevels",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["superadmin",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":2617,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2618,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2414,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_current_version",{"_index":2379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":2380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":2381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":2382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(swagger_api_root",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["synchronize",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["system",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{}}}],["table",{"_index":656,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"classes/Mail.html":{},"coverage.html":{}}}],["table.es",{"_index":1198,"title":{},"body":{"classes/Mail.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2386,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2281,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["target",{"_index":744,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/variables.html":{}}}],["td",{"_index":1093,"title":{},"body":{"classes/Mail.html":{}}}],["td.es",{"_index":1197,"title":{},"body":{"classes/Mail.html":{}}}],["technical.entity",{"_index":1884,"title":{},"body":{"modules/ResidentCompanyModule.html":{}}}],["technical.entity.ts",{"_index":1887,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["technical.entity.ts:18",{"_index":1893,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:21",{"_index":1889,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:24",{"_index":1898,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:27",{"_index":1902,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:30",{"_index":1891,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:33",{"_index":1899,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:36",{"_index":1897,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:39",{"_index":1900,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:42",{"_index":1895,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:45",{"_index":1892,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:48",{"_index":1896,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:51",{"_index":1894,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:54",{"_index":1901,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:57",{"_index":1890,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:60",{"_index":1903,"title":{},"body":{"classes/ResidentCompanyTechnical.html":{}}}],["technical.entity.ts:64",{"_index":1908,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:65",{"_index":1906,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:66",{"_index":1914,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:67",{"_index":1918,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:68",{"_index":1907,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:69",{"_index":1915,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:70",{"_index":1912,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:71",{"_index":1916,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:72",{"_index":1910,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:73",{"_index":1913,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:74",{"_index":1911,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:75",{"_index":1909,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technical.entity.ts:76",{"_index":1917,"title":{},"body":{"classes/ResidentCompanyTechnicalFillableFields.html":{}}}],["technician",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technology",{"_index":113,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"controllers/MasterController.html":{},"modules/MasterModule.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["technology_stages",{"_index":2029,"title":{},"body":{"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{}}}],["technologypaperspublished",{"_index":1708,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["technologypaperspublishedlink",{"_index":1709,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["technologypaperspublishedlinkcount",{"_index":1710,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["technologystage",{"_index":1348,"title":{"classes/TechnologyStage.html":{}},"body":{"modules/MasterModule.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"modules/ResidentCompanyModule.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"coverage.html":{}}}],["technologystagefillablefields",{"_index":2030,"title":{"classes/TechnologyStageFillableFields.html":{}},"body":{"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"coverage.html":{}}}],["template",{"_index":2497,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":1033,"title":{},"body":{"classes/Mail.html":{},"injectables/UsersService.html":{}}}],["tenant.officialemail",{"_index":1235,"title":{},"body":{"classes/Mail.html":{}}}],["tenant.role",{"_index":1071,"title":{},"body":{"classes/Mail.html":{}}}],["tenant.tenantemail",{"_index":1234,"title":{},"body":{"classes/Mail.html":{}}}],["tenantemail",{"_index":2245,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":2531,"title":{},"body":{"index.html":{}}}],["test:covenvironment",{"_index":2534,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2533,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2530,"title":{},"body":{"index.html":{}}}],["text",{"_index":1078,"title":{},"body":{"classes/Mail.html":{}}}],["then((response",{"_index":1255,"title":{},"body":{"classes/Mail.html":{}}}],["then(function",{"_index":1067,"title":{},"body":{"classes/Mail.html":{}}}],["this.authservice.createtoken(user",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(payload",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatetoken(token",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.connection.getrepository(entityclass).count",{"_index":732,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["this.createsuperadmin",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.envconfig",{"_index":620,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":622,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.except().includes(key",{"_index":50,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["this.fileservice.delete(filename",{"_index":831,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.getfilestream(filename",{"_index":826,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.upload(file",{"_index":817,"title":{},"body":{"controllers/FileController.html":{}}}],["this.generatetoken(saveduser",{"_index":2240,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.generatetoken(user",{"_index":2304,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.get(id",{"_index":2267,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.get(payload.id",{"_index":2249,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.get(tokendata.user_id",{"_index":2293,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getblobclient(filename",{"_index":870,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getbyemail(payload.email",{"_index":2231,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getgrapapitoken",{"_index":1262,"title":{},"body":{"classes/Mail.html":{}}}],["this.getuserbyid(user.id",{"_index":2262,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isobject(values",{"_index":56,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["this.isobject(values[key",{"_index":51,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["this.jwtservice.sign",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.logger.debug('called",{"_index":1936,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["this.mail.sendemail",{"_index":2305,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.mail.sendemail(tenant",{"_index":2247,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.masterservice.createbiolabssources",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.createcategories",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.createfundings",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.createmodalities",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.createroles",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.createsites",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.createtechnologystages",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.masterservice.getbiolabssource(params",{"_index":1325,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getcategories(params",{"_index":1323,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getcompanystatus",{"_index":1335,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getfundings(params",{"_index":1328,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getmodalities(params",{"_index":1331,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getroles(params",{"_index":1320,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getsites(params",{"_index":1317,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.gettechnologystages(params",{"_index":1334,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.masterservice.getusertypes",{"_index":1337,"title":{},"body":{"controllers/MasterController.html":{}}}],["this.orderproductrepository.create(payload",{"_index":1523,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderproductrepository.delete(id",{"_index":1531,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderproductrepository.find",{"_index":1530,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderproductrepository.findone(id",{"_index":1507,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderproductrepository.save(this.orderproductrepository.create",{"_index":1505,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderproductrepository.update(id",{"_index":1522,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderproductservice.addorderproduct(payload",{"_index":1457,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["this.orderproductservice.deleteorderproduct(id",{"_index":1466,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["this.orderproductservice.fetchorderproductsbetweendates(startdate",{"_index":1463,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["this.orderproductservice.updateorderproduct(id",{"_index":1460,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["this.orderrepository.create(payload",{"_index":1503,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderrepository.findone(payload.orderid",{"_index":1502,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.orderrepository.save(order",{"_index":1504,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["this.residentcompanyservice.addresidentcompany(pal",{"_index":1646,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["this.residentcompanyservice.getresidentcompanies(params",{"_index":1653,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["this.residentcompanyservice.getresidentcompany",{"_index":2290,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.residentcompanyservice.getresidentcompany(id",{"_index":1666,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["this.residentcompanyservice.getresidentcompany(user.companyid",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.residentcompanyservice.getresidentcompanyforsponsor",{"_index":1655,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{}}}],["this.residentcompanyservice.getresidentcompanyforsponsorbysite",{"_index":2013,"title":{},"body":{"controllers/SponsorController.html":{}}}],["this.residentcompanyservice.gloabalsearchcompanies(params",{"_index":1663,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["this.residentcompanyservice.updateresidentcompany(payload",{"_index":1660,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["this.residentcompanyservice.updateresidentcompanyimg",{"_index":878,"title":{},"body":{"injectables/FileService.html":{}}}],["this.residentcompanyservice.updateresidentcompanystatus(payload",{"_index":1658,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["this.sendemailgraphapi(tenant",{"_index":1263,"title":{},"body":{"classes/Mail.html":{}}}],["this.transformobject(values",{"_index":58,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["this.transformobject(values[key",{"_index":53,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["this.transformvalue(values[key",{"_index":54,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["this.userrepository",{"_index":2224,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.create(payload",{"_index":2236,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.createquerybuilder(\"users",{"_index":2270,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":2289,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(id",{"_index":2223,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":2238,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(this.userrepository.create(payload",{"_index":2234,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":2268,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(user.id",{"_index":2261,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.adduser(pal",{"_index":2141,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(migrationdata['superadmin",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.forgotpassword(payload",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getbyemail('superadmin@biolabs.io",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getbyemail(payload.email",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getuserbyid(id",{"_index":2149,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers(params",{"_index":2147,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setnewpassword(payload",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.softdeleteuser(id",{"_index":2145,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(payload",{"_index":2143,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuserprofilepic",{"_index":875,"title":{},"body":{"injectables/FileService.html":{}}}],["this.userservice.validatetoken(token",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usertokenrepository.create(tokendata",{"_index":2303,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usertokenrepository.find",{"_index":2300,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usertokenrepository.findone",{"_index":2292,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usertokenrepository.save",{"_index":2302,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usertokenrepository.save(tokendata",{"_index":2297,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usertokenrepository.update",{"_index":2301,"title":{},"body":{"injectables/UsersService.html":{}}}],["through",{"_index":2461,"title":{},"body":{"index.html":{}}}],["throw",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":2298,"title":{},"body":{"injectables/UsersService.html":{}}}],["timediff",{"_index":985,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["timestamp",{"_index":561,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["timestamptz",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{}}}],["title",{"_index":202,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["to(value",{"_index":1544,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["to.validator",{"_index":1972,"title":{},"body":{"classes/SearchResidentCompanyPayload.html":{}}}],["to.validator.ts",{"_index":2332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojson",{"_index":2092,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["token",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Mail.html":{},"classes/PasswordPayload.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["token.entity",{"_index":2173,"title":{},"body":{"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["token.entity.ts",{"_index":2176,"title":{},"body":{"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["token.entity.ts:10",{"_index":2179,"title":{},"body":{"classes/UserToken.html":{}}}],["token.entity.ts:13",{"_index":2183,"title":{},"body":{"classes/UserToken.html":{}}}],["token.entity.ts:16",{"_index":2181,"title":{},"body":{"classes/UserToken.html":{}}}],["token.entity.ts:19",{"_index":2180,"title":{},"body":{"classes/UserToken.html":{}}}],["token.entity.ts:22",{"_index":2178,"title":{},"body":{"classes/UserToken.html":{}}}],["token.entity.ts:25",{"_index":2182,"title":{},"body":{"classes/UserToken.html":{}}}],["token.entity.ts:29",{"_index":2187,"title":{},"body":{"classes/UserTokenFillableFields.html":{}}}],["token.entity.ts:30",{"_index":2188,"title":{},"body":{"classes/UserTokenFillableFields.html":{}}}],["token.entity.ts:31",{"_index":2186,"title":{},"body":{"classes/UserTokenFillableFields.html":{}}}],["token['access_token",{"_index":1251,"title":{},"body":{"classes/Mail.html":{}}}],["token['token_type",{"_index":1250,"title":{},"body":{"classes/Mail.html":{}}}],["tokenchk",{"_index":2299,"title":{},"body":{"injectables/UsersService.html":{}}}],["tokendata",{"_index":2291,"title":{},"body":{"injectables/UsersService.html":{}}}],["tokendata.status",{"_index":2296,"title":{},"body":{"injectables/UsersService.html":{}}}],["tokengraphapi",{"_index":1261,"title":{},"body":{"classes/Mail.html":{}}}],["top:0px!important",{"_index":1190,"title":{},"body":{"classes/Mail.html":{}}}],["torecipients",{"_index":1231,"title":{},"body":{"classes/Mail.html":{}}}],["tort",{"_index":2613,"title":{},"body":{"license.html":{}}}],["totalcost",{"_index":921,"title":{},"body":{"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{}}}],["tr.es",{"_index":1196,"title":{},"body":{"classes/Mail.html":{}}}],["transform",{"_index":16,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["transform(values",{"_index":33,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["transform.pipe",{"_index":2044,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["transform.pipe.ts",{"_index":7,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"coverage.html":{}}}],["transform.pipe.ts:10",{"_index":26,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["transform.pipe.ts:14",{"_index":39,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["transform.pipe.ts:29",{"_index":36,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["transform.pipe.ts:4",{"_index":41,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["transform.pipe.ts:6",{"_index":21,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["transformer",{"_index":2101,"title":{},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"dependencies.html":{}}}],["transformobject",{"_index":17,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["transformobject(values",{"_index":38,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["transformvalue",{"_index":19,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["transformvalue(value",{"_index":40,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["trimstringspipe",{"_index":2033,"title":{"classes/TrimStringsPipe.html":{}},"body":{"classes/TrimStringsPipe.html":{},"coverage.html":{}}}],["true",{"_index":72,"title":{},"body":{"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateOrderProductDto.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/LoginPayload.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/PasswordPayload.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true})@isemail",{"_index":889,"title":{},"body":{"classes/ForgotPasswordPayload.html":{},"classes/LoginPayload.html":{}}}],["true})@isemail()@unique(undefined",{"_index":125,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isnotempty",{"_index":140,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/CreateOrderProductDto.html":{}}}],["true})@isnotempty()@min(0",{"_index":133,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@isnotempty()@min(1",{"_index":135,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@isnotempty()@minlength(5",{"_index":1018,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isnumber",{"_index":214,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isnumber()@isoptional",{"_index":138,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@maxlength(100",{"_index":154,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@maxlength(100)@isoptional",{"_index":148,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@maxlength(100)@matches('^[a",{"_index":143,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@maxlength(250",{"_index":117,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@maxlength(500",{"_index":122,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@min(0",{"_index":127,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@min(1",{"_index":119,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@minlength(1)@maxlength(100",{"_index":131,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@minlength(1)@maxlength(500",{"_index":158,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["true})@sameas('password",{"_index":1534,"title":{},"body":{"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@validateif(undefined)@isnotempty()@maxlength(100",{"_index":150,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["try",{"_index":872,"title":{},"body":{"injectables/FileService.html":{}}}],["txt",{"_index":1158,"title":{},"body":{"classes/Mail.html":{}}}],["type",{"_index":29,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/AddOrderDto.html":{},"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/ConfigService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/DeleteUserPayload.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/ForgotPasswordPayload.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ListResidentCompanyPayload.html":{},"classes/ListUserPayload.html":{},"classes/LoginPayload.html":{},"classes/Mail.html":{},"controllers/MasterController.html":{},"classes/MasterPayload.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"controllers/OrderProductController.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/PasswordPayload.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/RegisterPayload.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"controllers/ResidentCompanyController.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"controllers/SponsorController.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateOrderProductDto.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":2317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2624,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":46,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["typeorm",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/CreateUsersTable1611484925515.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Invoice.html":{},"classes/InvoiceFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"injectables/OrderProductService.html":{},"classes/PasswordTransformer.html":{},"classes/Product.html":{},"classes/ProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":1482,"title":{},"body":{"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{}}}],["typeormmodule.forfeature([biolabssource",{"_index":1352,"title":{},"body":{"modules/MasterModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2174,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleasyncoptions",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1336,"title":{},"body":{"controllers/MasterController.html":{},"classes/UpdateSponsorDto.html":{},"index.html":{}}}],["types')@apiresponse({status",{"_index":1311,"title":{},"body":{"controllers/MasterController.html":{}}}],["types/bcrypt",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1137,"title":{},"body":{"classes/Mail.html":{}}}],["unauthorized",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["unauthorized'})@apiheader({name",{"_index":1611,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/Category.html":{},"classes/Funding.html":{},"classes/Modality.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/Role.html":{},"classes/SearchResidentCompanyPayload.html":{},"classes/Site.html":{},"classes/TechnologyStage.html":{},"classes/User.html":{},"classes/UserToken.html":{}}}],["undefined)@jointable",{"_index":928,"title":{},"body":{"classes/Invoice.html":{}}}],["under",{"_index":2523,"title":{},"body":{"index.html":{}}}],["unique",{"_index":175,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unique([residentcompany",{"_index":179,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["unique([user",{"_index":236,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/RegisterPayload.html":{}}}],["unique(constraints",{"_index":2049,"title":{},"body":{"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["uniquevalidationarguments",{"_index":2046,"title":{"interfaces/UniqueValidationArguments.html":{}},"body":{"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{}}}],["uniquevalidationconstraints",{"_index":2048,"title":{},"body":{"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/typealiases.html":{}}}],["uniquevalidator",{"_index":595,"title":{"injectables/UniqueValidator.html":{}},"body":{"modules/CommonModule.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{},"overview.html":{}}}],["unit",{"_index":2529,"title":{},"body":{"index.html":{}}}],["up",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUsersTable1611484925515.html":{}}}],["up(queryrunner",{"_index":651,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["upadte",{"_index":1634,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["update",{"_index":1447,"title":{},"body":{"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":1494,"title":{},"body":{"injectables/OrderProductService.html":{}}}],["updated_at",{"_index":676,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["updated_by",{"_index":675,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["updatedat",{"_index":560,"title":{},"body":{"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["updatedatecolumn",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/BiolabsSourceFillableFields.html":{},"classes/Category.html":{},"classes/CategoryFillableFields.html":{},"classes/Funding.html":{},"classes/FundingFillableFields.html":{},"classes/Modality.html":{},"classes/ModalityFillableFields.html":{},"classes/Order.html":{},"classes/OrderFillableFields.html":{},"classes/OrderProduct.html":{},"classes/OrderProductFillableFields.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyAdvisoryFillableFields.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyDocumentsFillableFields.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyManagementFillableFields.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/ResidentCompanyTechnicalFillableFields.html":{},"classes/Role.html":{},"classes/RoleFillableFields.html":{},"classes/Site.html":{},"classes/SiteFillableFields.html":{},"classes/TechnologyStage.html":{},"classes/TechnologyStageFillableFields.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["updatedatecolumn({type",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BiolabsSource.html":{},"classes/Category.html":{},"classes/Funding.html":{},"classes/Modality.html":{},"classes/Order.html":{},"classes/OrderProduct.html":{},"classes/ResidentCompanyAdvisory.html":{},"classes/ResidentCompanyDocuments.html":{},"classes/ResidentCompanyManagement.html":{},"classes/ResidentCompanyTechnical.html":{},"classes/Role.html":{},"classes/Site.html":{},"classes/TechnologyStage.html":{},"classes/User.html":{},"classes/UserToken.html":{}}}],["updateorderproduct",{"_index":1428,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["updateorderproduct(@param('id",{"_index":1459,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["updateorderproduct(id",{"_index":1443,"title":{},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{}}}],["updateorderproductdto",{"_index":1444,"title":{"classes/UpdateOrderProductDto.html":{}},"body":{"controllers/OrderProductController.html":{},"injectables/OrderProductService.html":{},"classes/UpdateOrderProductDto.html":{},"coverage.html":{}}}],["updateresidentcompany",{"_index":1605,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["updateresidentcompany(@body",{"_index":1659,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["updateresidentcompany(payload",{"_index":1630,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["updateresidentcompanypayload",{"_index":1631,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"coverage.html":{}}}],["updateresidentcompanystatus",{"_index":1606,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["updateresidentcompanystatus(@body",{"_index":1657,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["updateresidentcompanystatus(payload",{"_index":1636,"title":{},"body":{"controllers/ResidentCompanyController.html":{}}}],["updateresidentcompanystatuspayload",{"_index":1635,"title":{"classes/UpdateResidentCompanyStatusPayload.html":{}},"body":{"controllers/ResidentCompanyController.html":{},"classes/UpdateResidentCompanyStatusPayload.html":{},"coverage.html":{}}}],["updatesponsordto",{"_index":2067,"title":{"classes/UpdateSponsorDto.html":{}},"body":{"classes/UpdateSponsorDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":2122,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["updateuser(@body",{"_index":2142,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(payload",{"_index":2135,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["updateuserpayload",{"_index":2073,"title":{"classes/UpdateUserPayload.html":{}},"body":{"classes/UpdateUserPayload.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updateuserprofilepic",{"_index":2192,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserprofilepic(payload",{"_index":2216,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":758,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{}}}],["upload(@query",{"_index":814,"title":{},"body":{"controllers/FileController.html":{}}}],["upload(file",{"_index":853,"title":{},"body":{"injectables/FileService.html":{}}}],["upload(payload",{"_index":782,"title":{},"body":{"controllers/FileController.html":{}}}],["uploaded",{"_index":873,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadedfile",{"_index":792,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadpayload",{"_index":2083,"title":{"classes/UploadPayload.html":{}},"body":{"classes/UploadPayload.html":{},"coverage.html":{}}}],["url",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"classes/Mail.html":{}}}],["urlencoded",{"_index":1058,"title":{},"body":{"classes/Mail.html":{}}}],["use",{"_index":1246,"title":{},"body":{"classes/Mail.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["usefactory",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{}}}],["useguards",{"_index":1639,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":1647,"title":{},"body":{"controllers/ResidentCompanyController.html":{},"controllers/SponsorController.html":{},"controllers/UserController.html":{}}}],["useinterceptors",{"_index":793,"title":{},"body":{"controllers/FileController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":812,"title":{},"body":{"controllers/FileController.html":{}}}],["user",{"_index":226,"title":{"classes/User.html":{}},"body":{"classes/AddUserPayload.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MasterController.html":{},"controllers/OrderProductController.html":{},"classes/RegisterPayload.html":{},"controllers/ResidentCompanyController.html":{},"classes/UploadPayload.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user.company",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.companyid",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.controller",{"_index":2169,"title":{},"body":{"modules/UserModule.html":{}}}],["user.entity",{"_index":2167,"title":{},"body":{"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":2250,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.imageurl",{"_index":2265,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.lastname",{"_index":2252,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.password",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.payload",{"_index":2137,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["user.payload.ts",{"_index":193,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/DeleteUserPayload.html":{},"classes/ListUserPayload.html":{},"classes/UpdateUserPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.payload.ts:12",{"_index":1012,"title":{},"body":{"classes/ListUserPayload.html":{}}}],["user.payload.ts:13",{"_index":2082,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:16",{"_index":206,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:17",{"_index":1010,"title":{},"body":{"classes/ListUserPayload.html":{}}}],["user.payload.ts:20",{"_index":2075,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:22",{"_index":215,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/ListUserPayload.html":{}}}],["user.payload.ts:25",{"_index":2076,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:27",{"_index":1009,"title":{},"body":{"classes/ListUserPayload.html":{}}}],["user.payload.ts:29",{"_index":205,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:30",{"_index":2077,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:32",{"_index":1013,"title":{},"body":{"classes/ListUserPayload.html":{}}}],["user.payload.ts:34",{"_index":219,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:36",{"_index":2081,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:37",{"_index":1014,"title":{},"body":{"classes/ListUserPayload.html":{}}}],["user.payload.ts:39",{"_index":216,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:42",{"_index":1015,"title":{},"body":{"classes/ListUserPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:44",{"_index":207,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:47",{"_index":2080,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:49",{"_index":209,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:52",{"_index":2078,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:55",{"_index":208,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:56",{"_index":2079,"title":{},"body":{"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:61",{"_index":217,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/UpdateUserPayload.html":{}}}],["user.payload.ts:67",{"_index":213,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:7",{"_index":1011,"title":{},"body":{"classes/ListUserPayload.html":{}}}],["user.payload.ts:72",{"_index":210,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:76",{"_index":212,"title":{},"body":{"classes/AddUserPayload.html":{}}}],["user.payload.ts:8",{"_index":707,"title":{},"body":{"classes/DeleteUserPayload.html":{}}}],["user.phonenumber",{"_index":2256,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.role",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":2168,"title":{},"body":{"modules/UserModule.html":{}}}],["user.status",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.title",{"_index":2254,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.usertype",{"_index":2258,"title":{},"body":{"injectables/UsersService.html":{}}}],["user/user.service",{"_index":861,"title":{},"body":{"injectables/FileService.html":{}}}],["user_id",{"_index":2177,"title":{},"body":{"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{}}}],["user_tokens",{"_index":2184,"title":{},"body":{"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{}}}],["user_type",{"_index":218,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/CreateUsersTable1611484925515.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":2115,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userfillablefields",{"_index":2114,"title":{"classes/UserFillableFields.html":{}},"body":{"classes/User.html":{},"classes/UserFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":786,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/UploadPayload.html":{}}}],["userinfo",{"_index":1031,"title":{},"body":{"classes/Mail.html":{},"injectables/UsersService.html":{}}}],["userinfo.origin",{"_index":1221,"title":{},"body":{"classes/Mail.html":{}}}],["userinfo.token",{"_index":1223,"title":{},"body":{"classes/Mail.html":{}}}],["userinfo.username",{"_index":1215,"title":{},"body":{"classes/Mail.html":{}}}],["userinformation",{"_index":2239,"title":{},"body":{"injectables/UsersService.html":{}}}],["userinformation.token",{"_index":2241,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodule",{"_index":276,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUsersTable1611484925515.html":{},"injectables/UsersService.html":{}}}],["userquery",{"_index":2269,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.addorderby(\"users.firstname",{"_index":2286,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.addorderby(\"users.lastname",{"_index":2287,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.andwhere(\"(users.firstname",{"_index":2277,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.andwhere(\"users.role",{"_index":2275,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.getmany",{"_index":2288,"title":{},"body":{"injectables/UsersService.html":{}}}],["userquery.skip(skip).take(take",{"_index":2285,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrepository",{"_index":2193,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":704,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFillableFields.html":{},"miscellaneous/variables.html":{}}}],["users.lastname",{"_index":2278,"title":{},"body":{"injectables/UsersService.html":{}}}],["userservice",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"controllers/UserController.html":{}}}],["usersservice",{"_index":398,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoken",{"_index":2172,"title":{"classes/UserToken.html":{}},"body":{"modules/UserModule.html":{},"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usertokenfillablefields",{"_index":2185,"title":{"classes/UserTokenFillableFields.html":{}},"body":{"classes/UserToken.html":{},"classes/UserTokenFillableFields.html":{},"coverage.html":{}}}],["usertokenrepository",{"_index":2194,"title":{},"body":{"injectables/UsersService.html":{}}}],["usertxt",{"_index":1070,"title":{},"body":{"classes/Mail.html":{}}}],["usertype",{"_index":203,"title":{},"body":{"classes/AddUserPayload.html":{},"classes/UpdateUserPayload.html":{},"classes/User.html":{},"classes/UserFillableFields.html":{}}}],["uses",{"_index":2498,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":605,"title":{},"body":{"modules/ConfigModule.html":{}}}],["utilizelab",{"_index":114,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/ResidentCompanyFillableFields.html":{},"classes/ResidentCompanyHistoryFillableFields.html":{}}}],["utils/hash",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordTransformer.html":{}}}],["utils/mail",{"_index":2170,"title":{},"body":{"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["validate",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExistsValidator.html":{},"injectables/JwtStrategy.html":{},"injectables/UniqueValidator.html":{},"injectables/UsersService.html":{}}}],["validate(undefined",{"_index":971,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(value",{"_index":726,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validateif",{"_index":173,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["validateif(o",{"_index":185,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/SearchResidentCompanyPayload.html":{}}}],["validatetoken",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["validatetoken(token",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["validateuser",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":713,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validationoptions",{"_index":723,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/functions.html":{}}}],["validator",{"_index":174,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{},"classes/AddUserPayload.html":{},"classes/CreateOrderProductDto.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"classes/ForgotPasswordPayload.html":{},"classes/LoginPayload.html":{},"classes/MasterPayload.html":{},"classes/PasswordPayload.html":{},"classes/RegisterPayload.html":{},"classes/SearchResidentCompanyPayload.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UpdateUserPayload.html":{},"classes/UploadPayload.html":{},"dependencies.html":{}}}],["validator/exists.validator",{"_index":598,"title":{},"body":{"modules/CommonModule.html":{}}}],["validator/unique.validator",{"_index":599,"title":{},"body":{"modules/CommonModule.html":{}}}],["validatorconstraint",{"_index":721,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validatorconstraintinterface",{"_index":722,"title":{},"body":{"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["value",{"_index":31,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"interfaces/ExistsValidationArguments.html":{},"injectables/ExistsValidator.html":{},"injectables/FileService.html":{},"classes/PasswordTransformer.html":{},"controllers/ResidentCompanyController.html":{},"injectables/SchedulerService.html":{},"classes/TrimStringsPipe.html":{},"interfaces/UniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.trim",{"_index":2045,"title":{},"body":{"classes/TrimStringsPipe.html":{}}}],["values",{"_index":37,"title":{},"body":{"classes/AbstractTransformPipe.html":{},"classes/TrimStringsPipe.html":{}}}],["values[key",{"_index":52,"title":{},"body":{"classes/AbstractTransformPipe.html":{}}}],["valuetransformer",{"_index":1541,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["varchar",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{}}}],["variable",{"_index":2313,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2456,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["varying(250",{"_index":669,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["varying(255",{"_index":693,"title":{},"body":{"classes/CreateUsersTable1611484925515.html":{}}}],["verify",{"_index":1240,"title":{},"body":{"classes/Mail.html":{},"miscellaneous/variables.html":{}}}],["verifylink",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifylink(@param('token",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifylink(token",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["view",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visit",{"_index":2545,"title":{},"body":{"index.html":{}}}],["vivify",{"_index":2558,"title":{},"body":{"license.html":{}}}],["void",{"_index":1036,"title":{},"body":{"classes/Mail.html":{}}}],["warranties",{"_index":2598,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2594,"title":{},"body":{"license.html":{}}}],["we've",{"_index":1216,"title":{},"body":{"classes/Mail.html":{}}}],["website",{"_index":1711,"title":{},"body":{"classes/ResidentCompanyFillableFields.html":{}}}],["weight:inherit!important",{"_index":1109,"title":{},"body":{"classes/Mail.html":{}}}],["welcome",{"_index":1242,"title":{},"body":{"classes/Mail.html":{}}}],["where(\"users.status",{"_index":2271,"title":{},"body":{"injectables/UsersService.html":{}}}],["where('users.email",{"_index":2228,"title":{},"body":{"injectables/UsersService.html":{}}}],["whether",{"_index":2611,"title":{},"body":{"license.html":{}}}],["width:0",{"_index":1116,"title":{},"body":{"classes/Mail.html":{}}}],["width:1%!important",{"_index":1206,"title":{},"body":{"classes/Mail.html":{}}}],["width:100",{"_index":1090,"title":{},"body":{"classes/Mail.html":{}}}],["width:100%!important",{"_index":1178,"title":{},"body":{"classes/Mail.html":{}}}],["width:10px",{"_index":1168,"title":{},"body":{"classes/Mail.html":{}}}],["width:600px",{"_index":1136,"title":{},"body":{"classes/Mail.html":{}}}],["width:600px!important",{"_index":1179,"title":{},"body":{"classes/Mail.html":{}}}],["width:auto!important",{"_index":1199,"title":{},"body":{"classes/Mail.html":{}}}],["without",{"_index":2504,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":2482,"title":{},"body":{"index.html":{}}}],["working",{"_index":2553,"title":{},"body":{"index.html":{}}}],["write",{"_index":2506,"title":{},"body":{"index.html":{}}}],["www",{"_index":1056,"title":{},"body":{"classes/Mail.html":{}}}],["x",{"_index":1060,"title":{},"body":{"classes/Mail.html":{},"controllers/ResidentCompanyController.html":{},"controllers/UserController.html":{}}}],["yarn",{"_index":2483,"title":{},"body":{"index.html":{}}}],["year",{"_index":1442,"title":{},"body":{"controllers/OrderProductController.html":{}}}],["yes",{"_index":2210,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":145,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["za",{"_index":144,"title":{},"body":{"classes/AddResidentCompanyPayload.html":{}}}],["zoom",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MasterModule.html":{},"modules/OrderProductModule.html":{},"modules/ResidentCompanyModule.html":{},"modules/SponsorModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractTransformPipe.html":{"url":"classes/AbstractTransformPipe.html","title":"class - AbstractTransformPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTransformPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/transformer/abstract-transform.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                except\n                            \n                            \n                                    Private\n                                isObject\n                            \n                            \n                                transform\n                            \n                            \n                                    Private\n                                transformObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                transformValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            except\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    except()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/abstract-transform.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isObject(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/abstract-transform.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(values: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/abstract-transform.pipe.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformObject(values)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/abstract-transform.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            transformValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/abstract-transform.pipe.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata } from '@nestjs/common';\n\nexport abstract class AbstractTransformPipe implements PipeTransform {\n  protected abstract transformValue(value: any): any;\n\n  protected except(): string[] {\n    return [];\n  }\n\n  private isObject(value: any): boolean {\n    return typeof value === 'object' && value !== null;\n  }\n\n  private transformObject(values) {\n    Object.keys(values).forEach((key) => {\n      if (this.except().includes(key)) {\n        return;\n      }\n\n      if (this.isObject(values[key])) {\n        values[key] = this.transformObject(values[key]);\n      } else {\n        values[key] = this.transformValue(values[key]);\n      }\n    });\n    return values;\n  }\n\n  transform(values: any, metadata: ArgumentMetadata) {\n    const { type } = metadata;\n    if (this.isObject(values) && type === 'body') {\n      return this.transformObject(values);\n    }\n    return values;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddOrderDto.html":{"url":"classes/AddOrderDto.html","title":"class - AddOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/dto/add-order.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                orderId\n                            \n                            \n                                orderProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/add-order.payload.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/add-order.payload.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CreateOrderProductDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, type: CreateOrderProductDto})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/add-order.payload.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { CreateOrderProductDto } from \"./order-product.create.dto\";\n\n\nexport class AddOrderDto {\n  @ApiProperty({\n    required: true,\n  })\n  companyId: number;\n\n  @ApiProperty({\n    required: true,\n  })\n  orderId: number;\n\n  @ApiProperty({\n    required: true,\n    type: CreateOrderProductDto\n  })\n  orderProducts: CreateOrderProductDto[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddResidentCompanyPayload.html":{"url":"classes/AddResidentCompanyPayload.html","title":"class - AddResidentCompanyPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddResidentCompanyPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/add-resident-company.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                affiliatedInstitution\n                            \n                            \n                                biolabsSources\n                            \n                            \n                                companyName\n                            \n                            \n                                companyStage\n                            \n                            \n                                email\n                            \n                            \n                                empExpect12Months\n                            \n                            \n                                equipmentOnsite\n                            \n                            \n                                expect12MonthsUtilizeLab\n                            \n                            \n                                foundedPlace\n                            \n                            \n                                funding\n                            \n                            \n                                fundingSource\n                            \n                            \n                                industry\n                            \n                            \n                                intellectualProperty\n                            \n                            \n                                isAffiliated\n                            \n                            \n                                modality\n                            \n                            \n                                name\n                            \n                            \n                                noOfFullEmp\n                            \n                            \n                                otherBiolabsSources\n                            \n                            \n                                otherCompanyStage\n                            \n                            \n                                otherFundingSource\n                            \n                            \n                                otherIndustries\n                            \n                            \n                                otherIntellectualProperty\n                            \n                            \n                                otherModality\n                            \n                            \n                                preferredMoveIn\n                            \n                            \n                                rAndDPath\n                            \n                            \n                                site\n                            \n                            \n                                startDate\n                            \n                            \n                                technology\n                            \n                            \n                                utilizeLab\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            affiliatedInstitution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})@MaxLength(250)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            biolabsSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@Min(1, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@MaxLength(500)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()@Unique(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            empExpect12Months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:160\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equipmentOnsite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@MaxLength(500)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expect12MonthsUtilizeLab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            foundedPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@MinLength(1)@MaxLength(100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            funding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()@Min(1, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:180\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intellectualProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNumber()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAffiliated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:139\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@MaxLength(100)@Matches('^[a-zA-Z. ]+')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noOfFullEmp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:153\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherBiolabsSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})@MaxLength(100)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherCompanyStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})@ValidateIf(undefined)@IsNotEmpty()@MaxLength(100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherFundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})@ValidateIf(undefined)@IsNotEmpty()@MaxLength(100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherIndustries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherIntellectualProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})@MaxLength(100)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherModality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preferredMoveIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:205\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rAndDPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@MinLength(1)@MaxLength(500)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@Min(1, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technology\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@MinLength(1)@MaxLength(500)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utilizeLab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/add-resident-company.payload.ts:167\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsNumber, IsOptional, Matches, Max, MaxLength, Min, MinLength, ValidateIf } from 'class-validator';\nimport { Unique } from '../../common';\nimport { ResidentCompany } from './resident-company.entity';\n\nexport class AddResidentCompanyPayload {\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  @Unique([ResidentCompany])\n  email: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @MaxLength(100)\n  @Matches('^[a-zA-Z. ]+')\n  name: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @MaxLength(500)\n  companyName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @Min(1, { each: true })\n  site: number[];\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @Min(1, { each: true })\n  biolabsSources: number;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  @MaxLength(100)\n  @IsOptional()\n  otherBiolabsSources: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @MinLength(1)\n  @MaxLength(500)\n  technology: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @MinLength(1)\n  @MaxLength(500)\n  rAndDPath: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  startDate: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @MinLength(1)\n  @MaxLength(100)\n  foundedPlace: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @Min(1)\n  companyStage: number;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  @ValidateIf(o => o.companyStage == '9999')\n  @IsNotEmpty()\n  @MaxLength(100)\n  otherCompanyStage: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  @Min(0)\n  funding: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  @Min(1, { each: true })\n  fundingSource: number[];\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  @ValidateIf(o => o.fundingSource.includes('9999'))\n  @IsNotEmpty()\n  @MaxLength(100)\n  otherFundingSource: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNumber()\n  @IsOptional()\n  intellectualProperty: number;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  @MaxLength(100)\n  otherIntellectualProperty: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  isAffiliated: boolean;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  @MaxLength(250)\n  affiliatedInstitution: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @Min(0)\n  noOfFullEmp: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @Min(0)\n  empExpect12Months: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @Min(0)\n  utilizeLab: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @Min(0)\n  expect12MonthsUtilizeLab: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  industry: string[];\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  otherIndustries: any;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  modality: string[];\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  otherModality: object;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  preferredMoveIn: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @MaxLength(500)\n  equipmentOnsite: string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUserPayload.html":{"url":"classes/AddUserPayload.html","title":"class - AddUserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/add-user.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                imageUrl\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                role\n                            \n                            \n                                site_id\n                            \n                            \n                                title\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsNumber()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()@Unique(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@SameAs('password')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user_type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/add-user.payload.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {​​​ ApiProperty }​​​ from'@nestjs/swagger';\nimport {​​​ IsEmail, IsNumber, IsOptional }​​​ from'class-validator';\nimport {​​​ Unique }​​​ from'../../common';\nimport {​​​ SameAs }​​​ from'../../common/validator/same-as.validator';\nimport {​​​ User }​​​ from'../user';\n\n\ntype user_type = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7';\n\nexport class AddUserPayload {\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()                 \n  @Unique([User])\n  email: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @IsNumber()\n  role: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  companyId: number;\n\n  @ApiProperty({\n    required: true,\n  })\n  userType: user_type;\n\n  @ApiProperty({\n    required: true,\n  })\n  site_id: number[];\n\n  @ApiProperty({\n    required: true,\n  })\n  firstName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  lastName: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true\n  })\n  imageUrl: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true\n  })\n  title: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true\n  })\n  phoneNumber: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  password: string;\n\n  @ApiProperty({ required: false })\n  @SameAs('password')\n  passwordConfirmation: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/main/app.controller.ts:15\n                \n            \n\n\n            \n                \n                    Description: This method will return the home page response.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Controller } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiBearerAuth()\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  /**\n   * Description: This method will return the home page response.\n   * @description This method will return the home page response.\n   */\n  @Get()\n  root(): any {\n    return 'Hello from Biolabs';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nMasterModule\n\nMasterModule\n\nAppModule -->\n\nMasterModule->AppModule\n\n\n\n\n\nOrderProductModule\n\nOrderProductModule\n\nAppModule -->\n\nOrderProductModule->AppModule\n\n\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\nAppModule -->\n\nResidentCompanyModule->AppModule\n\n\n\n\n\nSponsorModule\n\nSponsorModule\n\nAppModule -->\n\nSponsorModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/main/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            MasterModule\n                        \n                        \n                            OrderProductModule\n                        \n                        \n                            ResidentCompanyModule\n                        \n                        \n                            SponsorModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleAsyncOptions } from '@nestjs/typeorm';\nimport { CommonModule } from 'modules/common';\nimport { ConfigModule, ConfigService } from 'modules/config';\nimport { AuthModule } from 'modules/public/auth';\nimport { FileModule } from 'modules/public/file';\nimport { MasterModule } from 'modules/public/master';\nimport { OrderProductModule } from 'modules/public/order/order.module';\nimport { ResidentCompanyModule } from 'modules/public/resident-company';\nimport { SponsorModule } from 'modules/public/sponsor/sponsor.module';\nimport { UserModule } from 'modules/public/user';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\nconst appRoot = require('app-root-path'); \n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ServeStaticModule.forRoot({\n      serveRoot: '/doc',\n      rootPath: join(appRoot.path + '/BioLabDoc/architectureDoc'),\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: () => {\n        return {\n          type: process.env.POSTGRESQLCONNSTR_DB_TYPE,\n          host: process.env.POSTGRESQLCONNSTR_DB_HOST,\n          port: process.env.POSTGRESQLCONNSTR_DB_PORT,\n          username: process.env.POSTGRESQLCONNSTR_DB_USERNAME,\n          password: process.env.POSTGRESQLCONNSTR_DB_PASSWORD,\n          database: process.env.POSTGRESQLCONNSTR_DB_DATABASE,\n          entities: [__dirname + './../**/**.entity{.ts,.js}'],\n          synchronize: process.env.POSTGRESQLCONNSTR_DB_SYNC,\n          ssl: (process.env.POSTGRESQLCONNSTR_DB_SSL == 'true'),\n        } as TypeOrmModuleAsyncOptions;\n      },\n    }),\n    ConfigModule,\n    AuthModule,\n    CommonModule,\n    MasterModule,\n    UserModule,\n    FileModule,\n    ResidentCompanyModule,\n    SponsorModule,\n    OrderProductModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/main/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/main/app.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/main/app.service.ts:12\n                \n            \n\n\n            \n                \n                    Description: This method will return the app url from system enviourment.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from './../config';\n\n@Injectable()\nexport class AppService {\n  constructor(private config: ConfigService) { }\n\n  /**\n   * Description: This method will return the app url from system enviourment.\n   * @description This method will return the app url from system enviourment.\n   */\n  root(): string {\n    return process.env.APPSETTING_APP_URL;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                setNewPassword\n                            \n                            \n                                    Async\n                                verifyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(payload: ForgotPasswordPayload, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')@ApiResponse({status: 201, description: 'Successful Registration'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/auth/auth.controller.ts:66\n                \n            \n\n\n            \n                \n                    Description: This method is used to get a password reset link for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                ForgotPasswordPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body expects the payload of type ForgotPasswordPayload.\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiResponse({status: 201, description: 'Successful Login'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n                    Description: This method is used to login a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body expects the payload of type LoginPayload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setNewPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(payload: PasswordPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('set-password')@ApiResponse({status: 201, description: 'Successful Registration'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/auth/auth.controller.ts:40\n                \n            \n\n\n            \n                \n                    Description: This method is used to set new password for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PasswordPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body expects the payload of type PasswordPayload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyLink(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('verify-link/:token')@ApiResponse({status: 201, description: 'Successful Registration'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n                    Description: This method is used to validate a token for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, Post, Get, Put, Param, Req } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthService, LoginPayload } from '.';\nimport { UsersService } from '../user';\nimport { PasswordPayload } from './password.payload';\nimport { ForgotPasswordPayload } from './forgot-password.payload';\nimport { Request } from 'express';\n\n@Controller('api/auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UsersService,\n  ) { }\n\n  /**\n   * Description: This method is used to login a user.\n   * @description This method is used to login a user.\n   * @param payload it is a request body expects the payload of type LoginPayload.\n   */\n  @Post('login')\n  @ApiResponse({ status: 201, description: 'Successful Login' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async login(@Body() payload: LoginPayload): Promise {\n    const user = await this.authService.validateUser(payload);\n    return await this.authService.createToken(user);\n  }\n\n  /**\n   * Description: This method is used to set new password for a user.\n   * @description This method is used to set new password for a user.\n   * @param payload it is a request body expects the payload of type PasswordPayload.\n   */\n  @Put('set-password')\n  @ApiResponse({ status: 201, description: 'Successful Registration' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async setNewPassword(@Body() payload: PasswordPayload): Promise {\n    return await this.userService.setNewPassword(payload);\n  }\n\n  /**\n   * Description: This method is used to validate a token for a user.\n   * @description This method is used to validate a token for a user.\n   * @param payload it is a request param expects the payload of type string.\n   */\n  @Get('verify-link/:token')\n  @ApiResponse({ status: 201, description: 'Successful Registration' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async verifyLink(@Param('token') token: string): Promise {\n    return await this.authService.validateToken(token);\n  }\n\n  /**\n   * Description: This method is used to get a password reset link for a user.\n   * @description This method is used to get a password reset link for a user.\n   * @param payload it is a request body expects the payload of type ForgotPasswordPayload.\n   */\n  @Post('forgot-password')\n  @ApiResponse({ status: 201, description: 'Successful Registration' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async forgotPassword(@Body() payload: ForgotPasswordPayload, @Req() req: Request): Promise {\n    return await this.authService.forgotPassword(payload, req);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nMasterModule\n\nMasterModule\n\nAuthModule -->\n\nMasterModule->AuthModule\n\n\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\nAuthModule -->\n\nResidentCompanyModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            MasterModule\n                        \n                        \n                            ResidentCompanyModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '../../config';\nimport { UserModule } from '../user';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { AuthController } from './auth.controller';\nimport { MasterModule } from '../master';\nimport { ResidentCompanyModule } from '../resident-company/resident-company.module';\n\n@Module({\n  imports: [\n    UserModule,\n    ConfigModule,\n    MasterModule,\n    ResidentCompanyModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: () => {\n        return {\n          secret: process.env.APPSETTING_JWT_SECRET_KEY,\n          signOptions: {\n            ...(process.env.APPSETTING_JWT_EXPIRATION_TIME\n              ? {\n                expiresIn: Number(process.env.APPSETTING_JWT_EXPIRATION_TIME),\n              }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({ defaultStrategy: 'jwt' })],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createSuperAdmin\n                            \n                            \n                                createToken\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, userService: UsersService, masterService: MasterService, residentCompanyService: ResidentCompanyService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/public/auth/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        masterService\n                                                  \n                                                        \n                                                                        MasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        residentCompanyService\n                                                  \n                                                        \n                                                                        ResidentCompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createSuperAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSuperAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Description: This method creates the default super admin with all site access.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        user object with token info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/auth.service.ts:61\n                \n            \n\n\n            \n                \n                    Description: This method is used to generate the token for the logged in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of User\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { expiresIn: any; accessToken: any; permissions: {}; user: any; }\n\n                    \n                    \n                        user object with token info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(payload, req)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/auth.service.ts:124\n                \n            \n\n\n            \n                \n                    Description: This method is used to generate the token for the user to reset the password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of user info for reset passsword\n\n                                    \n                                \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of Request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n                    Description: This method will call on appliaction boot up to generate the master data.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/auth.service.ts:113\n                \n            \n\n\n            \n                \n                    Description: This method is used to validate the user token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/auth.service.ts:94\n                \n            \n\n\n            \n                \n                    Description: This method is used to validate the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of LoginPayload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { SITE_ADMIN_ACCESSLEVELS } from '../../../constants/privileges-site-admin';\nimport { SPONSOR_ACCESSLEVELS } from '../../../constants/privileges-sponsor';\nimport { SUPER_ADMIN_ACCESSLEVELS } from '../../../constants/privileges-super-admin';\nimport { Hash } from '../../../utils/Hash';\nimport { ConfigService } from '../../config';\nimport { User, UsersService } from '../user';\nimport { LoginPayload } from './login.payload';\nimport { MasterService } from '../master';\nimport { RESIDENT_ACCESSLEVELS } from '../../../constants/privileges-resident';\nimport { ResidentCompanyService } from '../resident-company/resident-company.service';\n\n\nconst appRoot = require('app-root-path');\nconst migrationData = JSON.parse(require(\"fs\").readFileSync(appRoot.path + \"/migration.json\"));\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService,\n    private readonly masterService: MasterService,\n    private readonly residentCompanyService: ResidentCompanyService\n  ) { }\n\n  /**\n   * Description: This method will call on appliaction boot up to generate the master data.\n   * @description This method will call on appliaction boot up to generate the master data.\n   */\n  async onApplicationBootstrap() {\n    await this.masterService.createRoles();\n    await this.masterService.createSites();\n    await this.masterService.createFundings();\n    await this.masterService.createModalities();\n    await this.masterService.createBiolabsSources();\n    await this.masterService.createCategories();\n    await this.masterService.createTechnologyStages();\n    await this.createSuperAdmin();\n  }\n\n  /**\n   * Description: This method creates the default super admin with all site access.\n   * @description This method creates the default super admin with all site access.\n   * @return user object with token info\n   */\n  private async createSuperAdmin() {\n    const superAdmin = await this.userService.getByEmail('superadmin@biolabs.io');\n    if (!superAdmin) {\n      await this.userService.create(migrationData['superadmin']);\n    }\n  }\n\n  /**\n   * Description: This method is used to generate the token for the logged in user.\n   * @description This method is used to generate the token for the logged in user.\n   * @param user object of User\n   * @return user object with token info\n   */\n  createToken(user: User) {\n    let permissions = {};\n    switch (user.role) {\n      case 1:\n        permissions = SUPER_ADMIN_ACCESSLEVELS;\n        break;\n      case 2:\n        permissions = SITE_ADMIN_ACCESSLEVELS;\n        break;\n      case 3:\n        permissions = SPONSOR_ACCESSLEVELS;\n        break;\n      case 4:\n        permissions = RESIDENT_ACCESSLEVELS;\n        break;\n      default:\n        break;\n    }\n\n    return {\n      expiresIn: process.env.APPSETTING_JWT_EXPIRATION_TIME,\n      accessToken: this.jwtService.sign({ id: user.id }),\n      permissions: permissions,\n      user,\n    };\n  }\n\n  /**\n   * Description: This method is used to validate the user.\n   * @description This method is used to validate the user.\n   * @param payload object of LoginPayload\n   * @return user object\n   */\n  async validateUser(payload: LoginPayload): Promise {\n    const user: any = await this.userService.getByEmail(payload.email);\n    if (!user || user.status != '1' || user.password == null || !Hash.compare(payload.password, user.password)) {\n      throw new UnauthorizedException('Invalid credentials!');\n    }\n    if (user.companyId) {\n      const company = await this.residentCompanyService.getResidentCompany(user.companyId);\n      if (company)\n        user.company = company;\n    }\n    return user;\n  }\n\n  /**\n   * Description: This method is used to validate the user token.\n   * @description This method is used to validate the user token.\n   * @param token string\n   * @return user object\n   */\n  async validateToken(token) {\n    return this.userService.validateToken(token);\n  }\n\n  /**\n   * Description: This method is used to generate the token for the user to reset the password.\n   * @description This method is used to generate the token for the user to reset the password.\n   * @param payload object of user info for reset passsword\n   * @param req object of Request\n   * @return user object\n   */\n  async forgotPassword(payload, req) {\n    return this.userService.forgotPassword(payload, req);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/model/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createDateTime\n                            \n                            \n                                createdBy\n                            \n                            \n                                id\n                            \n                            \n                                internalComment\n                            \n                            \n                                isActive\n                            \n                            \n                                isArchived\n                            \n                            \n                                lastChangedBy\n                            \n                            \n                                lastChangedDateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamptz', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', length: 300})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            internalComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', length: 300, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArchived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastChangedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', length: 300})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastChangedDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamptz', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/common/model/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, Column, UpdateDateColumn, CreateDateColumn } from 'typeorm';\n\nexport abstract class BaseEntity {\n    @PrimaryGeneratedColumn('uuid')\n    id: string;\n\n    @Column({ type: 'boolean', default: true })\n    isActive: boolean;\n\n    @Column({ type: 'boolean', default: false })\n    isArchived: boolean;\n\n    @CreateDateColumn({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n    createDateTime: Date;\n\n    @Column({ type: 'varchar', length: 300 })\n    createdBy: string;\n\n    @UpdateDateColumn({ type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n    lastChangedDateTime: Date;\n\n    @Column({ type: 'varchar', length: 300 })\n    lastChangedBy: string;\n\n    @Column({ type: 'varchar', length: 300, nullable: true })\n    internalComment: string | null;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BiolabsSource.html":{"url":"classes/BiolabsSource.html","title":"class - BiolabsSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BiolabsSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/biolabs-source.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'biolabs_sources',\n})\nexport class BiolabsSource {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class BiolabsSourceFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BiolabsSourceFillableFields.html":{"url":"classes/BiolabsSourceFillableFields.html","title":"class - BiolabsSourceFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BiolabsSourceFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/biolabs-source.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/biolabs-source.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'biolabs_sources',\n})\nexport class BiolabsSource {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class BiolabsSourceFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/category.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                parent_id\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'categories',\n})\nexport class Category {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({})\n  parent_id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class CategoryFillableFields {\n  id: number;\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryFillableFields.html":{"url":"classes/CategoryFillableFields.html","title":"class - CategoryFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/category.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/category.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'categories',\n})\nexport class Category {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({})\n  parent_id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class CategoryFillableFields {\n  id: number;\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nExistsValidator\n\nExistsValidator\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nExistsValidator->CommonModule\n\n\n\n\n\nUniqueValidator\n\nUniqueValidator\n\nCommonModule -->\n\nUniqueValidator->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/common/common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExistsValidator\n                        \n                        \n                            UniqueValidator\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ExistsValidator } from './validator/exists.validator';\nimport { UniqueValidator } from './validator/unique.validator';\n\n@Global()\n@Module({\n  providers: [UniqueValidator, ExistsValidator],\n})\nexport class CommonModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService('.env'),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                isEnv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:15\n                \n            \n\n\n            \n                \n                    Description: This method will return the system enviourment by key name.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnv\n                        \n                        \n                    \n                \n            \n            \n                \nisEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:23\n                \n            \n\n\n            \n                \n                    Description: This method will return the system enviourment.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as fs from 'fs';\n\nexport class ConfigService {\n  private readonly envConfig: { [key: string]: string };\n\n  constructor(filePath: string) {\n    this.envConfig = dotenv.parse(fs.readFileSync(filePath));\n  }\n\n  /**\n   * Description: This method will return the system enviourment by key name.\n   * @description This method will return the system enviourment by key name.\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Description: This method will return the system enviourment.\n   * @description This method will return the system enviourment.\n   */\n  isEnv() {\n    return process.env.APPSETTING_APP_ENV;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/dto/order-product.create.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                currentCharge\n                            \n                            \n                                endDate\n                            \n                            \n                                productDescription\n                            \n                            \n                                productName\n                            \n                            \n                                recurrence\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCharge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recurrence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.create.dto.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateOrderProductDto {\n\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  productName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  productDescription: string;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  cost: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  recurrence: boolean;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  @IsNotEmpty()\n  currentCharge: boolean;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  startDate: number;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  endDate: number;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSponsorDto.html":{"url":"classes/CreateSponsorDto.html","title":"class - CreateSponsorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSponsorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/sponsor/dto/create-sponsor.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSponsorDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersTable1611484925515.html":{"url":"classes/CreateUsersTable1611484925515.html","title":"class - CreateUsersTable1611484925515","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersTable1611484925515\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1611484925515-CreateUsersTable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1611484925515-CreateUsersTable.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1611484925515-CreateUsersTable.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUsersTable1611484925515 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"status_enum\" AS ENUM(\\'-1\\',\\'0\\',\\'1\\',\\'2\\',\\'3\\',\\'4\\',\\'96\\',\\'97\\',\\'98\\',\\'99\\');\n      CREATE TABLE public.master_user_type\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT master_user_type_pkey PRIMARY KEY (id)\n      );\n\n      CREATE TABLE public.master_category\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT master_category_pkey PRIMARY KEY (id)\n      );\n      \n      CREATE TABLE public.master_modality\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT master_modality_pkey PRIMARY KEY (id)\n      );\n      \n      CREATE TABLE public.master_funding\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT master_funding_pkey PRIMARY KEY (id)\n      );\n      \n      CREATE TABLE public.master_technology_stage\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT master_technology_stage_pkey PRIMARY KEY (id)\n      );\n      \n      CREATE TABLE public.master_source_to_biolabs\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT master_source_to_biolabs_pkey PRIMARY KEY (id)\n      );\n      \n      CREATE TABLE public.site\n      (\n          id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),\n          name character varying(250) COLLATE pg_catalog.\"default\" NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          CONSTRAINT site_pkey PRIMARY KEY (id)\n      );\n\n      CREATE TABLE public.users\n      (\n          id integer NOT NULL,\n          user_type character varying(255) NOT NULL,\n          site_id character varying(255) NOT NULL,\n          username character varying(255) NOT NULL,\n          password character varying(255) NOT NULL,\n          status status_enum DEFAULT '0'::status_enum,\n          added_by integer DEFAULT 0,\n          added_at date,\n          updated_by integer DEFAULT 0,\n          updated_at date,\n          PRIMARY KEY (id)\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n      `,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE IF EXISTS master_user_type;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS master_category;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS master_modality;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS master_funding;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS master_technology_stage;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS master_source_to_biolabs;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS site;`);\n    await queryRunner.query(`DROP TABLE IF EXISTS users;`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserPayload.html":{"url":"classes/DeleteUserPayload.html","title":"class - DeleteUserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/delete-user.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/delete-user.payload.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DeleteUserPayload {\n\n  @ApiProperty({\n    required: true,\n  })\n  id: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExistsValidationArguments.html":{"url":"interfaces/ExistsValidationArguments.html","title":"interface - ExistsValidationArguments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExistsValidationArguments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/validator/exists.validator.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ValidationArguments\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        constraints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constraints\n                                    \n                                \n                                \n                                    \n                                        constraints:         ExistsValidationConstraints\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExistsValidationConstraints\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { ValidatorConstraint, ValidatorConstraintInterface, ValidationArguments, ValidationOptions, registerDecorator } from 'class-validator';\n\n@Injectable()\n@ValidatorConstraint({ name: 'exists', async: true })\nexport class ExistsValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) { }\n\n  public async validate(value: string, args: ExistsValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n              [findCondition || args.property]: value,\n            },\n      })) > 0\n    );\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const [EntityClass] = args.constraints;\n    const entity = EntityClass.name || 'Entity';\n    return `The selected ${args.property}  does not exist in ${entity} entity`;\n  }\n}\n\ntype ExistsValidationConstraints = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface ExistsValidationArguments extends ValidationArguments {\n  constraints: ExistsValidationConstraints;\n}\n\nexport function Exists(constraints: Partial>, validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints,\n      validator: ExistsValidator,\n    });\n  };\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistsValidator.html":{"url":"injectables/ExistsValidator.html","title":"injectable - ExistsValidator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExistsValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/validator/exists.validator.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/modules/common/validator/exists.validator.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/validator/exists.validator.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: ExistsValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/validator/exists.validator.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                ExistsValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { ValidatorConstraint, ValidatorConstraintInterface, ValidationArguments, ValidationOptions, registerDecorator } from 'class-validator';\n\n@Injectable()\n@ValidatorConstraint({ name: 'exists', async: true })\nexport class ExistsValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) { }\n\n  public async validate(value: string, args: ExistsValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n              [findCondition || args.property]: value,\n            },\n      })) > 0\n    );\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const [EntityClass] = args.constraints;\n    const entity = EntityClass.name || 'Entity';\n    return `The selected ${args.property}  does not exist in ${entity} entity`;\n  }\n}\n\ntype ExistsValidationConstraints = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface ExistsValidationArguments extends ValidationArguments {\n  constraints: ExistsValidationConstraints;\n}\n\nexport function Exists(constraints: Partial>, validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints,\n      validator: ExistsValidator,\n    });\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileController.html":{"url":"controllers/FileController.html","title":"controller - FileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/file/file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/file\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                downloadImage\n                            \n                            \n                                    Async\n                                readImage\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(filename, fileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('delete-image')@ApiQuery({name: 'filename', type: String})@ApiQuery({name: 'fileType', required: true, type: 'string'})@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/file/file.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            downloadImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadImage(res, filename, fileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download-image')@Header('Content-Type', 'image/webp')@Header('Content-Disposition', 'attachment; filename=test.webp')@ApiQuery({name: 'filename', type: String})@ApiQuery({name: 'fileType', required: true, type: 'string'})@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/file/file.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readImage(res, filename, fileType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('read-image')@Header('Content-Type', 'image/webp')@ApiQuery({name: 'filename', type: String})@ApiQuery({name: 'fileType', required: true, type: 'string'})@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/file/file.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(payload: literal type, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiFile()@ApiQuery({name: 'userId', required: false, type: 'number'})@ApiQuery({name: 'companyId', required: false, type: 'number'})@ApiQuery({name: 'fileType', required: true, type: 'string'})@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/file/file.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Header, Post, Query, Res, UploadedFile, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBody, ApiConsumes, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { FileService } from './file.service';\n\nexport const ApiFile = (fileName = 'file'): MethodDecorator => (\n  target: any,\n  propertyKey: string,\n  descriptor: PropertyDescriptor,\n) => {\n  ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        [fileName]: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })(target, propertyKey, descriptor);\n};\n@Controller('api/file')\n@ApiTags('File')\nexport class FileController {\n  constructor(private readonly fileService: FileService) { }\n\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  @ApiFile()\n  @ApiQuery({ name: 'userId', required: false, type: 'number' })\n  @ApiQuery({ name: 'companyId', required: false, type: 'number' })\n  @ApiQuery({ name: 'fileType', required: true, type: 'string' })\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async upload(@Query() payload: { userId: number, fileType: string, companyId: number }, @UploadedFile() file: Express.Multer.File): Promise {\n    if (payload && (payload.userId || payload.companyId)) {\n      return await this.fileService.upload(file, payload);\n    } else {\n      return new BadRequestException('companyId or userId any one of them is required');\n    }\n  }\n\n  @Get('read-image')\n  @Header('Content-Type', 'image/webp')\n  @ApiQuery({ name: 'filename', type: String })\n  @ApiQuery({ name: 'fileType', required: true, type: 'string' })\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async readImage(@Res() res, @Query('filename') filename, @Query('fileType') fileType) {\n    const file = await this.fileService.getfileStream(filename, fileType);\n    return file.pipe(res);\n  }\n\n  @Get('download-image')\n  @Header('Content-Type', 'image/webp')\n  @Header('Content-Disposition', 'attachment; filename=test.webp')\n  @ApiQuery({ name: 'filename', type: String })\n  @ApiQuery({ name: 'fileType', required: true, type: 'string' })\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async downloadImage(@Res() res, @Query('filename') filename, @Query('fileType') fileType) {\n    const file = await this.fileService.getfileStream(filename, fileType);\n    return file.pipe(res);\n  }\n\n  @Get('delete-image')\n  @ApiQuery({ name: 'filename', type: String })\n  @ApiQuery({ name: 'fileType', required: true, type: 'string' })\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async delete(@Query('filename') filename, @Query('fileType') fileType) {\n    await this.fileService.delete(filename, fileType);\n    return \"deleted\";\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_imports\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nResidentCompanyModule->FileModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nFileModule -->\n\nUserModule->FileModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/file/file.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResidentCompanyModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResidentCompanyModule } from '../resident-company';\nimport { UserModule } from '../user';\nimport { FileController } from './file.controller';\nimport { FileService } from './file.service';\n\n@Module({\n  imports: [\n    UserModule,\n    ResidentCompanyModule\n  ],\n  controllers: [FileController],\n  providers: [FileService],\n  exports: [FileService],\n})\nexport class FileModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/file/file.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                azureConnection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                getBlobClient\n                            \n                            \n                                    Async\n                                getfileStream\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, residentCompanyService: ResidentCompanyService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/public/file/file.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        residentCompanyService\n                                                  \n                                                        \n                                                                        ResidentCompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(filename: string, containerName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/file/file.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    containerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBlobClient\n                        \n                        \n                    \n                \n            \n            \n                \ngetBlobClient(imageName: string, containerName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/file/file.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    containerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BlockBlobClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getfileStream\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getfileStream(fileName: string, fileType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/file/file.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(file: Express.Multer.File, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/file/file.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            azureConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.APPSETTING_AZURE_STORAGE_CONNECTION\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/file/file.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BlobServiceClient, BlockBlobClient } from '@azure/storage-blob';\nimport { BadRequestException, Injectable, NotAcceptableException } from '@nestjs/common';\nimport { ResidentCompanyService } from '../resident-company';\nimport { UsersService } from '../user/user.service';\n\n@Injectable()\nexport class FileService {\n\n  constructor(\n    private readonly userService: UsersService,\n    private readonly residentCompanyService: ResidentCompanyService\n  ) { }\n\n  azureConnection = process.env.APPSETTING_AZURE_STORAGE_CONNECTION;\n\n  getBlobClient(imageName: string, containerName: string): BlockBlobClient {\n    const blobClientService = BlobServiceClient.fromConnectionString(this.azureConnection);\n    const containerClient = blobClientService.getContainerClient(containerName);\n    const blobClient = containerClient.getBlockBlobClient(imageName);\n    return blobClient;\n  }\n\n  async upload(file: Express.Multer.File, payload: any) {\n    const userId = payload.userId;\n    const companyId = payload.companyId;\n\n    if (file) {\n      const fileName = ((userId) ? userId : companyId) + \"-\" + new Date().getTime() + \"-\" + file.originalname;\n      const blobClient = this.getBlobClient(fileName, payload.fileType);\n      try {\n        const uploaded = await blobClient.uploadData(file.buffer);\n        if (payload.fileType == 'user')\n          await this.userService.updateUserProfilePic({ id: userId, imageUrl: fileName });\n\n        if (payload.fileType == 'pitchdeck' || payload.fileType == 'logo')\n          await this.residentCompanyService.updateResidentCompanyImg({ id: companyId, imageUrl: fileName, fileType : payload.fileType });\n\n        return { upload: uploaded, fileName: fileName };\n      } catch (error) {\n        throw new BadRequestException(\n          error.message\n        );\n      }\n    } else {\n      throw new NotAcceptableException(\n        'File is invalid.',\n      );\n    }\n  }\n\n  async getfileStream(fileName: string, fileType: string) {\n    try {\n      const blobClient = this.getBlobClient(fileName, fileType);\n      const blobDownloaded = await blobClient.download();\n      return blobDownloaded.readableStreamBody;\n    } catch (error) {\n      throw new BadRequestException(\n        error.message\n      );\n    }\n  }\n\n  async delete(filename: string, containerName: string) {\n    const blobClient = this.getBlobClient(filename, containerName);\n    await blobClient.deleteIfExists();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPasswordPayload.html":{"url":"classes/ForgotPasswordPayload.html","title":"class - ForgotPasswordPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPasswordPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/forgot-password.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/forgot-password.payload.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail } from 'class-validator';\n\nexport class ForgotPasswordPayload {\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  email: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Funding.html":{"url":"classes/Funding.html","title":"class - Funding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Funding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/funding.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'fundings',\n})\nexport class Funding {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class FundingFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FundingFillableFields.html":{"url":"classes/FundingFillableFields.html","title":"class - FundingFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FundingFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/funding.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/funding.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'fundings',\n})\nexport class Funding {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class FundingFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hash.html":{"url":"classes/Hash.html","title":"class - Hash","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hash\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/Hash.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compare\n                            \n                            \n                                    Static\n                                make\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            compare\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    compare(plainText, hash)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/Hash.ts:18\n                \n            \n\n\n            \n                \n                    Description: This method will compare the encrypted string and the plain string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            make\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    make(plainText)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/Hash.ts:9\n                \n            \n\n\n            \n                \n                    Description: This method will encrypt the given string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\n\nexport class Hash {\n\n  /**\n   * Description: This method will encrypt the given string.\n   * @description This method will encrypt the given string.\n   */\n  static make(plainText) {\n    const salt = bcrypt.genSaltSync();\n    return bcrypt.hashSync(plainText, salt);\n  }\n\n  /**\n   * Description: This method will compare the encrypted string and the plain string.\n   * @description This method will compare the encrypted string and the plain string.\n   */\n  static compare(plainText, hash) {\n    return bcrypt.compareSync(plainText, hash);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Invoice.html":{"url":"classes/Invoice.html","title":"class - Invoice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invoice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/invoice.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                createdAt\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                orders\n                            \n                            \n                                startDate\n                            \n                            \n                                totalCost\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalCost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinTable, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { Order } from './order.entity';\n\n@Entity({\n  name: 'invoice',\n})\nexport class Invoice {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ nullable: true })\n  companyId: number;\n\n  @Column({ nullable: true })\n  startDate: number;\n\n  @Column({ nullable: true })\n  endDate: number;\n\n  @Column({ nullable: true })\n  totalCost: number;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @ManyToMany(type => Order, order => order.invoices)\n  @JoinTable()\n  orders: Order[];\n\n  // @Column({ nullable: false })\n  // createdBy: number;\n\n}\n\nexport class InvoiceFillableFields {\n  startDate: number;\n  endDate: number;\n  totalCost: number;\n  recurrence: boolean;\n  currentCharge: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvoiceFillableFields.html":{"url":"classes/InvoiceFillableFields.html","title":"class - InvoiceFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvoiceFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/invoice.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentCharge\n                            \n                            \n                                endDate\n                            \n                            \n                                recurrence\n                            \n                            \n                                startDate\n                            \n                            \n                                totalCost\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCharge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recurrence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalCost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/invoice.entity.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinTable, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { Order } from './order.entity';\n\n@Entity({\n  name: 'invoice',\n})\nexport class Invoice {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ nullable: true })\n  companyId: number;\n\n  @Column({ nullable: true })\n  startDate: number;\n\n  @Column({ nullable: true })\n  endDate: number;\n\n  @Column({ nullable: true })\n  totalCost: number;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @ManyToMany(type => Order, order => order.invoices)\n  @JoinTable()\n  orders: Order[];\n\n  // @Column({ nullable: false })\n  // createdBy: number;\n\n}\n\nexport class InvoiceFillableFields {\n  startDate: number;\n  endDate: number;\n  totalCost: number;\n  recurrence: boolean;\n  currentCharge: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/jwt-guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/jwt-guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/jwt-guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    if(info){\n      return user;\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/public/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy, JwtPayload } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { ConfigService } from '../../config';\nimport { UsersService } from '../user';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    readonly configService: ConfigService,\n    private readonly usersService: UsersService\n  ) {\n    super({ jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(), secretOrKey: process.env.APPSETTING_JWT_SECRET_KEY });\n  }\n\n  async validate({ iat, exp, id }: JwtPayload, done) {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListResidentCompanyPayload.html":{"url":"classes/ListResidentCompanyPayload.html","title":"class - ListResidentCompanyPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListResidentCompanyPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/list-resident-company.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyOnboardingStatus\n                            \n                            \n                                companyStatus\n                            \n                            \n                                companyVisibility\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                pagination\n                            \n                            \n                                q\n                            \n                            \n                                role\n                            \n                            \n                                sort\n                            \n                            \n                                sortFiled\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyOnboardingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         company_status\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortFiled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/list-resident-company.payload.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\ntype company_status = '0' | '1' | '2' | '3' | '4' | '5';\n\nexport class ListResidentCompanyPayload {\n  @ApiProperty({\n    required: false,\n  })\n  q: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  role: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  pagination: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  page: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  limit: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyStatus: company_status;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyVisibility: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyOnboardingStatus: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  sort: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  sortFiled: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  sortOrder: string;\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListUserPayload.html":{"url":"classes/ListUserPayload.html","title":"class - ListUserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListUserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/list-user.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                pagination\n                            \n                            \n                                q\n                            \n                            \n                                role\n                            \n                            \n                                sort\n                            \n                            \n                                sortFiled\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortFiled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/list-user.payload.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ListUserPayload {\n  @ApiProperty({\n    required: false,\n  })\n  q: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  role: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  pagination: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  page: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  limit: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  sort: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  sortFiled: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  sortOrder: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/login.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/login.payload.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/login.payload.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\n\nexport class LoginPayload {\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  email: string;\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(5)\n  password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mail.html":{"url":"classes/Mail.html","title":"class - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/Mail.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGrapAPIToken\n                            \n                            \n                                    Async\n                                sendEmail\n                            \n                            \n                                    Private\n                                sendEmailGraphAPI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGrapAPIToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrapAPIToken()\n                \n            \n\n\n            \n                \n                    Defined in src/utils/Mail.ts:13\n                \n            \n\n\n            \n                \n                    Description: This method will return the generated Access token for send mail\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(tenant: any, subject: string, content: string, userInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/Mail.ts:446\n                \n            \n\n\n            \n                \n                    Description: This method will send mail\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tenant\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendEmailGraphAPI\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailGraphAPI(tenant: any, token: any, subject: string, content: string, userInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/Mail.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tenant\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EMAIL } from '../constants/email';\n\nconst dotenv = require('dotenv');\nconst axios = require('axios');\nconst qs = require('qs');\ndotenv.config();\n\nexport class Mail {\n   /**\n    * Description: This method will return the generated Access token for send mail\n    * @description This method will return the generated Access token for send mail\n    */\n   async getGrapAPIToken() {\n      const data = qs.stringify({\n         client_id: process.env.APPSETTING_MICROSOFT_EMAIL_APP_ID,\n         scope: process.env.APPSETTING_MICROSOFT_EMAIL_GRAPH_SCOPE,\n         client_secret: process.env.APPSETTING_MICROSOFT_EMAIL_APP_SECERET,\n         grant_type: 'client_credentials',\n      });\n      let config = {\n         method: 'post',\n         url: process.env.APPSETTING_MICROSOFT_EMAIL_ENDPOINT_TOKEN,\n         headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Cookie:\n               'x-ms-gateway-slice=estsfd; stsservicecookie=estsfd; fpc=Atq01SXesc5AnxuS4qWIT5HOk_SAAQAAAF9QE9gOAAAA',\n         },\n         data: data,\n      };\n\n      return await axios(config)\n         .then(function (response) {\n            return response.data;\n         })\n         .catch(function (error) {\n            if (error)\n              return;\n         });\n   }\n\n   private sendEmailGraphAPI(tenant: any, token: any, subject: string, content: string, userInfo: any) {\n      let userTxt = tenant && tenant.role && tenant.role == 3 ? 'Insight' : 'Connect';\n\n      let data;\n      if (content == 'forgotMail') {\n         data = {\n            message: {\n               subject: subject,\n               body: {\n                  contentType: EMAIL.CONTENT_TYPE,\n                  content: `\n                        \n                           \n                              \n                              \n                              \n                              \n                              \n                              New email\n                              \n                              \n                                 a {text-decoration: none;}\n                              \n                               \n                              \n                              sup { font-size: 100% !important; }\n                               \n                              \n                              \n                                 \n                                    \n                                    96\n                                 \n                              \n                               \n                               \n                              \n                               \n                              \n                                 #outlook a {\n                                 padding:0;\n                                 }\n                                 .ExternalClass {\n                                 width:100%;\n                                 }\n                                 .ExternalClass,\n                                 .ExternalClass p,\n                                 .ExternalClass span,\n                                 .ExternalClass font,\n                                 .ExternalClass td,\n                                 .ExternalClass div {\n                                 line-height:100%;\n                                 }\n                                 .es-button {\n                                 mso-style-priority:100!important;\n                                 text-decoration:none!important;\n                                 }\n                                 a[x-apple-data-detectors] {\n                                 color:inherit!important;\n                                 text-decoration:none!important;\n                                 font-size:inherit!important;\n                                 font-family:inherit!important;\n                                 font-weight:inherit!important;\n                                 line-height:inherit!important;\n                                 }\n                                 .es-desk-hidden {\n                                 display:none;\n                                 float:left;\n                                 overflow:hidden;\n                                 width:0;\n                                 max-height:0;\n                                 line-height:0;\n                                 mso-hide:all;\n                                 }\n                                 .es-button-border:hover a.es-button {\n                                 background:#3533c6!important;\n                                 border-color:#3533c6!important;\n                                 }\n                                 td .es-button-border:hover a.es-button-1 {\n                                 background:#405a72!important;\n                                 border-color:#405a72!important;\n                                 }\n                                 td .es-button-border-2:hover {\n                                 background:#405a72!important;\n                                 }\n                                 td .es-button-border-3:hover {\n                                 border-style:solid solid solid solid!important;\n                                 background:#3533c6!important;\n                                 border-color:#3533c6 #3533c6 #3533c6 #3533c6!important;\n                                 }\n                                 @media only screen and (max-width:600px) {p, ul li, ol li, a { font-size:16px!important; line-height:150%!important } h1 { font-size:30px!important; text-align:center; line-height:120%!important } h2 { font-size:26px!important; text-align:center; line-height:120%!important } h3 { font-size:20px!important; text-align:center; line-height:120%!important } h1 a { font-size:30px!important } h2 a { font-size:26px!important } h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button { font-size:20px!important; display:block!important; border-width:10px 0px 10px 0px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } }\n                              \n                           \n                           \n                              \n                                 \n                                 \n                                    \n                                 \n                                  \n                                 \n                                    \n                                       \n                                          \n                                             \n                                                \n                                                   \n                                                      \n                                                         \n                                                            \n                                                               \n                                                                  \n                                                                     \n                                                                        \n                                                                           \n                                                                              Reset your Password&nbsp;\n                                                                           \n                                                                        \n                                                                        \n                                                                           \n                                                                              Hi ${userInfo.userName\n                     },We've received your request to set a new password for your BioLabs ${userTxt} account. Click below button to reset your password.\n                                                                           \n                                                                        \n                                                                        \n                                                                           \n                                                                              \n                                                                              \n                                                                                 \n                                                                                    \n                                                                                    Reset your Password\n                                                                                 \n                                                                              \n                                                                               \n                                                                              Reset your Password \n                                                                              \n                                                                           \n                                                                        \n                                                                        \n                                                                        \n                                                                        \n                                                                        Or click on:  ${userInfo.origin + EMAIL.EMAIL_CONFIRM_URL + userInfo.token\n                     } \n                                                                     \n                                                                        \n                                                                        \n                                                                           \n                                                                              If you didn't request this, you can safely ignore this email.\n                                                                           \n                                                                        \n                                                                        \n                                                                           \n                                                                              ©&nbsp;2021 BioLabsALL RIGHTS RESERVED\n                                                                           \n                                                                        \n                                                                     \n                                                                  \n                                                               \n                                                            \n                                                         \n                                                      \n                                                   \n                                                \n                                             \n                                          \n                                       \n                                    \n                                 \n                              \n                           \n                        `,\n               },\n               toRecipients: [\n                  {\n                     emailAddress: {\n                        address: tenant.tenantEmail\n                           ? tenant.tenantEmail\n                           : tenant.officialEmail,\n                     },\n                  },\n               ],\n               ccRecipients: [],\n            },\n         };\n         if (EMAIL.CC_EMAIL_USER) {\n            data.message.ccRecipients.push({\n               emailAddress: {\n                  address: EMAIL.CC_EMAIL_USER,\n               },\n            });\n         }\n      } else if (content == 'Invite') {\n         data = {\n            message: {\n               subject: subject,\n               body: {\n                  contentType: EMAIL.CONTENT_TYPE,\n                  content: `\n                        \n                           \n                              \n                              \n                              \n                              \n                              \n                              New email\n                              \n                              \n                                 a {text-decoration: none;}\n                              \n                               \n                              \n                              sup { font-size: 100% !important; }\n                               \n                              \n                              \n                                 \n                                    \n                                    96\n                                 \n                              \n                               \n                               \n                              \n                               \n                              \n                                 #outlook a {\n                                 padding:0;\n                                 }\n                                 .ExternalClass {\n                                 width:100%;\n                                 }\n                                 .ExternalClass,\n                                 .ExternalClass p,\n                                 .ExternalClass span,\n                                 .ExternalClass font,\n                                 .ExternalClass td,\n                                 .ExternalClass div {\n                                 line-height:100%;\n                                 }\n                                 .es-button {\n                                 mso-style-priority:100!important;\n                                 text-decoration:none!important;\n                                 }\n                                 a[x-apple-data-detectors] {\n                                 color:inherit!important;\n                                 text-decoration:none!important;\n                                 font-size:inherit!important;\n                                 font-family:inherit!important;\n                                 font-weight:inherit!important;\n                                 line-height:inherit!important;\n                                 }\n                                 .es-desk-hidden {\n                                 display:none;\n                                 float:left;\n                                 overflow:hidden;\n                                 width:0;\n                                 max-height:0;\n                                 line-height:0;\n                                 mso-hide:all;\n                                 }\n                                 .es-button-border:hover a.es-button {\n                                 background:#3533c6!important;\n                                 border-color:#3533c6!important;\n                                 }\n                                 td .es-button-border:hover a.es-button-1 {\n                                 background:#405a72!important;\n                                 border-color:#405a72!important;\n                                 }\n                                 td .es-button-border-2:hover {\n                                 background:#405a72!important;\n                                 }\n                                 td .es-button-border-3:hover {\n                                 border-style:solid solid solid solid!important;\n                                 background:#3533c6!important;\n                                 border-color:#3533c6 #3533c6 #3533c6 #3533c6!important;\n                                 }\n                                 @media only screen and (max-width:600px) {p, ul li, ol li, a { font-size:16px!important; line-height:150%!important } h1 { font-size:30px!important; text-align:center; line-height:120%!important } h2 { font-size:26px!important; text-align:center; line-height:120%!important } h3 { font-size:20px!important; text-align:center; line-height:120%!important } h1 a { font-size:30px!important } h2 a { font-size:26px!important } h3 a { font-size:20px!important } .es-menu td a { font-size:16px!important } .es-header-body p, .es-header-body ul li, .es-header-body ol li, .es-header-body a { font-size:16px!important } .es-footer-body p, .es-footer-body ul li, .es-footer-body ol li, .es-footer-body a { font-size:16px!important } .es-infoblock p, .es-infoblock ul li, .es-infoblock ol li, .es-infoblock a { font-size:12px!important } *[class=\"gmail-fix\"] { display:none!important } .es-m-txt-c, .es-m-txt-c h1, .es-m-txt-c h2, .es-m-txt-c h3 { text-align:center!important } .es-m-txt-r, .es-m-txt-r h1, .es-m-txt-r h2, .es-m-txt-r h3 { text-align:right!important } .es-m-txt-l, .es-m-txt-l h1, .es-m-txt-l h2, .es-m-txt-l h3 { text-align:left!important } .es-m-txt-r img, .es-m-txt-c img, .es-m-txt-l img { display:inline!important } .es-button-border { display:block!important } a.es-button { font-size:20px!important; display:block!important; border-width:10px 0px 10px 0px!important } .es-btn-fw { border-width:10px 0px!important; text-align:center!important } .es-adaptive table, .es-btn-fw, .es-btn-fw-brdr, .es-left, .es-right { width:100%!important } .es-content table, .es-header table, .es-footer table, .es-content, .es-footer, .es-header { width:100%!important; max-width:600px!important } .es-adapt-td { display:block!important; width:100%!important } .adapt-img { width:100%!important; height:auto!important } .es-m-p0 { padding:0px!important } .es-m-p0r { padding-right:0px!important } .es-m-p0l { padding-left:0px!important } .es-m-p0t { padding-top:0px!important } .es-m-p0b { padding-bottom:0!important } .es-m-p20b { padding-bottom:20px!important } .es-mobile-hidden, .es-hidden { display:none!important } tr.es-desk-hidden, td.es-desk-hidden, table.es-desk-hidden { width:auto!important; overflow:visible!important; float:none!important; max-height:inherit!important; line-height:inherit!important } tr.es-desk-hidden { display:table-row!important } table.es-desk-hidden { display:table!important } td.es-desk-menu-hidden { display:table-cell!important } .es-menu td { width:1%!important } table.es-table-not-adapt, .esd-block-html table { width:auto!important } table.es-social { display:inline-block!important } table.es-social td { display:inline-block!important } }\n                              \n                           \n                           \n                              \n                                 \n                                 \n                                    \n                                 \n                                  \n                                 \n                                    \n                                       \n                                          \n                                             \n                                                \n                                                   \n                                                      \n                                                         \n                                                            \n                                                               \n                                                                  \n                                                                     \n                                                                        \n                                                                           \n                                                                              Verify your email address&nbsp;\n                                                                           \n                                                                        \n                                                                        \n                                                                           \n                                                                              Hi ${userInfo.userName\n                                                                              },Welcome to BioLabs Connect!Your account has been created and is ready for use. Please click the button below to set your password and get going.\n                                                                           \n                                                                        \n                                                                        \n                                                                           \n                                                                              \n                                                                              \n                                                                                 \n                                                                                    \n                                                                                    Set your Password\n                                                                                 \n                                                                              \n                                                                               \n                                                                              Set your Password \n                                                                              \n                                                                           \n                                                                        \n                                                                        \n                                                                        \n                                                                        \n                                                                        Or click on:  ${userInfo.origin + EMAIL.EMAIL_CONFIRM_URL + userInfo.token\n                     } \n                                                                     \n                                                                        \n                                                                        \n                                                                           \n                                                                              ©&nbsp;2021 BioLabsALL RIGHTS RESERVED\n                                                                           \n                                                                        \n                                                                     \n                                                                  \n                                                               \n                                                            \n                                                         \n                                                      \n                                                   \n                                                \n                                             \n                                          \n                                       \n                                    \n                                 \n                              \n                           \n                        `,\n               },\n               toRecipients: [\n                  {\n                     emailAddress: {\n                        address: tenant.tenantEmail\n                           ? tenant.tenantEmail\n                           : tenant.officialEmail,\n                     },\n                  },\n               ],\n               ccRecipients: [],\n            },\n         };\n         if (EMAIL.CC_EMAIL_USER) {\n            data.message.ccRecipients.push({\n               emailAddress: {\n                  address: EMAIL.CC_EMAIL_USER,\n               },\n            });\n         }\n      }\n\n      let authToken = token['token_type'] + ' ' + token['access_token'];\n      axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n      axios.defaults.headers.post['Authorization'] = authToken;\n      axios.post(process.env.APPSETTING_MICROSOFT_EMAIL_ENDPOINT_MAIL, data)\n         .then((response) => {\n            return response.data;\n         })\n         .catch((error) => {\n            return error;\n         });\n   }\n\n   /**\n    * Description: This method will send mail\n    * @description This method will send mail\n    */\n   async sendEmail(tenant: any, subject: string, content: string, userInfo: any) {\n      /** Graph API Token Generation implementation */\n      const tokenGraphAPI = await this.getGrapAPIToken();\n\n      /** Graph API Send Email implementation */\n      this.sendEmailGraphAPI(tenant, tokenGraphAPI, subject, content, userInfo);\n   }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MasterController.html":{"url":"controllers/MasterController.html","title":"controller - MasterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MasterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/master.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/master\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBiolabsSource\n                            \n                            \n                                    Async\n                                getCategories\n                            \n                            \n                                    Async\n                                getCompanyStatus\n                            \n                            \n                                    Async\n                                getFundings\n                            \n                            \n                                    Async\n                                getModalities\n                            \n                            \n                                    Async\n                                getRoles\n                            \n                            \n                                    Async\n                                getSites\n                            \n                            \n                                    Async\n                                getTechnologyStages\n                            \n                            \n                                    Async\n                                getUserTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getBiolabsSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBiolabsSource(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('biolabs-source')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:54\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the biolabs sources by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCategories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategories(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('category')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:42\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the categories by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('company-status')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:101\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the company status.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFundings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFundings(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('fundings')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:66\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the fundings by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getModalities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getModalities(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('modality')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:78\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the modalities by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoles(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('roles')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:30\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the roles by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSites(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sites')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:18\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the sites by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTechnologyStages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTechnologyStages(params: MasterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('technology-stage')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:90\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the technology stages by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                MasterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user-types')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/master/master.controller.ts:112\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the user type.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { MasterService, MasterPayload } from '.';\n\n@Controller('api/master')\n@ApiTags('Master')\nexport class MasterController {\n  constructor(private readonly masterService: MasterService) {}\n\n  /**\n   * Description: This method is used to list the sites by get method.\n   * @description This method is used to list the sites by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('sites')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getSites(@Query() params: MasterPayload): Promise {\n    return this.masterService.getSites(params);\n  }\n\n  /**\n   * Description: This method is used to list the roles by get method.\n   * @description This method is used to list the roles by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('roles')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getRoles(@Query() params: MasterPayload): Promise {\n    return this.masterService.getRoles(params);\n  }\n\n  /**\n   * Description: This method is used to list the categories by get method.\n   * @description This method is used to list the categories by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('category')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getCategories(@Query() params: MasterPayload): Promise {\n    return this.masterService.getCategories(params);\n  }\n\n  /**\n   * Description: This method is used to list the biolabs sources by get method.\n   * @description This method is used to list the biolabs sources by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('biolabs-source')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getBiolabsSource(@Query() params: MasterPayload): Promise {\n    return this.masterService.getBiolabsSource(params);\n  }\n\n  /**\n   * Description: This method is used to list the fundings by get method.\n   * @description This method is used to list the fundings by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('fundings')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getFundings(@Query() params: MasterPayload): Promise {\n    return this.masterService.getFundings(params);\n  }\n\n  /**\n   * Description: This method is used to list the modalities by get method.\n   * @description This method is used to list the modalities by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('modality')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getModalities(@Query() params: MasterPayload): Promise {\n    return this.masterService.getModalities(params);\n  }\n\n  /**\n   * Description: This method is used to list the technology stages by get method.\n   * @description This method is used to list the technology stages by get method.\n   * @param payload it is a request query expects the payload of type MasterPayload.\n   */\n  @Get('technology-stage')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getTechnologyStages(@Query() params: MasterPayload): Promise {\n    return this.masterService.getTechnologyStages(params);\n  }\n\n  /**\n   * Description: This method is used to list the company status.\n   * @description This method is used to list the company status.\n   */\n  @Get('company-status')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getCompanyStatus(): Promise {\n    return await this.masterService.getCompanyStatus();\n  }\n\n  /**\n   * Description: This method is used to list the user type.\n   * @description This method is used to list the user type.\n   */\n  @Get('user-types')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getUserTypes(): Promise {\n    return await this.masterService.getUserTypes();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MasterModule.html":{"url":"modules/MasterModule.html","title":"module - MasterModule","body":"\n                   \n\n\n\n\n    Modules\n    MasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MasterModule\n\n\n\ncluster_MasterModule_providers\n\n\n\ncluster_MasterModule_exports\n\n\n\n\nMasterService \n\nMasterService \n\n\n\nMasterModule\n\nMasterModule\n\nMasterService  -->\n\nMasterModule->MasterService \n\n\n\n\n\nMasterService\n\nMasterService\n\nMasterModule -->\n\nMasterService->MasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/master/master.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MasterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MasterController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MasterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BiolabsSource } from './biolabs-source.entity';\nimport { Category } from './category.entity';\nimport { Funding } from './funding.entity';\nimport { Modality } from './modality.entity';\nimport { Role } from './role.entity';\nimport { Site } from './site.entity';\nimport { TechnologyStage } from './technology-stage.entity';\nimport { MasterService } from './master.service';\nimport { MasterController } from './master.controller';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([BiolabsSource, Category, Funding, Modality, Role, Site, TechnologyStage]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),],\n  controllers: [MasterController],\n  providers: [MasterService],\n  exports: [PassportModule.register({ defaultStrategy: 'jwt' }), MasterService],\n})\nexport class MasterModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MasterPayload.html":{"url":"classes/MasterPayload.html","title":"class - MasterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MasterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/master.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                pagination\n                            \n                            \n                                q\n                            \n                            \n                                siteIdArr\n                            \n                            \n                                sort\n                            \n                            \n                                sortFiled\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, minimum: 1, maximum: 100})@IsNumber()@Min(1)@Max(100)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, minimum: 0})@IsNumber()@Min(0)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, minLength: 3, maxLength: 30})@MinLength(3)@MaxLength(30)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            siteIdArr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortFiled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/master.payload.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, Max, MaxLength, Min, MinLength } from 'class-validator';\n\nexport class MasterPayload {\n  @ApiProperty({\n    required: false,\n    minLength: 3,\n    maxLength: 30\n  })\n  @MinLength(3)\n  @MaxLength(30)\n  @IsOptional()\n  q: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  pagination: boolean;\n\n  @ApiProperty({\n    required: false,\n    minimum: 0\n  })\n  @IsNumber()\n  @Min(0)\n  @IsOptional()\n  page: number;\n\n  @ApiProperty({\n    required: false,\n    minimum: 1,\n    maximum: 100\n  })\n  @IsNumber()\n  @Min(1)\n  @Max(100)\n  @IsOptional()\n  limit: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  sort: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  sortFiled: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  siteIdArr: number[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Modality.html":{"url":"classes/Modality.html","title":"class - Modality","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Modality\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/modality.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'modalities',\n})\nexport class Modality {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ModalityFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModalityFillableFields.html":{"url":"classes/ModalityFillableFields.html","title":"class - ModalityFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModalityFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/modality.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/modality.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'modalities',\n})\nexport class Modality {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ModalityFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/order.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                modifiedAt\n                            \n                            \n                                    Optional\n                                orderProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Invoice[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            orderProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OrderProduct[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToMany, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\nimport { Invoice } from './invoice.entity';\nimport { OrderProduct } from './order-product.entity';\n\n@Entity({\n  name: 'order',\n})\nexport class Order {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @OneToMany(() => OrderProduct, (orderProduct) => orderProduct.order)\n  orderProducts?: OrderProduct[];\n\n  @Column({ nullable: true })\n  companyId: number;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  modifiedAt: Date;\n\n  @ManyToMany(type => Invoice, invoice => invoice.orders)\n  invoices: Invoice[];\n\n}\n\nexport class OrderFillableFields {\n  companyId: number;\n  invoiceId: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderFillableFields.html":{"url":"classes/OrderFillableFields.html","title":"class - OrderFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/order.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                invoiceId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoiceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToMany, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\nimport { Invoice } from './invoice.entity';\nimport { OrderProduct } from './order-product.entity';\n\n@Entity({\n  name: 'order',\n})\nexport class Order {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @OneToMany(() => OrderProduct, (orderProduct) => orderProduct.order)\n  orderProducts?: OrderProduct[];\n\n  @Column({ nullable: true })\n  companyId: number;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  modifiedAt: Date;\n\n  @ManyToMany(type => Invoice, invoice => invoice.orders)\n  invoices: Invoice[];\n\n}\n\nexport class OrderFillableFields {\n  companyId: number;\n  invoiceId: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProduct.html":{"url":"classes/OrderProduct.html","title":"class - OrderProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/order-product.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                createdAt\n                            \n                            \n                                currentCharge\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                order\n                            \n                            \n                                productDescription\n                            \n                            \n                                productName\n                            \n                            \n                                recurrence\n                            \n                            \n                                startDate\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCharge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamptz'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 510, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 510, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recurrence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamptz'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\nimport { Order } from './order.entity';\n\n@Entity({\n  name: 'order_product',\n})\nexport class OrderProduct {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => Order, (order) => order.orderProducts)\n  order?: Order;\n\n  @Column({ length: 510, nullable: true })\n  productName: string;\n\n  @Column({ length: 510, nullable: true })\n  productDescription: string;\n\n  @Column({ nullable: true })\n  cost: number;\n\n  @Column({ default: false })\n  recurrence: boolean;\n\n  @Column({ default: false })\n  currentCharge: boolean;\n\n  @Column({ type: 'timestamptz' })\n  startDate: Date;\n\n  @Column({ type: 'timestamptz' })\n  endDate: Date;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class OrderProductFillableFields {\n  productName: string;\n  cost: number;\n  recurrence: boolean;\n  currentCharge: boolean;\n  startDate: number;\n  endDate: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderProductController.html":{"url":"controllers/OrderProductController.html","title":"controller - OrderProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/order-product\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOrderProduct\n                            \n                            \n                                    Async\n                                deleteOrderProduct\n                            \n                            \n                                    Async\n                                fetchOrderProductsBetweenDates\n                            \n                            \n                                    Async\n                                updateOrderProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addOrderProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOrderProduct(payload: AddOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/order/order.controller.ts:22\n                \n            \n\n\n            \n                \n                    Description: This method is used to create a resident company order product details.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AddOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type AddOrderDto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOrderProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOrderProduct(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/order/order.controller.ts:59\n                \n            \n\n\n            \n                \n                    Description: This method is used to delete a resident company order product details .\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchOrderProductsBetweenDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrderProductsBetweenDates(startDate: Date, endDate: Date)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/order/order.controller.ts:47\n                \n            \n\n\n            \n                \n                    Description: This method is used to fetch a resident company order product details of given month and year.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOrderProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderProduct(id: number, payload: UpdateOrderProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/order/order.controller.ts:35\n                \n            \n\n\n            \n                \n                    Description: This method is used to update a resident company order product details.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    payload\n                                    \n                                                UpdateOrderProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type AddOrderDto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Put, Query } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AddOrderDto } from './dto/add-order.payload';\nimport { UpdateOrderProductDto } from './dto/order-product.update.dto';\nimport { OrderProductService } from './order.service';\n\n@Controller('api/order-product')\n@ApiTags('Resident Company Order Product')\nexport class OrderProductController {\n  constructor(\n    private readonly orderProductService: OrderProductService\n  ) { }\n\n  /**\n   * Description: This method is used to create a resident company order product details.\n   * @description This method is used to create a resident company order product details.\n   * @param payload it is a request body contains payload of type AddOrderDto.\n   */\n  @Post()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async addOrderProduct(@Body() payload: AddOrderDto): Promise {\n    const user = await this.orderProductService.addOrderProduct(payload);\n    return user;\n  }\n\n  /**\n   * Description: This method is used to update a resident company order product details.\n   * @description This method is used to update a resident company order product details.\n   * @param payload it is a request body contains payload of type AddOrderDto.\n   */\n  @Put(':id')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async updateOrderProduct(@Param('id') id: number, @Body() payload: UpdateOrderProductDto): Promise {\n    const user = await this.orderProductService.updateOrderProduct(id, payload);\n    return user;\n  }\n\n  /**\n  * Description: This method is used to fetch a resident company order product details of given month and year.\n  * @description This method is used to fetch a resident company order product details of given month and year.\n  */\n  @Get()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async fetchOrderProductsBetweenDates(@Query('startDate') startDate: Date, @Query('endDate') endDate: Date,): Promise {\n    const orderProducts = await this.orderProductService.fetchOrderProductsBetweenDates(startDate, endDate);\n    return orderProducts;\n  }\n\n  /**\n * Description: This method is used to delete a resident company order product details .\n * @description This method is used to delete a resident company order product details .\n */\n  @Delete(':id')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async deleteOrderProduct(@Param('id') id: number): Promise {\n    const orderProducts = await this.orderProductService.deleteOrderProduct(id);\n    return orderProducts;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderProductFillableFields.html":{"url":"classes/OrderProductFillableFields.html","title":"class - OrderProductFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderProductFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/order-product.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                currentCharge\n                            \n                            \n                                endDate\n                            \n                            \n                                productName\n                            \n                            \n                                recurrence\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCharge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recurrence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/order-product.entity.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\nimport { Order } from './order.entity';\n\n@Entity({\n  name: 'order_product',\n})\nexport class OrderProduct {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => Order, (order) => order.orderProducts)\n  order?: Order;\n\n  @Column({ length: 510, nullable: true })\n  productName: string;\n\n  @Column({ length: 510, nullable: true })\n  productDescription: string;\n\n  @Column({ nullable: true })\n  cost: number;\n\n  @Column({ default: false })\n  recurrence: boolean;\n\n  @Column({ default: false })\n  currentCharge: boolean;\n\n  @Column({ type: 'timestamptz' })\n  startDate: Date;\n\n  @Column({ type: 'timestamptz' })\n  endDate: Date;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class OrderProductFillableFields {\n  productName: string;\n  cost: number;\n  recurrence: boolean;\n  currentCharge: boolean;\n  startDate: number;\n  endDate: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderProductModule.html":{"url":"modules/OrderProductModule.html","title":"module - OrderProductModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderProductModule\n\n\n\ncluster_OrderProductModule_imports\n\n\n\ncluster_OrderProductModule_providers\n\n\n\ncluster_OrderProductModule_exports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nOrderProductModule\n\nOrderProductModule\n\nOrderProductModule -->\n\nConfigModule->OrderProductModule\n\n\n\n\n\nOrderProductService \n\nOrderProductService \n\nOrderProductService  -->\n\nOrderProductModule->OrderProductService \n\n\n\n\n\nOrderProductService\n\nOrderProductService\n\nOrderProductModule -->\n\nOrderProductService->OrderProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/order/order.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrderProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '../../config';\nimport { Invoice } from './model/invoice.entity';\nimport { OrderProduct } from './model/order-product.entity';\nimport { Order } from './model/order.entity';\nimport { OrderProductController } from './order.controller';\nimport { OrderProductService } from './order.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Order,\n      OrderProduct,\n      Invoice\n    ]),\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: () => {\n        return {\n          secret: process.env.APPSETTING_JWT_SECRET_KEY,\n          signOptions: {\n            ...(process.env.APPSETTING_JWT_EXPIRATION_TIME\n              ? {\n                expiresIn: Number(process.env.APPSETTING_JWT_EXPIRATION_TIME),\n              }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [OrderProductController],\n  exports: [OrderProductService],\n  providers: [OrderProductService],\n})\nexport class OrderProductModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderProductService.html":{"url":"injectables/OrderProductService.html","title":"injectable - OrderProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/order.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOrderProduct\n                            \n                            \n                                    Async\n                                deleteOrderProduct\n                            \n                            \n                                    Async\n                                fetchOrderProductsBetweenDates\n                            \n                            \n                                    Async\n                                updateOrderProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepository: Repository, orderProductRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/public/order/order.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderProductRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addOrderProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOrderProduct(payload: AddOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/order/order.service.ts:25\n                \n            \n\n\n            \n                \n                    Description: This method will create the new order product details.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AddOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of AddOrderDto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        saved order product object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOrderProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOrderProduct(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/order/order.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this is orderProduct Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchOrderProductsBetweenDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrderProductsBetweenDates(startDate: Date, endDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/order/order.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOrderProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderProduct(id: number, payload: UpdateOrderProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/order/order.service.ts:43\n                \n            \n\n\n            \n                \n                    Description: This method will create the new order product details.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    payload\n                                    \n                                                UpdateOrderProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of UpdateOrderProductDto.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        updated order product object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { LessThanOrEqual, MoreThanOrEqual, Repository } from 'typeorm';\nimport { AddOrderDto } from './dto/add-order.payload';\nimport { UpdateOrderProductDto } from './dto/order-product.update.dto';\nimport { OrderProduct } from './model/order-product.entity';\nimport { Order } from './model/order.entity';\n\n@Injectable()\nexport class OrderProductService {\n\n  constructor(\n    @InjectRepository(Order)\n    private readonly orderRepository: Repository,\n    @InjectRepository(OrderProduct)\n    private readonly orderProductRepository: Repository\n  ) { }\n\n  /**\n   * Description: This method will create the new order product details.\n   * @description This method will create the new order product details.\n   * @param payload object of AddOrderDto.\n   * @return saved order product object\n   */\n  async addOrderProduct(payload: AddOrderDto) {\n    let order: Order;\n    if (payload.orderId) {\n      payload.orderProducts['orderId'] = payload.orderId;\n      order = await this.orderRepository.findOne(payload.orderId);\n    } else {\n      order = this.orderRepository.create(payload);\n      await this.orderRepository.save(order);\n    }\n    return await this.orderProductRepository.save(this.orderProductRepository.create({ ...payload.orderProducts, order: order }));\n  }\n\n  /**\n   * Description: This method will create the new order product details.\n   * @description This method will create the new order product details.\n   * @param payload object of UpdateOrderProductDto.\n   * @return updated order product object\n   */\n  async updateOrderProduct(id: number, payload: UpdateOrderProductDto) {\n    const orderProduct = await this.orderProductRepository.findOne(id);\n    orderProduct.productName = payload.productName ? payload.productName : orderProduct.productName;\n    orderProduct.productDescription = payload.productDescription ? payload.productDescription : orderProduct.productDescription;\n    orderProduct.cost = payload.cost ? payload.cost : orderProduct.cost;\n    orderProduct.recurrence = payload.recurrence ? payload.recurrence : orderProduct.recurrence;\n    orderProduct.currentCharge = payload.currentCharge ? payload.currentCharge : orderProduct.currentCharge;\n    orderProduct.startDate = payload.startDate ? payload.startDate : orderProduct.startDate;\n    orderProduct.endDate = payload.endDate ? payload.endDate : orderProduct.endDate;\n    return await this.orderProductRepository.update(id, this.orderProductRepository.create(payload));\n  }\n\n  /**\n   * @description This method will fetch the order products between given start date and end date\n   * @param startDate \n   * @param endDate \n   * @returns \n   */\n  async fetchOrderProductsBetweenDates(startDate: Date, endDate: Date) {\n    let findArgs = {\n      where: {\n        startDate: MoreThanOrEqual(startDate),\n        endDate: LessThanOrEqual(endDate)\n      }\n    };\n    return this.orderProductRepository.find(\n      findArgs\n    );\n  }\n\n  /**\n   * @description This method will Delete the order products.\n   * @param id this is orderProduct Id\n   * @returns  \n   */\n  async deleteOrderProduct(id: number) {\n    return await this.orderProductRepository.delete(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordPayload.html":{"url":"classes/PasswordPayload.html","title":"class - PasswordPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/password.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/password.payload.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@SameAs('password')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/password.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/password.payload.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, MinLength } from 'class-validator';\n// import { SameAs } from 'modules/common/validator/same-as.validator';\nimport { SameAs } from '../../common/validator/same-as.validator';\n\n\nexport class PasswordPayload {\n\n  @ApiProperty({\n    required: true,\n  })\n  token: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(5)\n  password: string;\n\n  @ApiProperty({ required: true })\n  @SameAs('password')\n  passwordConfirmation: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordTransformer.html":{"url":"classes/PasswordTransformer.html","title":"class - PasswordTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/password.transformer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ValueTransformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            from\n                        \n                        \n                    \n                \n            \n            \n                \nfrom(value)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/password.transformer.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            to\n                        \n                        \n                    \n                \n            \n            \n                \nto(value)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/password.transformer.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValueTransformer } from 'typeorm';\nimport { Hash } from '../../../utils/Hash';\n\nexport class PasswordTransformer implements ValueTransformer {\n  to(value) {\n    if (value && value != \"\")\n      return Hash.make(value);\n    else\n      return value\n  }\n\n  from(value) {\n    return value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/product.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 510, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'product',\n})\nexport class Product {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 510, nullable: true })\n  name: string;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @Column({ nullable: true })\n  cost: number;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @Column({ nullable: false })\n  createdBy: number;\n\n}\n\nexport class ProductFillableFields {\n  name: string;\n  cost: number;\n  description: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductFillableFields.html":{"url":"classes/ProductFillableFields.html","title":"class - ProductFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/model/product.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/model/product.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'product',\n})\nexport class Product {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 510, nullable: true })\n  name: string;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @Column({ nullable: true })\n  cost: number;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @Column({ nullable: false })\n  createdBy: number;\n\n}\n\nexport class ProductFillableFields {\n  name: string;\n  cost: number;\n  description: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/auth/register.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                imageUrl\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                role\n                            \n                            \n                                site_id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsEmail()@Unique(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNotEmpty()@MinLength(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@SameAs('password')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/auth/register.payload.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsNumber, MinLength } from 'class-validator';\nimport  { Unique }  from   '../../common';\nimport { SameAs } from '../../common/validator/same-as.validator';\nimport { User } from '../user';\n\nexport class RegisterPayload {\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  @Unique([User])\n  email: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @IsNumber()\n  role: number;\n\n  @ApiProperty({\n    required: true,\n  })\n  site_id: number[];\n\n  @ApiProperty({\n    required: true,\n  })\n  firstName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  lastName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  title: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  phoneNumber: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true\n  })\n  imageUrl: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(5)\n  password: string;\n\n  @ApiProperty({ required: true })\n  @SameAs('password')\n  passwordConfirmation: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyAdvisory.html":{"url":"classes/ResidentCompanyAdvisory.html","title":"class - ResidentCompanyAdvisory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyAdvisory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-advisory.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                organization\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '0'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_advisory',\n})\nexport class ResidentCompanyAdvisory {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  companyId: number;\n\n  @Column({ length: 255, nullable: true })\n  name: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  organization: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyAdvisoryFillableFields {\n  id:number;\n  companyId: number;\n  name: string;\n  title: string;\n  organization: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyAdvisoryFillableFields.html":{"url":"classes/ResidentCompanyAdvisoryFillableFields.html","title":"class - ResidentCompanyAdvisoryFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyAdvisoryFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-advisory.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                organization\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-advisory.entity.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_advisory',\n})\nexport class ResidentCompanyAdvisory {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  companyId: number;\n\n  @Column({ length: 255, nullable: true })\n  name: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  organization: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyAdvisoryFillableFields {\n  id:number;\n  companyId: number;\n  name: string;\n  title: string;\n  organization: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResidentCompanyController.html":{"url":"controllers/ResidentCompanyController.html","title":"controller - ResidentCompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResidentCompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/resident-company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/resident-company\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addResidentCompany\n                            \n                            \n                                    Async\n                                getResidentCompanies\n                            \n                            \n                                    Async\n                                getResidentCompany\n                            \n                            \n                                    Async\n                                getResidentCompanyForSponsor\n                            \n                            \n                                    Async\n                                gloabalSearchCompanies\n                            \n                            \n                                    Async\n                                updateResidentCompany\n                            \n                            \n                                    Async\n                                updateResidentCompanyStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addResidentCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addResidentCompany(payload: AddResidentCompanyPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:25\n                \n            \n\n\n            \n                \n                    Description: This method is used to create a resident company.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AddResidentCompanyPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type AddResidentCompanyPayload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getResidentCompanies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResidentCompanies(params: any, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiHeader({name: 'x-site-id', description: 'Selected site ids array'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:47\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the resident companies by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getResidentCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResidentCompany(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get(':id')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:119\n                \n            \n\n\n            \n                \n                    Description: This method is used to get a resident company information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request parameter expect a number value of resident company id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getResidentCompanyForSponsor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResidentCompanyForSponsor()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/dashboard')@ApiResponse({status: 200, description: 'Successful Response'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:63\n                \n            \n\n\n            \n                \n                    Description: This method is used to get a resident company information for sponsor dashboard.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            gloabalSearchCompanies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gloabalSearchCompanies(params: SearchResidentCompanyPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get('/search')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:105\n                \n            \n\n\n            \n                \n                    Description: This method is used to global search for resident companies.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                SearchResidentCompanyPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateResidentCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateResidentCompany(payload: UpdateResidentCompanyPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Put()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:91\n                \n            \n\n\n            \n                \n                    Description: This method is used to upadte a resident company status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UpdateResidentCompanyPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type UpdateResidentCompanyStatusPayload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateResidentCompanyStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateResidentCompanyStatus(payload: UpdateResidentCompanyStatusPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Put('/update-status')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/resident-company/resident-company.controller.ts:77\n                \n            \n\n\n            \n                \n                    Description: This method is used to upadte a resident company status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UpdateResidentCompanyStatusPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type UpdateResidentCompanyStatusPayload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Param, Post, Body, Query, Put, Request } from '@nestjs/common';\nimport { ApiResponse, ApiTags, ApiBearerAuth, ApiHeader } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ResidentCompanyService } from '.';\nimport { AddResidentCompanyPayload } from './add-resident-company.payload';\nimport { UpdateResidentCompanyStatusPayload } from './update-resident-company-status.payload';\nimport { UpdateResidentCompanyPayload } from './update-resident-company.payload';\nimport { SearchResidentCompanyPayload } from './search-resident-company.payload';\n\n@Controller('api/resident-company')\n@ApiTags('Resident Company')\nexport class ResidentCompanyController {\n  constructor(\n    private readonly residentCompanyService: ResidentCompanyService\n  ) { }\n\n  /**\n   * Description: This method is used to create a resident company.\n   * @description This method is used to create a resident company.\n   * @param payload it is a request body contains payload of type AddResidentCompanyPayload.\n   */\n  @Post()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async addResidentCompany(@Body() payload: AddResidentCompanyPayload): Promise {\n    type status_enum = '-1' | '0' | '1' | '99';\n    const status: status_enum = '1';\n    const pal = { ...payload, status: status };\n    const user = await this.residentCompanyService.addResidentCompany(pal);\n    return user;\n  }\n\n  /**\n   * Description: This method is used to list the resident companies by get method.\n   * @description This method is used to list the resident companies by get method.\n   * @param payload it is a request query expects the payload of type ?any.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiHeader({\n    name: 'x-site-id',\n    description: 'Selected site ids array',\n  })\n  async getResidentCompanies(@Query() params: any, @Request() req): Promise {\n    let siteIdArr = req.user.site_id;\n    if (req.headers['x-site-id']) {\n      siteIdArr = JSON.parse(req.headers['x-site-id'].toString());\n    }\n    return this.residentCompanyService.getResidentCompanies(params, siteIdArr);\n  }\n\n  /**\n  * Description: This method is used to get a resident company information for sponsor dashboard.\n  * @description This method is used to get a resident company information  for sponsor dashboard.\n  * @param id it is a request parameter expect a number value of resident company id.\n  */\n\n  @Get('/dashboard')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  async getResidentCompanyForSponsor(): Promise {\n    return this.residentCompanyService.getResidentCompanyForSponsor();\n  }\n\n  /**\n   * Description: This method is used to upadte a resident company status.\n   * @description This method is used to update a resident company status.\n   * @param payload it is a request body contains payload of type UpdateResidentCompanyStatusPayload.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Put('/update-status')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async updateResidentCompanyStatus(@Body() payload: UpdateResidentCompanyStatusPayload): Promise {\n    return this.residentCompanyService.updateResidentCompanyStatus(payload);\n  }\n\n  /**\n   * Description: This method is used to upadte a resident company status.\n   * @description This method is used to update a resident company status.\n   * @param payload it is a request body contains payload of type UpdateResidentCompanyStatusPayload.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Put()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async updateResidentCompany(@Body() payload: UpdateResidentCompanyPayload): Promise {\n    return this.residentCompanyService.updateResidentCompany(payload);\n  }\n\n  /**\n   * Description: This method is used to global search for resident companies.\n   * @description This method is used to global search for resident companies.\n   * @param payload it is a request body contains payload of type UpdateResidentCompanyStatusPayload.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get('/search')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async gloabalSearchCompanies(@Query() params: SearchResidentCompanyPayload): Promise {\n    return this.residentCompanyService.gloabalSearchCompanies(params);\n  }\n\n  /**\n   * Description: This method is used to get a resident company information.\n   * @description This method is used to get a resident company information.\n   * @param id it is a request parameter expect a number value of resident company id.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get(':id')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getResidentCompany(@Param('id') id: number): Promise {\n    return this.residentCompanyService.getResidentCompany(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyDocuments.html":{"url":"classes/ResidentCompanyDocuments.html","title":"class - ResidentCompanyDocuments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyDocuments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-documents.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company_id\n                            \n                            \n                                createdAt\n                            \n                            \n                                doc_type\n                            \n                            \n                                id\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {array: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '0'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_documents',\n})\nexport class ResidentCompanyDocuments {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  company_id: number;\n\n  @Column(\"int\", { array: true })\n  doc_type: string;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255 })\n  link: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyDocumentsFillableFields {\n  id:number;\n  email: string;\n  company_id: number;\n  doc_type: string;\n  name: string;\n  link: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyDocumentsFillableFields.html":{"url":"classes/ResidentCompanyDocumentsFillableFields.html","title":"class - ResidentCompanyDocumentsFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyDocumentsFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-documents.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company_id\n                            \n                            \n                                doc_type\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-documents.entity.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_documents',\n})\nexport class ResidentCompanyDocuments {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  company_id: number;\n\n  @Column(\"int\", { array: true })\n  doc_type: string;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255 })\n  link: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyDocumentsFillableFields {\n  id:number;\n  email: string;\n  company_id: number;\n  doc_type: string;\n  name: string;\n  link: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyFillableFields.html":{"url":"classes/ResidentCompanyFillableFields.html","title":"class - ResidentCompanyFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/resident-company.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                academiaPartnershipDetails\n                            \n                            \n                                academiaPartnerships\n                            \n                            \n                                affiliatedInstitution\n                            \n                            \n                                bioLabsAssistanceNeeded\n                            \n                            \n                                biolabsSources\n                            \n                            \n                                companyName\n                            \n                            \n                                companyOnboardingStatus\n                            \n                            \n                                companySize\n                            \n                            \n                                companyStage\n                            \n                            \n                                companyStatus\n                            \n                            \n                                companyVisibility\n                            \n                            \n                                elevatorPitch\n                            \n                            \n                                email\n                            \n                            \n                                empExpect12Months\n                            \n                            \n                                equipmentOnsite\n                            \n                            \n                                expect12MonthsUtilizeLab\n                            \n                            \n                                foundedPlace\n                            \n                            \n                                foundersBusinessIndustryBefore\n                            \n                            \n                                foundersBusinessIndustryName\n                            \n                            \n                                funding\n                            \n                            \n                                fundingSource\n                            \n                            \n                                industry\n                            \n                            \n                                industryPartnerships\n                            \n                            \n                                industryPartnershipsDetails\n                            \n                            \n                                intellectualProperty\n                            \n                            \n                                isAffiliated\n                            \n                            \n                                logoImgUrl\n                            \n                            \n                                logoOnLicensedSpace\n                            \n                            \n                                logoOnWall\n                            \n                            \n                                modality\n                            \n                            \n                                name\n                            \n                            \n                                newsletters\n                            \n                            \n                                noOfFullEmp\n                            \n                            \n                                otherBiolabsSources\n                            \n                            \n                                otherCompanyStage\n                            \n                            \n                                otherFundingSource\n                            \n                            \n                                otherIndustries\n                            \n                            \n                                otherIntellectualProperty\n                            \n                            \n                                otherModality\n                            \n                            \n                                patentsFiledGranted\n                            \n                            \n                                patentsFiledGrantedDetails\n                            \n                            \n                                pitchdeck\n                            \n                            \n                                preferredMoveIn\n                            \n                            \n                                rAndDPath\n                            \n                            \n                                shareYourProfile\n                            \n                            \n                                site\n                            \n                            \n                                startDate\n                            \n                            \n                                status\n                            \n                            \n                                technology\n                            \n                            \n                                technologyPapersPublished\n                            \n                            \n                                technologyPapersPublishedLink\n                            \n                            \n                                technologyPapersPublishedLinkCount\n                            \n                            \n                                utilizeLab\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            academiaPartnershipDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:237\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            academiaPartnerships\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:236\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            affiliatedInstitution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bioLabsAssistanceNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:230\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            biolabsSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:196\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyOnboardingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companySize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:203\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:205\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         company_status\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elevatorPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:194\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            empExpect12Months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:215\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equipmentOnsite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:242\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expect12MonthsUtilizeLab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:217\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            foundedPlace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:204\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            foundersBusinessIndustryBefore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:235\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            foundersBusinessIndustryName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:244\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            funding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:207\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:208\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:218\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industryPartnerships\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:238\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industryPartnershipsDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:239\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intellectualProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:210\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAffiliated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoImgUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:246\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoOnLicensedSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:229\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoOnWall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:228\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:220\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:195\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newsletters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:240\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noOfFullEmp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:214\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherBiolabsSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherCompanyStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:206\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherFundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:209\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherIndustries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:219\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherIntellectualProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:211\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherModality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patentsFiledGranted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:233\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patentsFiledGrantedDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:234\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchdeck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:245\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preferredMoveIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rAndDPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shareYourProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:241\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:197\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:202\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:223\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technology\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:200\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologyPapersPublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:231\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologyPapersPublishedLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologyPapersPublishedLinkCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:247\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utilizeLab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:216\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company.entity.ts:243\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\n/**\n * -1 = De-active\n * 0 = \n * 1 = Default/ Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\ntype company_status = '0' | '1' | '2' | '3' | '4' | '5';\n\n@Entity({\n  name: 'resident_companies',\n})\nexport class ResidentCompany {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 510, nullable: true })\n  email: string;\n\n  @Column({ length: 510, nullable: true })\n  name: string;\n\n  @Column({ length: 510, nullable: true })\n  companyName: string;\n\n  @Column(\"int\", { array: true, nullable: true })\n  site: number[];\n\n  @Column({ nullable: true })\n  biolabsSources: number;\n\n  @Column({ length: 510, nullable: true })\n  otherBiolabsSources: string;\n\n  @Column({ nullable: true })\n  technology: string;\n\n  @Column({ nullable: true })\n  rAndDPath: string;\n\n  @Column({ nullable: true })\n  startDate: number;\n\n  @Column({ nullable: true })\n  companySize: number;\n\n  @Column({ length: 100, nullable: true })\n  foundedPlace: string;\n\n  @Column({ nullable: true })\n  companyStage: number;\n\n  @Column({ length: 510, nullable: true })\n  otherCompanyStage: string;\n\n  @Column({ length: 510, nullable: true })\n  funding: string;\n\n  @Column(\"int\", { array: true, nullable: true })\n  fundingSource: number[];\n\n  @Column({ length: 510, nullable: true })\n  otherFundingSource: string;\n\n  @Column({ nullable: true })\n  intellectualProperty: number;\n\n  @Column({ length: 510, nullable: true })\n  otherIntellectualProperty: string;\n\n  @Column({ nullable: true })\n  isAffiliated: boolean;\n\n  @Column({ length: 510, nullable: true })\n  affiliatedInstitution: string;\n\n  @Column({ nullable: true })\n  noOfFullEmp: number;\n\n  @Column({ nullable: true })\n  empExpect12Months: number;\n\n  @Column({ nullable: true })\n  utilizeLab: number;\n\n  @Column({ nullable: true })\n  expect12MonthsUtilizeLab: number;\n\n  @Column(\"int\", { array: true })\n  industry: string[];\n\n  @Column(\"json\", { default: null })\n  otherIndustries: any;\n\n  @Column(\"int\", { array: true })\n  modality: string[];\n\n  @Column(\"json\", { default: null })\n  otherModality: any;\n\n  @Column(\"int\", { nullable: true, default: null })\n  preferredMoveIn: number;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '1' })\n  status: status_enum;\n\n  @Column({ length: 255, enum: ['0', '1', '2', '3', '4', '5'], default: '0' })\n  companyStatus: company_status;\n\n  @Column({ default: false })\n  companyVisibility: boolean;\n\n  @Column({ default: false })\n  companyOnboardingStatus: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  elevatorPitch: string;\n\n  @Column({ default: null })\n  logoOnWall: boolean;\n\n  @Column({ default: null })\n  logoOnLicensedSpace: boolean;\n\n  @Column({ length: 500, default: null })\n  bioLabsAssistanceNeeded: string;\n\n  @Column({ default: null })\n  technologyPapersPublished: boolean;\n\n  \n  @Column({ default: null })\n  technologyPapersPublishedLinkCount: number;\n\n  @Column({ length: 100, default: null })\n  technologyPapersPublishedLink: string;\n\n  @Column({ default: null })\n  patentsFiledGranted: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  patentsFiledGrantedDetails: string;\n\n  @Column({ default: null })\n  foundersBusinessIndustryBefore: boolean;\n\n  @Column({ default: null })\n  academiaPartnerships: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  academiaPartnershipDetails: string;\n\n  @Column({ default: null })\n  industryPartnerships: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  industryPartnershipsDetails: string;\n\n  @Column({ default: null })\n  newsletters: boolean;\n\n  @Column({ default: null })\n  shareYourProfile: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  equipmentOnsite: string;\n\n  @Column({ length: 510, default: null, nullable: true })\n  website: string;\n\n  @Column({ length: 110, default: null, nullable: true })\n  foundersBusinessIndustryName:string;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n\n  @Column({ length: 255, nullable: true })\n  pitchdeck: string;\n\n  @Column({ length: 255, nullable: true })\n  logoImgUrl: string;\n\n}\n\nexport class ResidentCompanyFillableFields {\n  email: string;\n  name: string;\n  companyName: string;\n  site: number[];\n  biolabsSources: number;\n  otherBiolabsSources: string;\n  technology: string;\n  rAndDPath: string;\n  startDate: number;\n  companySize: number;\n  foundedPlace: string;\n  companyStage: number;\n  otherCompanyStage: string;\n  funding: string;\n  fundingSource: number;\n  otherFundingSource: string;\n  intellectualProperty: number;\n  otherIntellectualProperty: string;\n  isAffiliated: boolean;\n  affiliatedInstitution: string;\n  noOfFullEmp: number;\n  empExpect12Months: number;\n  utilizeLab: number;\n  expect12MonthsUtilizeLab: number;\n  industry: string[];\n  otherIndustries: any;\n  modality: string[];\n  otherModality: any;\n  preferredMoveIn: number;\n  status: status_enum;\n  companyStatus: company_status;\n  companyVisibility: boolean;\n  companyOnboardingStatus: boolean;\n  elevatorPitch: string;\n  logoOnWall: boolean;\n  logoOnLicensedSpace: boolean;\n  bioLabsAssistanceNeeded: string;\n  technologyPapersPublished: boolean;\n  technologyPapersPublishedLink: string;\n  patentsFiledGranted: boolean;\n  patentsFiledGrantedDetails: string;\n  foundersBusinessIndustryBefore: boolean;\n  academiaPartnerships: boolean;\n  academiaPartnershipDetails: string;\n  industryPartnerships: boolean;\n  industryPartnershipsDetails: string;\n  newsletters: boolean;\n  shareYourProfile: boolean;\n  equipmentOnsite: string;\n  website: string;\n  foundersBusinessIndustryName: string;\n  pitchdeck : string;\n  logoImgUrl : string;\n  technologyPapersPublishedLinkCount : number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyHistoryFillableFields.html":{"url":"classes/ResidentCompanyHistoryFillableFields.html","title":"class - ResidentCompanyHistoryFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyHistoryFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/resident-company-history.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                academiaPartnershipDetails\n                            \n                            \n                                academiaPartnerships\n                            \n                            \n                                affiliatedInstitution\n                            \n                            \n                                bioLabsAssistanceNeeded\n                            \n                            \n                                biolabsSources\n                            \n                            \n                                companyName\n                            \n                            \n                                companyOnboardingStatus\n                            \n                            \n                                companySize\n                            \n                            \n                                companyStage\n                            \n                            \n                                companyStatus\n                            \n                            \n                                companyVisibility\n                            \n                            \n                                elevatorPitch\n                            \n                            \n                                email\n                            \n                            \n                                empExpect12Months\n                            \n                            \n                                equipmentOnsite\n                            \n                            \n                                expect12MonthsUtilizeLab\n                            \n                            \n                                foundedDate\n                            \n                            \n                                foundersBusinessIndustryBefore\n                            \n                            \n                                funding\n                            \n                            \n                                fundingSource\n                            \n                            \n                                industry\n                            \n                            \n                                industryPartnerships\n                            \n                            \n                                industryPartnershipsDetails\n                            \n                            \n                                intellectualProperty\n                            \n                            \n                                isAffiliated\n                            \n                            \n                                logoOnLicensedSpace\n                            \n                            \n                                logoOnWall\n                            \n                            \n                                modality\n                            \n                            \n                                name\n                            \n                            \n                                newsletters\n                            \n                            \n                                noOfFullEmp\n                            \n                            \n                                otherBiolabsSources\n                            \n                            \n                                otherCompanyStage\n                            \n                            \n                                otherFundingSource\n                            \n                            \n                                otherIndustries\n                            \n                            \n                                otherIntellectualProperty\n                            \n                            \n                                otherModality\n                            \n                            \n                                patentsFiledGranted\n                            \n                            \n                                patentsFiledGrantedDetails\n                            \n                            \n                                preferredMoveIn\n                            \n                            \n                                rAndDPath\n                            \n                            \n                                shareYourProfile\n                            \n                            \n                                site\n                            \n                            \n                                startDate\n                            \n                            \n                                status\n                            \n                            \n                                technology\n                            \n                            \n                                technologyPapersPublished\n                            \n                            \n                                utilizeLab\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            academiaPartnershipDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:223\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            academiaPartnerships\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            affiliatedInstitution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:200\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bioLabsAssistanceNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:217\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            biolabsSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:184\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyOnboardingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companySize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:229\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         company_status\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:211\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elevatorPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:214\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:182\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            empExpect12Months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:202\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equipmentOnsite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:228\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expect12MonthsUtilizeLab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:204\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            foundedDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:191\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            foundersBusinessIndustryBefore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            funding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:194\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:195\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:205\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industryPartnerships\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:224\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industryPartnershipsDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intellectualProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:197\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAffiliated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoOnLicensedSpace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:216\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logoOnWall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:215\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:207\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:183\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newsletters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noOfFullEmp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherBiolabsSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherCompanyStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:193\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherFundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:196\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherIndustries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:206\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherIntellectualProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otherModality\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:208\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patentsFiledGranted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:219\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patentsFiledGrantedDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:220\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preferredMoveIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:209\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rAndDPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:189\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shareYourProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:185\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:190\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:210\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technology\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            technologyPapersPublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:218\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            utilizeLab\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/resident-company-history.entity.ts:203\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n// import { Site } from '../master/site.entity';\n// import { Category } from '../master/category.entity';\n// import { Funding } from '../master/funding.entity';\n// import { BiolabsSource } from '../master/biolabs-source.entity';\n// import { Modality } from '../master/modality.entity';\n// import { TechnologyStage } from '../master/technology-stage.entity';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\ntype company_status = '0' | '1' | '2' | '3' | '4' | '5';\n\n@Entity({\n  name: 'resident_company_history',\n})\nexport class ResidentCompanyHistory {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"int\", { default: null, nullable: true })\n  comnpanyId: number;\n\n  @Column({ length: 510, nullable: true })\n  email: string;\n\n  @Column({ length: 510, nullable: true })\n  name: string;\n\n  @Column({ length: 510, nullable: true })\n  companyName: string;\n\n  @Column(\"int\", { array: true, nullable: true })\n  site: number[];\n\n  @Column({ nullable: true })\n  biolabsSources: number;\n\n  @Column({ length: 510, nullable: true })\n  otherBiolabsSources: string;\n\n  @Column({ nullable: true })\n  technology: string;\n\n  @Column({ nullable: true })\n  rAndDPath: string;\n\n  @Column({ nullable: true })\n  startDate: number;\n\n  @Column({ nullable: true })\n  companySize: number;\n\n  @Column({ length: 100, nullable: true })\n  foundedPlace: string;\n\n  @Column({ nullable: true })\n  companyStage: number;\n\n  @Column({ length: 510, nullable: true })\n  otherCompanyStage: string;\n\n  @Column({ length: 510, nullable: true })\n  funding: string;\n\n  @Column(\"int\", { array: true, nullable: true })\n  fundingSource: number[];\n\n  @Column({ length: 510, nullable: true })\n  otherFundingSource: string;\n\n  @Column({ length: 510, nullable: true })\n  intellectualProperty: string;\n\n  @Column({ length: 510, nullable: true })\n  otherIntellectualProperty: string;\n\n  @Column({ nullable: true })\n  isAffiliated: boolean;\n\n  @Column({ length: 510, nullable: true })\n  affiliatedInstitution: string;\n\n  @Column({ nullable: true })\n  noOfFullEmp: number;\n\n  @Column({ nullable: true })\n  empExpect12Months: number;\n\n  @Column({ nullable: true })\n  utilizeLab: number;\n\n  @Column({ nullable: true })\n  expect12MonthsUtilizeLab: number;\n\n  @Column(\"int\", { array: true })\n  industry: string[];\n\n  @Column(\"json\", { default: null })\n  otherIndustries: any;\n\n  @Column(\"int\", { array: true })\n  modality: string[];\n\n  @Column(\"json\", { default: null })\n  otherModality: any;\n\n  @Column(\"int\", { nullable: true, default: null })\n  preferredMoveIn: number;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @Column({ length: 255, enum: ['0', '1', '2', '3', '4', '5'], default: '0' })\n  companyStatus: company_status;\n\n  @Column({ default: false })\n  companyVisibility: boolean;\n\n  @Column({ default: false })\n  companyOnboardingStatus: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  elevatorPitch: string;\n\n  @Column({ default: null })\n  logoOnWall: boolean;\n\n  @Column({ default: null })\n  logoOnLicensedSpace: boolean;\n\n  @Column({ default: null })\n  bioLabsAssistanceNeeded: boolean;\n\n  @Column({ default: null })\n  technologyPapersPublished: boolean;\n\n  @Column({ default: null })\n  patentsFiledGranted: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  patentsFiledGrantedDetails: string;\n\n  @Column({ default: null })\n  foundersBusinessIndustryBefore: boolean;\n\n  @Column({ default: null })\n  academiaPartnerships: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  academiaPartnershipDetails: string;\n\n  @Column({ default: null })\n  industryPartnerships: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  industryPartnershipsDetails: string;\n\n  @Column({ default: null })\n  newsletters: boolean;\n\n  @Column({ default: null })\n  shareYourProfile: boolean;\n\n  @Column({ length: 510, default: null, nullable: true })\n  equipmentOnsite: string;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyHistoryFillableFields {\n  email: string;\n  name: string;\n  companyName: string;\n  site: number[];\n  biolabsSources: number;\n  otherBiolabsSources: string;\n  technology: string;\n  rAndDPath: string;\n  startDate: number;\n  foundedDate: number;\n  companyStage: number;\n  otherCompanyStage: string;\n  funding: string;\n  fundingSource: number;\n  otherFundingSource: string;\n  intellectualProperty: string;\n  otherIntellectualProperty: string;\n  isAffiliated: boolean;\n  affiliatedInstitution: string;\n  noOfFullEmp: number;\n  empExpect12Months: number;\n  utilizeLab: number;\n  expect12MonthsUtilizeLab: number;\n  industry: string[];\n  otherIndustries: any;\n  modality: string[];\n  otherModality: any;\n  preferredMoveIn: number;\n  status: status_enum;\n  companyStatus: company_status;\n  companyVisibility: boolean;\n  companyOnboardingStatus: boolean;\n  elevatorPitch: string;\n  logoOnWall: boolean;\n  logoOnLicensedSpace: boolean;\n  bioLabsAssistanceNeeded: boolean;\n  technologyPapersPublished: boolean;\n  patentsFiledGranted: boolean;\n  patentsFiledGrantedDetails: string;\n  foundersBusinessIndustryBefore: boolean;\n  academiaPartnerships: boolean;\n  academiaPartnershipDetails: string;\n  industryPartnerships: boolean;\n  industryPartnershipsDetails: string;\n  newsletters: boolean;\n  shareYourProfile: boolean;\n  equipmentOnsite: string;\n  companySize: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyManagement.html":{"url":"classes/ResidentCompanyManagement.html","title":"class - ResidentCompanyManagement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyManagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-management.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                academicAffiliation\n                            \n                            \n                                companyId\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                invoicingExecutivePOC\n                            \n                            \n                                joiningAsMember\n                            \n                            \n                                laboratoryExecutivePOC\n                            \n                            \n                                linkedinLink\n                            \n                            \n                                mainExecutivePOC\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                publications\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            academicAffiliation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoicingExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joiningAsMember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            laboratoryExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            linkedinLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 20, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '0'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_management',\n})\nexport class ResidentCompanyManagement {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  companyId: number;\n\n  @Column({ length: 255, nullable: true })\n  name: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  email: string;\n\n  @Column({ length: 20, nullable: true })\n  phone: string;\n\n  @Column({ length: 255, nullable: true })\n  linkedinLink: string;\n\n  @Column({ length: 255, nullable: true })\n  publications: string;\n\n  @Column({ length: 255, nullable: true })\n  academicAffiliation: string;\n\n  @Column({ default: false, nullable: true })\n  joiningAsMember: boolean;\n\n  @Column({ nullable: true })\n  mainExecutivePOC: boolean;\n\n  @Column({ nullable: true })\n  laboratoryExecutivePOC: boolean;\n\n  @Column({ nullable: true })\n  invoicingExecutivePOC: boolean;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyManagementFillableFields {\n  id:number;\n  companyId: number;\n  name: string;\n  title: string;\n  email: string;\n  phone: string;\n  linkedinLink: string;\n  publications: string;\n  academicAffiliation: string;\n  joiningAsMember: boolean;\n  mainExecutivePOC: boolean;\n  laboratoryExecutivePOC: boolean;\n  invoicingExecutivePOC: boolean;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyManagementFillableFields.html":{"url":"classes/ResidentCompanyManagementFillableFields.html","title":"class - ResidentCompanyManagementFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyManagementFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-management.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                academicAffiliation\n                            \n                            \n                                companyId\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                invoicingExecutivePOC\n                            \n                            \n                                joiningAsMember\n                            \n                            \n                                laboratoryExecutivePOC\n                            \n                            \n                                linkedinLink\n                            \n                            \n                                mainExecutivePOC\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                publications\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            academicAffiliation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoicingExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joiningAsMember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            laboratoryExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            linkedinLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-management.entity.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_management',\n})\nexport class ResidentCompanyManagement {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  companyId: number;\n\n  @Column({ length: 255, nullable: true })\n  name: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  email: string;\n\n  @Column({ length: 20, nullable: true })\n  phone: string;\n\n  @Column({ length: 255, nullable: true })\n  linkedinLink: string;\n\n  @Column({ length: 255, nullable: true })\n  publications: string;\n\n  @Column({ length: 255, nullable: true })\n  academicAffiliation: string;\n\n  @Column({ default: false, nullable: true })\n  joiningAsMember: boolean;\n\n  @Column({ nullable: true })\n  mainExecutivePOC: boolean;\n\n  @Column({ nullable: true })\n  laboratoryExecutivePOC: boolean;\n\n  @Column({ nullable: true })\n  invoicingExecutivePOC: boolean;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyManagementFillableFields {\n  id:number;\n  companyId: number;\n  name: string;\n  title: string;\n  email: string;\n  phone: string;\n  linkedinLink: string;\n  publications: string;\n  academicAffiliation: string;\n  joiningAsMember: boolean;\n  mainExecutivePOC: boolean;\n  laboratoryExecutivePOC: boolean;\n  invoicingExecutivePOC: boolean;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResidentCompanyModule.html":{"url":"modules/ResidentCompanyModule.html","title":"module - ResidentCompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    ResidentCompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResidentCompanyModule\n\n\n\ncluster_ResidentCompanyModule_providers\n\n\n\ncluster_ResidentCompanyModule_exports\n\n\n\ncluster_ResidentCompanyModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\nResidentCompanyModule -->\n\nConfigModule->ResidentCompanyModule\n\n\n\n\n\nResidentCompanyService \n\nResidentCompanyService \n\nResidentCompanyService  -->\n\nResidentCompanyModule->ResidentCompanyService \n\n\n\n\n\nResidentCompanyService\n\nResidentCompanyService\n\nResidentCompanyModule -->\n\nResidentCompanyService->ResidentCompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/resident-company/resident-company.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResidentCompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResidentCompanyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResidentCompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '../../config';\nimport { ResidentCompany } from './resident-company.entity';\nimport { ResidentCompanyAdvisory } from './rc-advisory.entity';\nimport { ResidentCompanyDocuments } from './rc-documents.entity';\nimport { ResidentCompanyManagement } from './rc-management.entity';\nimport { ResidentCompanyTechnical } from './rc-technical.entity';\n\nimport { Site } from '../master/site.entity';\nimport { Category } from '../master/category.entity';\nimport { Funding } from '../master/funding.entity';\nimport { BiolabsSource } from '../master/biolabs-source.entity';\nimport { Modality } from '../master/modality.entity';\nimport { TechnologyStage } from '../master/technology-stage.entity';\n\nimport { ResidentCompanyService } from './resident-company.service';\nimport { ResidentCompanyController } from './resident-company.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { ResidentCompanyHistory } from './resident-company-history.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      ResidentCompany,\n      ResidentCompanyHistory,\n      ResidentCompanyAdvisory,\n      ResidentCompanyDocuments,\n      ResidentCompanyManagement,\n      ResidentCompanyTechnical,\n      BiolabsSource,\n      Category,\n      Funding,\n      Modality,\n      Site,\n      TechnologyStage,\n    ]),\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: () => {\n        return {\n          secret: process.env.APPSETTING_JWT_SECRET_KEY,\n          signOptions: {\n            ...(process.env.APPSETTING_JWT_EXPIRATION_TIME\n              ? {\n                expiresIn: Number(process.env.APPSETTING_JWT_EXPIRATION_TIME),\n              }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [ResidentCompanyController],\n  exports: [ResidentCompanyService],\n  providers: [ResidentCompanyService],\n})\nexport class ResidentCompanyModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyTechnical.html":{"url":"classes/ResidentCompanyTechnical.html","title":"class - ResidentCompanyTechnical","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyTechnical\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-technical.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                emergencyExecutivePOC\n                            \n                            \n                                id\n                            \n                            \n                                invoicingExecutivePOC\n                            \n                            \n                                joiningAsMember\n                            \n                            \n                                laboratoryExecutivePOC\n                            \n                            \n                                linkedinLink\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                publications\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emergencyExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoicingExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joiningAsMember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            laboratoryExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            linkedinLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 20, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 20, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '0'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_technical',\n})\nexport class ResidentCompanyTechnical {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  companyId: number;\n\n  @Column({ length: 255, nullable: true })\n  name: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  email: string;\n\n  @Column({ length: 20, nullable: true })\n  phone: string;\n\n  @Column({ length: 20, nullable: true })\n  linkedinLink: string;\n\n  @Column({ length: 255, nullable: true })\n  publications: string;\n\n  @Column({ default: false, nullable: true })\n  joiningAsMember: boolean;\n\n  @Column({ nullable: true })\n  emergencyExecutivePOC: boolean;\n\n  @Column({  nullable: true })\n  laboratoryExecutivePOC: boolean;\n\n  @Column({  nullable: true })\n  invoicingExecutivePOC: boolean;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyTechnicalFillableFields {\n  id:number;\n  companyId: number;\n  name: string;\n  title: string;\n  email: string;\n  phone: string;\n  linkedinLink: string;\n  publications: string;\n  joiningAsMember: boolean;\n  mainExecutivePOC: boolean;\n  laboratoryExecutivePOC: boolean;\n  invoicingExecutivePOC: boolean;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidentCompanyTechnicalFillableFields.html":{"url":"classes/ResidentCompanyTechnicalFillableFields.html","title":"class - ResidentCompanyTechnicalFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidentCompanyTechnicalFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/rc-technical.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                invoicingExecutivePOC\n                            \n                            \n                                joiningAsMember\n                            \n                            \n                                laboratoryExecutivePOC\n                            \n                            \n                                linkedinLink\n                            \n                            \n                                mainExecutivePOC\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                publications\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoicingExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            joiningAsMember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            laboratoryExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            linkedinLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainExecutivePOC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/rc-technical.entity.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'resident_company_technical',\n})\nexport class ResidentCompanyTechnical {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  companyId: number;\n\n  @Column({ length: 255, nullable: true })\n  name: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  email: string;\n\n  @Column({ length: 20, nullable: true })\n  phone: string;\n\n  @Column({ length: 20, nullable: true })\n  linkedinLink: string;\n\n  @Column({ length: 255, nullable: true })\n  publications: string;\n\n  @Column({ default: false, nullable: true })\n  joiningAsMember: boolean;\n\n  @Column({ nullable: true })\n  emergencyExecutivePOC: boolean;\n\n  @Column({  nullable: true })\n  laboratoryExecutivePOC: boolean;\n\n  @Column({  nullable: true })\n  invoicingExecutivePOC: boolean;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class ResidentCompanyTechnicalFillableFields {\n  id:number;\n  companyId: number;\n  name: string;\n  title: string;\n  email: string;\n  phone: string;\n  linkedinLink: string;\n  publications: string;\n  joiningAsMember: boolean;\n  mainExecutivePOC: boolean;\n  laboratoryExecutivePOC: boolean;\n  invoicingExecutivePOC: boolean;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/role.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'roles',\n})\nexport class Role {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class RoleFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleFillableFields.html":{"url":"classes/RoleFillableFields.html","title":"class - RoleFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/role.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/role.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'roles',\n})\nexport class Role {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class RoleFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/scheduler/scheduler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(SchedulerService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/scheduler/scheduler.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\n// import { Cron } from '@nestjs/schedule';\n\n@Injectable()\nexport class SchedulerService {\n  private readonly logger = new Logger(SchedulerService.name);\n\n  // @Cron(process.env.APPSETTING_SCHEDULERTIME)\n  // createInvoice() {\n  //   this.logger.debug('Called when the current second is 45');\n  // }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchResidentCompanyPayload.html":{"url":"classes/SearchResidentCompanyPayload.html","title":"class - SearchResidentCompanyPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchResidentCompanyPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/search-resident-company.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyOnboardingStatus\n                            \n                            \n                                companyStatus\n                            \n                            \n                                companyVisibility\n                            \n                            \n                                fundingSource\n                            \n                            \n                                industries\n                            \n                            \n                                limit\n                            \n                            \n                                maxCompanySize\n                            \n                            \n                                maxFund\n                            \n                            \n                                minCompanySize\n                            \n                            \n                                minFund\n                            \n                            \n                                modalities\n                            \n                            \n                                page\n                            \n                            \n                                pagination\n                            \n                            \n                                q\n                            \n                            \n                                role\n                            \n                            \n                                siteIdArr\n                            \n                            \n                                sort\n                            \n                            \n                                sortFiled\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyOnboardingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         company_status\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fundingSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            industries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@ValidateIf(undefined)@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxCompanySize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@ValidateIf(undefined)@GreaterThanEqualsTo('minCompanySize')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxFund\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@ValidateIf(undefined)@GreaterThanEqualsTo('minFund')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minCompanySize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@ValidateIf(undefined)@LessThanEqualsTo('maxCompanySize')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minFund\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@ValidateIf(undefined)@LessThanEqualsTo('maxFund')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@ValidateIf(undefined)@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            siteIdArr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortFiled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@ValidateIf(undefined)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         sortOrderType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@ValidateIf(undefined)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/search-resident-company.payload.ts:122\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, Min, ValidateIf } from 'class-validator';\nimport { GreaterThanEqualsTo } from '../../common/validator/greater-than-equals-to.validator';\nimport { LessThanEqualsTo } from '../../common/validator/less-than-equals-to.validator';\n\ntype company_status = '0' | '1' | '2' | '3' | '4' | '5';\ntype sortOrderType = 'ASC' | 'DESC'\nexport class SearchResidentCompanyPayload {\n  @ApiProperty({\n    required: false,\n  })\n  q: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  role: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  pagination: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  @ValidateIf(o => o.pagination == 'true')\n  @Min(0)\n  page: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  @ValidateIf(o => o.pagination == 'true')\n  @Min(1)\n  limit: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyStatus: company_status;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyVisibility: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyOnboardingStatus: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  siteIdArr: number[];\n\n  @ApiProperty({\n    required: false,\n  })\n  industries: number[];\n\n  @ApiProperty({\n    required: false,\n  })\n  modalities: number[];\n\n  @ApiProperty({\n    required: false,\n  })\n  fundingSource: number[];\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf(o => typeof o.maxFund != 'undefined')\n  @LessThanEqualsTo('maxFund')\n  minFund: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf(o => typeof o.minFund != 'undefined')\n  @GreaterThanEqualsTo('minFund')\n  maxFund: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf(o => typeof o.maxCompanySize != 'undefined')\n  @LessThanEqualsTo('maxCompanySize')\n  minCompanySize: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsOptional()\n  @ValidateIf(o => typeof o.minCompanySize != 'undefined')\n  @GreaterThanEqualsTo('minCompanySize')\n  maxCompanySize: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  sort: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  @ValidateIf(o => o.sort == 'true')\n  @IsNotEmpty()\n  sortFiled: string;\n\n  @ApiProperty({\n    required: false,\n  })\n  @ValidateIf(o => o.sort == 'true')\n  @IsNotEmpty()\n  sortOrder: sortOrderType;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Site.html":{"url":"classes/Site.html","title":"class - Site","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Site\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/site.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'sites',\n})\nexport class Site {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class SiteFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SiteFillableFields.html":{"url":"classes/SiteFillableFields.html","title":"class - SiteFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SiteFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/site.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/site.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'sites',\n})\nexport class Site {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class SiteFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sponsor.html":{"url":"classes/Sponsor.html","title":"class - Sponsor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sponsor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/sponsor/entities/sponsor.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Sponsor {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SponsorController.html":{"url":"controllers/SponsorController.html","title":"controller - SponsorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SponsorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/sponsor/sponsor.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/sponsor\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                dashboardBySite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dashboard\n                        \n                        \n                    \n                \n            \n            \n                \ndashboard()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get('global-data')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/sponsor/sponsor.controller.ts:24\n                \n            \n\n\n            \n                \n                    Description: This method is used to show Dashboard data of sponsor.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dashboardBySite\n                        \n                        \n                    \n                \n            \n            \n                \ndashboardBySite()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get('site-data')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/sponsor/sponsor.controller.ts:38\n                \n            \n\n\n            \n                \n                    Description: This method is used to show Dashboard data of sponsor with site.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { SponsorService } from './sponsor.service';\nimport { ResidentCompanyService } from '../resident-company';\nimport { ApiResponse, ApiTags, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n\n@Controller('api/sponsor')\n@ApiTags('sponsor')\nexport class SponsorController {\n  constructor(private readonly sponsorService: SponsorService,\n    private readonly residentCompanyService: ResidentCompanyService) { }\n\n  /**\n   * Description: This method is used to show Dashboard data of sponsor.\n   * @description This method is used to show Dashboard data of sponsor.\n   * @param payload it is a request query expects the payload of type ?any.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get('global-data')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  dashboard() {\n    return this.residentCompanyService.getResidentCompanyForSponsor();\n  }\n\n  /**\n    * Description: This method is used to show Dashboard data of sponsor with site.\n    * @description This method is used to show Dashboard data of sponsor with site.\n    * @param payload it is a request query expects the payload of type ?any.\n    */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get('site-data')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  dashboardBySite() {\n    return this.residentCompanyService.getResidentCompanyForSponsorBySite();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SponsorModule.html":{"url":"modules/SponsorModule.html","title":"module - SponsorModule","body":"\n                   \n\n\n\n\n    Modules\n    SponsorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SponsorModule\n\n\n\ncluster_SponsorModule_imports\n\n\n\ncluster_SponsorModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nSponsorModule\n\nSponsorModule\n\nSponsorModule -->\n\nConfigModule->SponsorModule\n\n\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\nSponsorModule -->\n\nResidentCompanyModule->SponsorModule\n\n\n\n\n\nSponsorService\n\nSponsorService\n\nSponsorModule -->\n\nSponsorService->SponsorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/sponsor/sponsor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SponsorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SponsorController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            ResidentCompanyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SponsorService } from './sponsor.service';\nimport { SponsorController } from './sponsor.controller';\nimport { ConfigModule, ConfigService } from 'modules/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ResidentCompany, ResidentCompanyModule } from '../resident-company';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      ResidentCompany,\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: () => {\n        return {\n          secret: process.env.APPSETTING_JWT_SECRET_KEY,\n          signOptions: {\n            ...(process.env.APPSETTING_JWT_EXPIRATION_TIME\n              ? {\n                expiresIn: Number(process.env.APPSETTING_JWT_EXPIRATION_TIME),\n              }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ResidentCompanyModule,\n    ConfigModule,\n  ],\n  controllers: [SponsorController],\n  providers: [SponsorService]\n})\nexport class SponsorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SponsorService.html":{"url":"injectables/SponsorService.html","title":"injectable - SponsorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SponsorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/sponsor/sponsor.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SponsorService {\n\n  // getDashboardDetail() {\n  //   return `This action returns all sponsor`;\n  // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyStage.html":{"url":"classes/TechnologyStage.html","title":"class - TechnologyStage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyStage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/technology-stage.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('rowid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'technology_stages',\n})\nexport class TechnologyStage {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class TechnologyStageFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechnologyStageFillableFields.html":{"url":"classes/TechnologyStageFillableFields.html","title":"class - TechnologyStageFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechnologyStageFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/master/technology-stage.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/master/technology-stage.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'technology_stages',\n})\nexport class TechnologyStage {\n  @PrimaryGeneratedColumn('rowid')\n  id: number;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'] })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class TechnologyStageFillableFields {\n  name: string;\n  status: status_enum;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrimStringsPipe.html":{"url":"classes/TrimStringsPipe.html","title":"class - TrimStringsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrimStringsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/transformer/trim-strings.pipe.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractTransformPipe\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                except\n                            \n                            \n                                    Protected\n                                transformValue\n                            \n                            \n                                    Protected\n                                except\n                            \n                            \n                                    Private\n                                isObject\n                            \n                            \n                                transform\n                            \n                            \n                                    Private\n                                transformObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                transformValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            except\n                        \n                        \n                    \n                \n            \n            \n                \nexcept()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/trim-strings.pipe.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            transformValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/transformer/trim-strings.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            except\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    except()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractTransformPipe\n\n                \n            \n            \n                \n                        Defined in         AbstractTransformPipe:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isObject(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractTransformPipe\n\n                \n            \n            \n                \n                        Defined in         AbstractTransformPipe:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(values: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractTransformPipe\n\n                \n            \n            \n                \n                        Defined in         AbstractTransformPipe:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            transformObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformObject(values)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractTransformPipe\n\n                \n            \n            \n                \n                        Defined in         AbstractTransformPipe:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            transformValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transformValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractTransformPipe\n\n                \n            \n            \n                \n                        Defined in         AbstractTransformPipe:4\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractTransformPipe } from './abstract-transform.pipe';\n\nexport class TrimStringsPipe extends AbstractTransformPipe {\n  except() {\n    return ['password', 'passwordConfirmation'];\n  }\n\n  protected transformValue(value: any) {\n    return typeof value === 'string' ? value.trim() : value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UniqueValidationArguments.html":{"url":"interfaces/UniqueValidationArguments.html","title":"interface - UniqueValidationArguments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UniqueValidationArguments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/validator/unique.validator.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ValidationArguments\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        constraints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constraints\n                                    \n                                \n                                \n                                    \n                                        constraints:         UniqueValidationConstraints\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UniqueValidationConstraints\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { ValidatorConstraint, ValidatorConstraintInterface, ValidationArguments, ValidationOptions, registerDecorator } from 'class-validator';\n\n@Injectable()\n@ValidatorConstraint({ name: 'unique', async: true })\nexport class UniqueValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) { }\n\n  public async validate(value: string, args: UniqueValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n              [findCondition || args.property]: value,\n            },\n      }))  = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface UniqueValidationArguments extends ValidationArguments {\n  constraints: UniqueValidationConstraints;\n}\n\nexport function Unique(constraints: Partial>, validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints,\n      validator: UniqueValidator,\n    });\n  };\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniqueValidator.html":{"url":"injectables/UniqueValidator.html","title":"injectable - UniqueValidator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UniqueValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/common/validator/unique.validator.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/modules/common/validator/unique.validator.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/validator/unique.validator.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: UniqueValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/common/validator/unique.validator.ts:11\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                UniqueValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Connection, EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { ValidatorConstraint, ValidatorConstraintInterface, ValidationArguments, ValidationOptions, registerDecorator } from 'class-validator';\n\n@Injectable()\n@ValidatorConstraint({ name: 'unique', async: true })\nexport class UniqueValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) { }\n\n  public async validate(value: string, args: UniqueValidationArguments) {\n    const [EntityClass, findCondition = args.property] = args.constraints;\n    return (\n      (await this.connection.getRepository(EntityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n              [findCondition || args.property]: value,\n            },\n      }))  = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface UniqueValidationArguments extends ValidationArguments {\n  constraints: UniqueValidationConstraints;\n}\n\nexport function Unique(constraints: Partial>, validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints,\n      validator: UniqueValidator,\n    });\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderProductDto.html":{"url":"classes/UpdateOrderProductDto.html","title":"class - UpdateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/order/dto/order-product.update.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                currentCharge\n                            \n                            \n                                endDate\n                            \n                            \n                                productDescription\n                            \n                            \n                                productName\n                            \n                            \n                                recurrence\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCharge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recurrence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/order/dto/order-product.update.dto.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateOrderProductDto {\n\n  @ApiProperty({\n    required: true,\n  })\n  productName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  productDescription: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  cost: number;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  recurrence: boolean;\n\n  @ApiProperty({\n    required: false,\n    nullable: true,\n  })\n  currentCharge: boolean;\n\n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  startDate: Date;\n  \n  @ApiProperty({\n    required: true,\n    nullable: true,\n  })\n  endDate: Date;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResidentCompanyStatusPayload.html":{"url":"classes/UpdateResidentCompanyStatusPayload.html","title":"class - UpdateResidentCompanyStatusPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResidentCompanyStatusPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/resident-company/update-resident-company-status.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                companyOnboardingStatus\n                            \n                            \n                                companyStatus\n                            \n                            \n                                companyVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/update-resident-company-status.payload.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyOnboardingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/update-resident-company-status.payload.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         company_status\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/update-resident-company-status.payload.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/resident-company/update-resident-company-status.payload.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\ntype company_status = '0' | '1' | '2' | '3' | '4' | '5';\n\nexport class UpdateResidentCompanyStatusPayload {\n  @ApiProperty({\n    required: true,\n  })\n  companyId: number;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyStatus: company_status;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyVisibility: boolean;\n\n  @ApiProperty({\n    required: false,\n  })\n  companyOnboardingStatus: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSponsorDto.html":{"url":"classes/UpdateSponsorDto.html","title":"class - UpdateSponsorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSponsorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/sponsor/dto/update-sponsor.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSponsorDto } from './create-sponsor.dto';\n\nexport class UpdateSponsorDto extends PartialType(CreateSponsorDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPayload.html":{"url":"classes/UpdateUserPayload.html","title":"class - UpdateUserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/update-user.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                site_id\n                            \n                            \n                                title\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsNumber()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@SameAs('password')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user_type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/update-user.payload.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n// import { SameAs } from 'modules/common/validator/same-as.validator';\nimport { SameAs } from '../../common/validator/same-as.validator';\nimport { IsNumber, IsOptional } from 'class-validator';\n\ntype user_type = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7';\n\nexport class UpdateUserPayload {\n\n  @ApiProperty({\n    required: true,\n  })\n  userType: user_type;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  companyId: number;\n\n  @ApiProperty({\n    required: true,\n  })\n  firstName: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  lastName: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true\n  })\n  title: string;\n\n  @ApiProperty({\n    required: false,\n    nullable: true\n  })\n  phoneNumber: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  site_id: number[];\n\n  @ApiProperty({\n    required: false,\n  })\n  password: string;\n\n  @ApiProperty({ required: false })\n  @SameAs('password')\n  passwordConfirmation: string;\n\n  @ApiProperty({\n    required: true,\n  })\n  id: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadPayload.html":{"url":"classes/UploadPayload.html","title":"class - UploadPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/file/upload-file.payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                fileType\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/file/upload-file.payload.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FILE_TYPE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/file/upload-file.payload.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/file/upload-file.payload.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\ntype FILE_TYPE = 'user' | 'logo' | 'pitchdeck';\n\nexport class UploadPayload {\n  @ApiProperty({\n    required: false,\n  })\n  @IsNumber()\n  userId: Number;\n\n  @ApiProperty({\n    required: false,\n  })\n  @IsNumber()\n  companyId: Number;\n\n  @ApiProperty({\n    required: true,\n  })\n  fileType: FILE_TYPE;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                role\n                            \n                            \n                                site_id\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'password', length: 255, transformer: undefined, nullable: true, select: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('int', {array: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '0'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user_type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '0'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.entity.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\nimport { PasswordTransformer } from './password.transformer';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\ntype user_type = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7';\n\n@Entity({\n  name: 'users',\n})\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  role: number;\n\n  @Column(\"int\", { array: true, nullable: true })\n  site_id: number[];\n\n  @Column(\"int\", { nullable: true })\n  companyId: number;\n\n  @Column({ length: 255 })\n  email: string;\n\n  @Column({ length: 255 })\n  firstName: string;\n\n  @Column({ length: 255 })\n  lastName: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  phoneNumber: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @Column({ length: 255, nullable: true })\n  imageUrl: string;\n\n  @Column({ length: 255, enum: ['0', '1', '2', '3', '4', '5', '6', '7'], default: '0' })\n  userType: user_type;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n    nullable: true,\n    select: false\n  })\n  password: string;\n\n  toJSON() {\n    const { ...self } = this;\n    return self;\n  }\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class UserFillableFields {\n  email: string;\n  password: string;\n  role: number;\n  site_id: number[];\n  companyId: number;\n  firstName: string;\n  lastName: string;\n  title: string;\n  phoneNumber: string;\n  status: status_enum;\n  userType: user_type;\n  imageUrl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                softDeleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(payload: AddUserPayload, req: RequestExpress)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Post()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n                    Description: This method is used to create a new user in the application.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AddUserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type AddUserPayload.\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            RequestExpress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this parameter contains the header of the request api.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get(':id')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/user/user.controller.ts:99\n                \n            \n\n\n            \n                \n                    Description: This method is used to get a user information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request parameter expect a number value of user id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(params: ListUserPayload, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Get()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiHeader({name: 'x-site-id', description: 'Selected site ids array'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/user/user.controller.ts:81\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the users by get method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ListUserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteUser(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Delete(':id')@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/user/user.controller.ts:61\n                \n            \n\n\n            \n                \n                    Description: This method is used to soft delete a user in the application.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request parameter expect a number value of user id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(payload: UpdateUserPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(undefined)@Put()@ApiResponse({status: 200, description: 'Successful Response'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/public/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n                    Description: This method is used to upadte a user in the application.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UpdateUserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        it is a request body contains payload of type UpdateUserPayload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Get, Param, Post, Body, Delete, Query, Put, Req, Request } from '@nestjs/common';\nimport { ApiResponse, ApiTags, ApiBearerAuth, ApiHeader } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UsersService } from '.';\nimport { AddUserPayload } from './add-user.payload';\nimport { UpdateUserPayload } from './update-user.payload';\nimport { ListUserPayload } from './list-user.payload';\nimport { Request as RequestExpress } from 'express';\n\n@Controller('api/user')\n@ApiTags('User')\nexport class UserController {\n  constructor(\n    private readonly userService: UsersService,\n  ) { }\n\n  /**\n   * Description: This method is used to create a new user in the application.\n   * @description This method is used to create a new user in the application.\n   * @param payload it is a request body contains payload of type AddUserPayload.\n   * @param req this parameter contains the header of the request api.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Post()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async addUser(@Body() payload: AddUserPayload, @Req() req: RequestExpress): Promise {\n    type status_enum = '-1' | '0' | '1' | '99';\n    const status: status_enum = \"0\";\n    const pal = { ...payload, status: status };\n    const user = await this.userService.addUser(pal, req);\n    return user;\n  }\n\n  /**\n   * Description: This method is used to upadte a user in the application.\n   * @description This method is used to update a user in the application.\n   * @param payload it is a request body contains payload of type UpdateUserPayload.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Put()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async updateUser(@Body() payload: UpdateUserPayload): Promise {\n    const user = await this.userService.updateUser(payload);\n    return user;\n  }\n\n  /**\n   * Description: This method is used to soft delete a user in the application.\n   * @description This method is used to soft delete a user in the application.\n   * @param id it is a request parameter expect a number value of user id.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Delete(':id')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async softDeleteUser(@Param('id') id: number): Promise {\n    const user = await this.userService.softDeleteUser(id);\n    return user;\n\n  }\n\n  /**\n   * Description: This method is used to list the users by get method.\n   * @description This method is used to list the users by get method.\n   * @param payload it is a request query expects the payload of type ListUserPayload.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get()\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiHeader({\n    name: 'x-site-id',\n    description: 'Selected site ids array',\n  })\n  async getUsers(@Query() params: ListUserPayload, @Request() req): Promise {\n    let siteIdArr = req.user.site_id;\n    if (req.headers['x-site-id']) {\n      siteIdArr = JSON.parse(req.headers['x-site-id'].toString());\n    }\n    return this.userService.getUsers(params, siteIdArr);\n  }\n\n  /**\n   * Description: This method is used to get a user information.\n   * @description This method is used to get a user information.\n   * @param id it is a request parameter expect a number value of user id.\n   */\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard())\n  @Get(':id')\n  @ApiResponse({ status: 200, description: 'Successful Response' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async getUserById(@Param('id') id: number): Promise {\n    return this.userService.getUserById(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFillableFields.html":{"url":"classes/UserFillableFields.html","title":"class - UserFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyId\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                imageUrl\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                role\n                            \n                            \n                                site_id\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            site_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         user_type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user.entity.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\nimport { PasswordTransformer } from './password.transformer';\n/**\n * -1 = De-active\n * 0 = Pending/Default/\n * 1 = Active\n * 96 = \n * 97 = \n * 98 = \n * 99 = Soft delete (Deleted by admin)\n */\ntype status_enum = '-1' | '0' | '1' | '99';\ntype user_type = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7';\n\n@Entity({\n  name: 'users',\n})\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  role: number;\n\n  @Column(\"int\", { array: true, nullable: true })\n  site_id: number[];\n\n  @Column(\"int\", { nullable: true })\n  companyId: number;\n\n  @Column({ length: 255 })\n  email: string;\n\n  @Column({ length: 255 })\n  firstName: string;\n\n  @Column({ length: 255 })\n  lastName: string;\n\n  @Column({ length: 255, nullable: true })\n  title: string;\n\n  @Column({ length: 255, nullable: true })\n  phoneNumber: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '0' })\n  status: status_enum;\n\n  @Column({ length: 255, nullable: true })\n  imageUrl: string;\n\n  @Column({ length: 255, enum: ['0', '1', '2', '3', '4', '5', '6', '7'], default: '0' })\n  userType: user_type;\n\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n    nullable: true,\n    select: false\n  })\n  password: string;\n\n  toJSON() {\n    const { ...self } = this;\n    return self;\n  }\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class UserFillableFields {\n  email: string;\n  password: string;\n  role: number;\n  site_id: number[];\n  companyId: number;\n  firstName: string;\n  lastName: string;\n  title: string;\n  phoneNumber: string;\n  status: status_enum;\n  userType: user_type;\n  imageUrl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nConfigModule->UserModule\n\n\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\nUserModule -->\n\nResidentCompanyModule->UserModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUserModule -->\n\nJwtStrategy->UserModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/public/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            ResidentCompanyModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ResidentCompanyModule } from './../resident-company/resident-company.module';\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule, ConfigService } from '../../config';\nimport { User } from './user.entity';\nimport { UsersService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { Mail } from '../../../utils/Mail';\nimport { JwtStrategy } from '../auth/jwt.strategy';\nimport { UserToken } from './user-token.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, UserToken]),\n    ConfigModule,\n    ResidentCompanyModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: () => {\n        return {\n          secret: process.env.APPSETTING_JWT_SECRET_KEY,\n          signOptions: {\n            ...(process.env.APPSETTING_JWT_EXPIRATION_TIME\n              ? {\n                expiresIn: Number(process.env.APPSETTING_JWT_EXPIRATION_TIME),\n              }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [UserController],\n  exports: [UsersService],\n  providers: [UsersService, JwtStrategy, Mail],\n})\nexport class UserModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserToken.html":{"url":"classes/UserToken.html","title":"class - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/user-token.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                token\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         status_enum\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, enum: undefined, default: '1'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'user_tokens',\n})\nexport class UserToken {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  user_id: number;\n\n  @Column({ length: 255 })\n  token: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '1' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class UserTokenFillableFields {\n  token: number;\n  user_id: string;\n  status: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTokenFillableFields.html":{"url":"classes/UserTokenFillableFields.html","title":"class - UserTokenFillableFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTokenFillableFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/user-token.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                token\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/public/user/user-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n\ntype status_enum = '-1' | '0' | '1' | '99';\n\n@Entity({\n  name: 'user_tokens',\n})\nexport class UserToken {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({})\n  user_id: number;\n\n  @Column({ length: 255 })\n  token: string;\n\n  @Column({ length: 255, enum: ['-1', '0', '1', '99'], default: '1' })\n  status: status_enum;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: number;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: number;\n}\n\nexport class UserTokenFillableFields {\n  token: number;\n  user_id: string;\n  status: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/public/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getByEmail\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                setNewPassword\n                            \n                            \n                                    Async\n                                softDeleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                updateUserProfilePic\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, residentCompanyService: ResidentCompanyService, mail: Mail, userRepository: Repository, userTokenRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/public/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        residentCompanyService\n                                                  \n                                                        \n                                                                        ResidentCompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        Mail\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userTokenRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(payload: UserFillableFields, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:76\n                \n            \n\n\n            \n                \n                    Description: This method is used to create the new user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserFillableFields\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of type UserFillableFields\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of type Request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: UserFillableFields)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Description: This method is used to create the new user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserFillableFields\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of type UserFillableFields\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(payload: UserFillableFields, req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:306\n                \n            \n\n\n            \n                \n                    Description: This method is used to generate the token for the user to reset the password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                UserFillableFields\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of user info for reset passsword\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of Request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:279\n                \n            \n\n\n            \n                \n                    Description: This method is used to generate the token for the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of user info asnd new passsword\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:32\n                \n            \n\n\n            \n                \n                    Description: This method is used to get the user information by id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:42\n                \n            \n\n\n            \n                \n                    Description: This method is used to get the user information by email.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string user email\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:210\n                \n            \n\n\n            \n                \n                    Description: This method is used to get the user by id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(payload: ListUserPayload, siteIdArr?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:171\n                \n            \n\n\n            \n                \n                    Description: This method is used to list the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                ListUserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of type ListUserPayload\n\n                                    \n                                \n                                \n                                    siteIdArr\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        array of user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setNewPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:252\n                \n            \n\n\n            \n                \n                    Description: This method is used to set new password for the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of user info asnd new passsword\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteUser(id)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:154\n                \n            \n\n\n            \n                \n                    Description: This method is used to soft delete the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        object of affected rows\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:104\n                \n            \n\n\n            \n                \n                    Description: This method is used to update the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of user information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUserProfilePic\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserProfilePic(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:136\n                \n            \n\n\n            \n                \n                    Description: This method is used to update the user profile pic.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        object of user information with imageUrl\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/public/user/user.service.ts:231\n                \n            \n\n\n            \n                \n                    Description: This method is used to validate the user token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        user object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotAcceptableException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ListUserPayload } from './list-user.payload';\n\nimport { User, UserFillableFields } from './user.entity';\nimport { UserToken } from './user-token.entity';\nimport { Mail } from '../../../utils/Mail';\nimport { EMAIL } from '../../../constants/email';\nimport { Request } from 'express';\nimport { ResidentCompanyService } from '../resident-company/resident-company.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly residentCompanyService: ResidentCompanyService,\n    private readonly mail: Mail,\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(UserToken)\n    private readonly userTokenRepository: Repository,\n  ) { }\n\n  /**\n   * Description: This method is used to get the user information by id.\n   * @description This method is used to get the user information by id.\n   * @param id number user id\n   * @return user object\n   */\n  async get(id: number) {\n    return this.userRepository.findOne(id);\n  }\n\n  /**\n   * Description: This method is used to get the user information by email.\n   * @description This method is used to get the user information by email.\n   * @param email string user email\n   * @return user object\n   */\n  async getByEmail(email: string) {\n    return await this.userRepository\n      .createQueryBuilder('users')\n      .addSelect(\"users.email\")\n      .addSelect(\"users.password\")\n      .where('users.email = :email')\n      .setParameter('email', email)\n      .getOne();\n  }\n\n  /**\n   * Description: This method is used to create the new user.\n   * @description This method is used to create the new user.\n   * @param payload object of type UserFillableFields\n   * @return user object\n   */\n  async create(payload: UserFillableFields) {\n    const user = await this.getByEmail(payload.email);\n\n    if (user) {\n      throw new NotAcceptableException(\n        'User with provided email already created.',\n      );\n    }\n    return await this.userRepository.save(this.userRepository.create(payload));\n  }\n\n  /**\n   * Description: This method is used to create the new user.\n   * @description This method is used to create the new user.\n   * @param payload object of type UserFillableFields\n   * @param req object of type Request\n   * @return user object\n   */\n  async addUser(payload: UserFillableFields, req: Request) {\n    const user = await this.getByEmail(payload.email);\n\n    if (user) {\n      throw new NotAcceptableException(\n        'User with provided email already created.',\n      );\n    }\n    const newUser = await this.userRepository.create(payload);\n    const savedUser = await this.userRepository.save(newUser);\n    const userInformation = await this.generateToken(savedUser);\n    const userInfo = {\n      token: userInformation.token,\n      userName: savedUser.firstName,\n      origin: req.headers['origin'],\n    };\n    let tenant = { tenantEmail: payload.email };\n    this.mail.sendEmail(tenant, EMAIL.SUBJECT_INVITE_USER, 'Invite', userInfo);\n\n    return savedUser;\n  }\n\n  /**\n   * Description: This method is used to update the user.\n   * @description This method is used to update the user.\n   * @param payload object of user information\n   * @return user object\n   */\n  async updateUser(payload) {\n    const user = await this.get(payload.id);\n    if (user) {\n      user.firstName = payload.firstName;\n      user.lastName = payload.lastName;\n      user.title = payload.title;\n      user.phoneNumber = payload.phoneNumber;\n      user.companyId = (payload.companyId) ? payload.companyId : user.companyId;\n      user.userType = payload.userType;\n      if (\n        payload.password &&\n        payload.password !== '' &&\n        payload.password != null\n      ) {\n        user.password = payload.password;\n      } else {\n        delete user.password;\n      }\n      await this.userRepository.update(user.id, user);\n      if (user.password) delete user.password;\n      return await this.getUserById(user.id);\n    } else {\n      throw new NotAcceptableException('User with provided id not available.');\n    }\n  }\n\n  /**\n   * Description: This method is used to update the user profile pic.\n   * @description This method is used to update the user profile pic.\n   * @param payload object of user information with imageUrl\n   * @return user object\n   */\n  async updateUserProfilePic(payload) {\n    const user = await this.get(payload.id);\n    if (user) {\n      delete user.password;\n      user.imageUrl = payload.imageUrl;\n      await this.userRepository.update(user.id, user);\n      return user;\n    } else {\n      throw new NotAcceptableException('User with provided id not available.');\n    }\n  }\n\n  /**\n   * Description: This method is used to soft delete the user.\n   * @description This method is used to soft delete the user.\n   * @param id number of user id\n   * @return object of affected rows\n   */\n  async softDeleteUser(id) {\n    const user = await this.get(id);\n\n    if (user) {\n      user.status = '99';\n      return await this.userRepository.save(user);\n    } else {\n      throw new NotAcceptableException('User with provided id not available.');\n    }\n  }\n\n  /**\n   * Description: This method is used to list the user.\n   * @description This method is used to list the user.\n   * @param payload object of type ListUserPayload\n   * @return array of user object\n   */\n  async getUsers(payload: ListUserPayload, siteIdArr?: number[]) {\n    let userQuery = await this.userRepository.createQueryBuilder(\"users\")\n      .where(\"users.status IN (:...status)\", { status: [1, 0] })\n      .andWhere(\"users.site_id && ARRAY[:...siteIdArr]::int[]\", { siteIdArr: siteIdArr });\n    if (payload.role || payload.role == 0) {\n      userQuery.andWhere(\"users.role = :role\", { role: payload.role });\n    }\n    if (payload.q && payload.q != '') {\n      userQuery.andWhere(\"(users.firstName LIKE :name OR users.lastName LIKE :name) \", { name: `%${payload.q}%` });\n    }\n\n    if (payload.pagination) {\n      let skip = 0;\n      let take = 10;\n      if (payload.limit) {\n        take = payload.limit;\n        if (payload.page) {\n          skip = payload.page * payload.limit;\n        }\n      }\n      userQuery.skip(skip).take(take)\n    }\n    userQuery.addOrderBy(\"users.firstName\", \"ASC\");\n    userQuery.addOrderBy(\"users.lastName\", \"ASC\");\n    return await userQuery.getMany();\n    // return await this.userRepository.find({\n    //   where: search,\n    //   skip,\n    //   take,\n    // });\n\n  }\n\n  /**\n   * Description: This method is used to get the user by id.\n   * @description This method is used to get the user by id.\n   * @param id number of user id\n   * @return user object\n   */\n  async getUserById(id) {\n    const user: any = await this.get(id);\n    if (user) {\n      if (user.companyId) {\n        const company = await this.residentCompanyService.getResidentCompany(\n          user.companyId,\n        );\n        if (company) user.company = company;\n      }\n      return user;\n    } else {\n      throw new NotAcceptableException('User with provided id not available.');\n    }\n  }\n\n  /**\n   * Description: This method is used to validate the user token.\n   * @description This method is used to validate the user token.\n   * @param token string\n   * @return user object\n   */\n  async validateToken(token: string) {\n    const tokenData = await this.userTokenRepository.findOne({\n      where: [{ token: token, status: 1 }],\n    });\n    if (tokenData) {\n      const user = await this.get(tokenData.user_id);\n      if (user.status == '1' || user.status == '0') return user;\n      else {\n        throw new NotAcceptableException('Token is invalid.');\n      }\n    } else {\n      throw new NotAcceptableException('Token is invalid.');\n    }\n  }\n\n  /**\n   * Description: This method is used to set new password for the user.\n   * @description This method is used to set new password for the user.\n   * @param payload object of user info asnd new passsword\n   * @return user object\n   */\n  async setNewPassword(payload) {\n    const tokenData = await this.userTokenRepository.findOne({\n      where: [{ token: payload.token, status: 1 }],\n    });\n    if (tokenData) {\n      const user = await this.get(tokenData.user_id);\n      if (user.status == '1' || user.status == '0') {\n        user.password = payload.password;\n        user.status = '1';\n        const newUser = await this.userRepository.save(user);\n        tokenData.status = '99';\n        this.userTokenRepository.save(tokenData);\n        return newUser;\n      } else {\n        throw new NotAcceptableException('Token is invalid.');\n      }\n    } else {\n      throw new NotAcceptableException('Token is invalid.');\n    }\n  }\n\n  /**\n   * Description: This method is used to generate the token for the user.\n   * @description This method is used to generate the token for the user.\n   * @param user object of user info asnd new passsword\n   * @return user object\n   */\n  async generateToken(user) {\n    let token = this.jwtService.sign({\n      id: user.id,\n      time: new Date().getTime(),\n    });\n    const tokenData = { user_id: user.id, token: token };\n    const tokenChk = await this.userTokenRepository.find({\n      where: [{ user_id: user.id, status: '1' }],\n    });\n    if (tokenChk) {\n      await this.userTokenRepository.update(\n        { user_id: user.id },\n        { status: '99' },\n      );\n    }\n    return await this.userTokenRepository.save(\n      this.userTokenRepository.create(tokenData),\n    );\n  }\n\n  /**\n   * Description: This method is used to generate the token for the user to reset the password.\n   * @description This method is used to generate the token for the user to reset the password.\n   * @param payload object of user info for reset passsword\n   * @param req object of Request\n   * @return user object\n   */\n  async forgotPassword(payload: UserFillableFields, req: Request) {\n    const user = await this.getByEmail(payload.email);\n    if (user) {\n      const userInformation = await this.generateToken(user);\n      const userInfo = {\n        token: userInformation.token,\n        userName: user.firstName,\n        origin: req.headers['origin'],\n      };\n      let tenant = { tenantEmail: payload.email, role: payload.role };\n      this.mail.sendEmail(\n        tenant,\n        EMAIL.SUBJECT_FORGOT_PASSWORD,\n        'forgotMail',\n        userInfo,\n      );\n      return true;\n    } else {\n      throw new NotAcceptableException(\n        'User with provided email already created.',\n      );\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/constants/company-status.ts\n            \n            variable\n            COMPANY_STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/email.ts\n            \n            variable\n            EMAIL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/file-type.ts\n            \n            variable\n            FILE_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/privileges-resident.ts\n            \n            variable\n            RESIDENT_ACCESSLEVELS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/privileges-site-admin.ts\n            \n            variable\n            SITE_ADMIN_ACCESSLEVELS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/privileges-sponsor.ts\n            \n            variable\n            SPONSOR_ACCESSLEVELS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/privileges-super-admin.ts\n            \n            variable\n            SUPER_ADMIN_ACCESSLEVELS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/user-type.ts\n            \n            variable\n            USER_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.hmr.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.hmr.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1611484925515-CreateUsersTable.ts\n            \n            class\n            CreateUsersTable1611484925515\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/common/model/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/common/transformer/abstract-transform.pipe.ts\n            \n            class\n            AbstractTransformPipe\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/common/transformer/trim-strings.pipe.ts\n            \n            class\n            TrimStringsPipe\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/common/validator/exists.validator.ts\n            \n            injectable\n            ExistsValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/common/validator/exists.validator.ts\n            \n            interface\n            ExistsValidationArguments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/common/validator/exists.validator.ts\n            \n            function\n            Exists\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/validator/greater-than-equals-to.validator.ts\n            \n            function\n            GreaterThanEqualsTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/validator/less-than-equals-to.validator.ts\n            \n            function\n            LessThanEqualsTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/validator/same-as.validator.ts\n            \n            function\n            SameAs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/common/validator/unique.validator.ts\n            \n            injectable\n            UniqueValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/common/validator/unique.validator.ts\n            \n            interface\n            UniqueValidationArguments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/common/validator/unique.validator.ts\n            \n            function\n            Unique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/modules/main/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/modules/main/app.module.ts\n            \n            variable\n            appRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/main/app.service.ts\n            \n            injectable\n            AppService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/public/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/modules/public/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/modules/public/auth/auth.service.ts\n            \n            variable\n            appRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/auth/auth.service.ts\n            \n            variable\n            migrationData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/auth/forgot-password.payload.ts\n            \n            class\n            ForgotPasswordPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/public/auth/jwt-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/auth/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/auth/password.payload.ts\n            \n            class\n            PasswordPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/public/auth/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/public/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/public/file/file.controller.ts\n            \n            variable\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/file/upload-file.payload.ts\n            \n            class\n            UploadPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/public/master/biolabs-source.entity.ts\n            \n            class\n            BiolabsSource\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/master/biolabs-source.entity.ts\n            \n            class\n            BiolabsSourceFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/master/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/master/category.entity.ts\n            \n            class\n            CategoryFillableFields\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/public/master/funding.entity.ts\n            \n            class\n            Funding\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/master/funding.entity.ts\n            \n            class\n            FundingFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/master/master.controller.ts\n            \n            controller\n            MasterController\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/modules/public/master/master.payload.ts\n            \n            class\n            MasterPayload\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/public/master/master.service.ts\n            \n            injectable\n            MasterService\n            \n                92 %\n                (25/27)\n            \n        \n        \n            \n                \n                src/modules/public/master/master.service.ts\n            \n            variable\n            appRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/master/master.service.ts\n            \n            variable\n            migrationData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/master/modality.entity.ts\n            \n            class\n            Modality\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/master/modality.entity.ts\n            \n            class\n            ModalityFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/master/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/master/role.entity.ts\n            \n            class\n            RoleFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/master/site.entity.ts\n            \n            class\n            Site\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/master/site.entity.ts\n            \n            class\n            SiteFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/master/technology-stage.entity.ts\n            \n            class\n            TechnologyStage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/master/technology-stage.entity.ts\n            \n            class\n            TechnologyStageFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/order/dto/add-order.payload.ts\n            \n            class\n            AddOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/public/order/dto/order-product.create.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/public/order/dto/order-product.update.dto.ts\n            \n            class\n            UpdateOrderProductDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/invoice.entity.ts\n            \n            class\n            Invoice\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/invoice.entity.ts\n            \n            class\n            InvoiceFillableFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/order-product.entity.ts\n            \n            class\n            OrderProduct\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/order-product.entity.ts\n            \n            class\n            OrderProductFillableFields\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/order.entity.ts\n            \n            class\n            OrderFillableFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/order/model/product.entity.ts\n            \n            class\n            ProductFillableFields\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/public/order/order.controller.ts\n            \n            controller\n            OrderProductController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/modules/public/order/order.service.ts\n            \n            injectable\n            OrderProductService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/add-resident-company.payload.ts\n            \n            class\n            AddResidentCompanyPayload\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/list-resident-company.payload.ts\n            \n            class\n            ListResidentCompanyPayload\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-advisory.entity.ts\n            \n            class\n            ResidentCompanyAdvisory\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-advisory.entity.ts\n            \n            class\n            ResidentCompanyAdvisoryFillableFields\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-documents.entity.ts\n            \n            class\n            ResidentCompanyDocuments\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-documents.entity.ts\n            \n            class\n            ResidentCompanyDocumentsFillableFields\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-management.entity.ts\n            \n            class\n            ResidentCompanyManagement\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-management.entity.ts\n            \n            class\n            ResidentCompanyManagementFillableFields\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-technical.entity.ts\n            \n            class\n            ResidentCompanyTechnical\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/rc-technical.entity.ts\n            \n            class\n            ResidentCompanyTechnicalFillableFields\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/resident-company-history.entity.ts\n            \n            class\n            ResidentCompanyHistory\n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/resident-company-history.entity.ts\n            \n            class\n            ResidentCompanyHistoryFillableFields\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/resident-company.controller.ts\n            \n            controller\n            ResidentCompanyController\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/resident-company.entity.ts\n            \n            class\n            ResidentCompany\n            \n                0 %\n                (0/58)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/resident-company.entity.ts\n            \n            class\n            ResidentCompanyFillableFields\n            \n                0 %\n                (0/55)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/resident-company.service.ts\n            \n            injectable\n            ResidentCompanyService\n            \n                93 %\n                (30/32)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/search-resident-company.payload.ts\n            \n            class\n            SearchResidentCompanyPayload\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/update-resident-company-status.payload.ts\n            \n            class\n            UpdateResidentCompanyStatusPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/public/resident-company/update-resident-company.payload.ts\n            \n            class\n            UpdateResidentCompanyPayload\n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                src/modules/public/sponsor/dto/create-sponsor.dto.ts\n            \n            class\n            CreateSponsorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/sponsor/dto/update-sponsor.dto.ts\n            \n            class\n            UpdateSponsorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/sponsor/entities/sponsor.entity.ts\n            \n            class\n            Sponsor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/sponsor/sponsor.controller.ts\n            \n            controller\n            SponsorController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/modules/public/sponsor/sponsor.service.ts\n            \n            injectable\n            SponsorService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/public/user/add-user.payload.ts\n            \n            class\n            AddUserPayload\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/public/user/delete-user.payload.ts\n            \n            class\n            DeleteUserPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/public/user/list-user.payload.ts\n            \n            class\n            ListUserPayload\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/public/user/password.transformer.ts\n            \n            class\n            PasswordTransformer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/public/user/update-user.payload.ts\n            \n            class\n            UpdateUserPayload\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/public/user/user-token.entity.ts\n            \n            class\n            UserToken\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/public/user/user-token.entity.ts\n            \n            class\n            UserTokenFillableFields\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/public/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/modules/public/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/modules/public/user/user.entity.ts\n            \n            class\n            UserFillableFields\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/public/user/user.service.ts\n            \n            injectable\n            UsersService\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/modules/scheduler/scheduler.service.ts\n            \n            injectable\n            SchedulerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/constants.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Hash.ts\n            \n            class\n            Hash\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/utils/Mail.ts\n            \n            class\n            Mail\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/utils/Mail.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Mail.ts\n            \n            variable\n            dotenv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Mail.ts\n            \n            variable\n            qs\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @azure/storage-blob : ^12.5.0\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^7.6.5\n        \n            @nestjs/core : ^7.6.5\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.5\n        \n            @nestjs/schedule : ^0.4.3\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.7.12\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @types/bcrypt : ^3.0.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.2\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^8.2.0\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.30\n        \n            typescript : ^4.1.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HTTP_CODES   (src/.../httpcode.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/httpcode.ts\n    \n        \n            \n                \n                    \n                        \n                        HTTP_CODES\n                    \n                \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : 201\n                            \n                        \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : 400\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 NOT_fOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 NOT_ACCEPTABLE\n                            \n                        \n                        \n                            \n                                Value : 406\n                            \n                        \n                        \n                            \n                                 INTERNAL_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.hmr.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            Exists   (src/.../exists.validator.ts)\n                        \n                        \n                            GreaterThanEqualsTo   (src/.../greater-than-equals-to.validator.ts)\n                        \n                        \n                            LessThanEqualsTo   (src/.../less-than-equals-to.validator.ts)\n                        \n                        \n                            SameAs   (src/.../same-as.validator.ts)\n                        \n                        \n                            Unique   (src/.../unique.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.hmr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/modules/common/validator/exists.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Exists\n                        \n                        \n                    \n                \n            \n            \n                \nExists(constraints, validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constraints\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/common/validator/greater-than-equals-to.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            GreaterThanEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nGreaterThanEqualsTo(property, validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/common/validator/less-than-equals-to.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            LessThanEqualsTo\n                        \n                        \n                    \n                \n            \n            \n                \nLessThanEqualsTo(property, validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/common/validator/same-as.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            SameAs\n                        \n                        \n                    \n                \n            \n            \n                \nSameAs(property, validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/common/validator/unique.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Unique\n                        \n                        \n                    \n                \n            \n            \n                \nUnique(constraints, validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constraints\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBioLabs\n\nDescription\nBioLabs API made with ❤️ by 💡BioLabs💡.\nStart Guide\nOutside Docker containers\n\nCreate .env file cp .env.example .env and replace existing env variables\n(mysql/mariadb/postgres connection params)\nInstall dependencies npm\nStart the app npm start (app will be exposed through the port 3000)\n\nInside Docker containers\nJust run already prepared bash script:\n$ ./initIt will setup the project for you (starting docker-compose stack, running migrations).\nThe NestJS app running in dev mode will be exposed on http://localhost (port 80)\nFor IDE autocompletion to work, run yarn on the host machine.\nTypeORM integrated\nTypeORM gives you possibility to use next db types:\nmysql, postgres, mariadb, sqlite, etc. Please look at docs for more details.\nThe docker-compose template uses mariadb.\nMigrations\nIf you don't work on a production-ready project you can always change DB_SYNC env variable to true so you can play with NestJS without the need to write actual migrations.\nsynchronize: true shouldn't be used in production - otherwise, you can lose production data.\nCreate Migration\nCreating new migration is relatively easy and you can use typeorm CLI for that. You can run this command to create new migration:\n$ docker exec -it nest yarn migration:create -n {CreateTableUsers}Migration file will be placed under src/migrations. For more details check the existing 1611484925515-CreateUsersTable.ts\nRun Migrations\n$ docker exec -it nest yarn migration:runRevert Migrations\n$ docker exec -it nest yarn migration:revertTest\n# unit tests\n$ docker exec -it nest yarn test\n\n# e2e tests\n$ docker exec -it nest yarn test:e2e\n\n# test coverage\n$ docker exec -it nest yarn test:covEnvironment Configuration\nIntegrated Configuration Module so you can just inject ConfigService\nand read all environment variables from .env file, which is created automatically by the init script from .env.example.\nSwagger\nRESTful APIs you can describe with already integrated Swagger.\nTo see all available endpoints visit http://localhost/api/docs\nAuthentication - JWT\nAlready preconfigured JWT authentication.\nIt's suggested to change current password hashing to something more secure.\nYou can start use already working implementation of Login and Registration\nendpoints, just take a look at http://localhost/api/docs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Vivify Ideas\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResidentCompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SponsorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_MasterModule\n\n\n\ncluster_MasterModule_exports\n\n\n\ncluster_MasterModule_providers\n\n\n\ncluster_OrderProductModule\n\n\n\ncluster_OrderProductModule_exports\n\n\n\ncluster_OrderProductModule_providers\n\n\n\ncluster_ResidentCompanyModule\n\n\n\ncluster_ResidentCompanyModule_exports\n\n\n\ncluster_ResidentCompanyModule_providers\n\n\n\ncluster_SponsorModule\n\n\n\ncluster_SponsorModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nOrderProductModule\n\nOrderProductModule\n\nOrderProductModule -->\n\nConfigModule->OrderProductModule\n\n\n\n\n\nResidentCompanyModule\n\nResidentCompanyModule\n\nResidentCompanyModule -->\n\nConfigModule->ResidentCompanyModule\n\n\n\n\n\nSponsorModule\n\nSponsorModule\n\nSponsorModule -->\n\nConfigModule->SponsorModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nConfigModule->UserModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nMasterModule\n\nMasterModule\n\nAuthModule -->\n\nMasterModule->AuthModule\n\n\n\nAppModule -->\n\nMasterModule->AppModule\n\n\n\n\n\nMasterService \n\nMasterService \n\nMasterService  -->\n\nMasterModule->MasterService \n\n\n\nAppModule -->\n\nOrderProductModule->AppModule\n\n\n\n\n\nOrderProductService \n\nOrderProductService \n\nOrderProductService  -->\n\nOrderProductModule->OrderProductService \n\n\n\nAuthModule -->\n\nResidentCompanyModule->AuthModule\n\n\n\nFileModule -->\n\nResidentCompanyModule->FileModule\n\n\n\nSponsorModule -->\n\nResidentCompanyModule->SponsorModule\n\n\n\nUserModule -->\n\nResidentCompanyModule->UserModule\n\n\n\nAppModule -->\n\nResidentCompanyModule->AppModule\n\n\n\n\n\nResidentCompanyService \n\nResidentCompanyService \n\nResidentCompanyService  -->\n\nResidentCompanyModule->ResidentCompanyService \n\n\n\nAppModule -->\n\nSponsorModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nFileModule -->\n\nUserModule->FileModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nUserModule -->\n\nJwtStrategy->UserModule\n\n\n\n\n\nExistsValidator\n\nExistsValidator\n\nCommonModule -->\n\nExistsValidator->CommonModule\n\n\n\n\n\nUniqueValidator\n\nUniqueValidator\n\nCommonModule -->\n\nUniqueValidator->CommonModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nMasterService\n\nMasterService\n\nMasterModule -->\n\nMasterService->MasterModule\n\n\n\n\n\nOrderProductService\n\nOrderProductService\n\nOrderProductModule -->\n\nOrderProductService->OrderProductModule\n\n\n\n\n\nResidentCompanyService\n\nResidentCompanyService\n\nResidentCompanyModule -->\n\nResidentCompanyService->ResidentCompanyModule\n\n\n\n\n\nSponsorService\n\nSponsorService\n\nSponsorModule -->\n\nSponsorService->SponsorModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    67 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            company_status   (src/.../list-resident-company.payload.ts)\n                        \n                        \n                            company_status   (src/.../resident-company-history.entity.ts)\n                        \n                        \n                            company_status   (src/.../resident-company.entity.ts)\n                        \n                        \n                            company_status   (src/.../search-resident-company.payload.ts)\n                        \n                        \n                            company_status   (src/.../update-resident-company-status.payload.ts)\n                        \n                        \n                            ExistsValidationConstraints   (src/.../exists.validator.ts)\n                        \n                        \n                            FILE_TYPE   (src/.../upload-file.payload.ts)\n                        \n                        \n                            sortOrderType   (src/.../search-resident-company.payload.ts)\n                        \n                        \n                            status_enum   (src/.../biolabs-source.entity.ts)\n                        \n                        \n                            status_enum   (src/.../category.entity.ts)\n                        \n                        \n                            status_enum   (src/.../funding.entity.ts)\n                        \n                        \n                            status_enum   (src/.../modality.entity.ts)\n                        \n                        \n                            status_enum   (src/.../master.service.ts)\n                        \n                        \n                            status_enum   (src/.../site.entity.ts)\n                        \n                        \n                            status_enum   (src/.../technology-stage.entity.ts)\n                        \n                        \n                            status_enum   (src/.../role.entity.ts)\n                        \n                        \n                            status_enum   (src/.../rc-advisory.entity.ts)\n                        \n                        \n                            status_enum   (src/.../rc-technical.entity.ts)\n                        \n                        \n                            status_enum   (src/.../rc-documents.entity.ts)\n                        \n                        \n                            status_enum   (src/.../rc-management.entity.ts)\n                        \n                        \n                            status_enum   (src/.../resident-company-history.entity.ts)\n                        \n                        \n                            status_enum   (src/.../resident-company.entity.ts)\n                        \n                        \n                            status_enum   (src/.../user-token.entity.ts)\n                        \n                        \n                            status_enum   (src/.../user.entity.ts)\n                        \n                        \n                            UniqueValidationConstraints   (src/.../unique.validator.ts)\n                        \n                        \n                            user_type   (src/.../add-user.payload.ts)\n                        \n                        \n                            user_type   (src/.../update-user.payload.ts)\n                        \n                        \n                            user_type   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/public/resident-company/list-resident-company.payload.ts\n    \n    \n        \n            \n                \n                    \n                    company_status\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/resident-company-history.entity.ts\n    \n    \n        \n            \n                \n                    \n                    company_status\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = Pending/Default/\n1 = Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/resident-company.entity.ts\n    \n    \n        \n            \n                \n                    \n                    company_status\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = \n1 = Default/ Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/search-resident-company.payload.ts\n    \n    \n        \n            \n                \n                    \n                    company_status\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    sortOrderType\n                \n            \n            \n                \n                        \"ASC\" | \"DESC\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/update-resident-company-status.payload.ts\n    \n    \n        \n            \n                \n                    \n                    company_status\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\"\n\n                \n            \n        \n    \n    src/modules/common/validator/exists.validator.ts\n    \n    \n        \n            \n                \n                    \n                    ExistsValidationConstraints\n                \n            \n            \n                \n                        [, ]\n\n                \n            \n        \n    \n    src/modules/public/file/upload-file.payload.ts\n    \n    \n        \n            \n                \n                    \n                    FILE_TYPE\n                \n            \n            \n                \n                        \"user\" | \"logo\" | \"pitchdeck\"\n\n                \n            \n        \n    \n    src/modules/public/master/biolabs-source.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/category.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/funding.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/modality.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/master.service.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/site.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/technology-stage.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/master/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/rc-advisory.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = Pending/Default/\n1 = Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/rc-technical.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = Pending/Default/\n1 = Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/rc-documents.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = Pending/Default/\n1 = Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/resident-company/rc-management.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = Pending/Default/\n1 = Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/user/user-token.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    src/modules/public/user/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    status_enum\n                \n            \n            \n                \n                    -1 = De-active\n0 = Pending/Default/\n1 = Active\n96 = \n97 = \n98 = \n99 = Soft delete (Deleted by admin)\n\n                \n            \n            \n                \n                        \"-1\" | \"0\" | \"1\" | \"99\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    user_type\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\"\n\n                \n            \n        \n    \n    src/modules/common/validator/unique.validator.ts\n    \n    \n        \n            \n                \n                    \n                    UniqueValidationConstraints\n                \n            \n            \n                \n                        [, ]\n\n                \n            \n        \n    \n    src/modules/public/user/add-user.payload.ts\n    \n    \n        \n            \n                \n                    \n                    user_type\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\"\n\n                \n            \n        \n    \n    src/modules/public/user/update-user.payload.ts\n    \n    \n        \n            \n                \n                    \n                    user_type\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiFile   (src/.../file.controller.ts)\n                        \n                        \n                            appRoot   (src/.../app.module.ts)\n                        \n                        \n                            appRoot   (src/.../auth.service.ts)\n                        \n                        \n                            appRoot   (src/.../master.service.ts)\n                        \n                        \n                            axios   (src/.../Mail.ts)\n                        \n                        \n                            COMPANY_STATUS   (src/.../company-status.ts)\n                        \n                        \n                            dotenv   (src/.../Mail.ts)\n                        \n                        \n                            EMAIL   (src/.../email.ts)\n                        \n                        \n                            FILE_TYPE   (src/.../file-type.ts)\n                        \n                        \n                            migrationData   (src/.../auth.service.ts)\n                        \n                        \n                            migrationData   (src/.../master.service.ts)\n                        \n                        \n                            module   (src/.../main.hmr.ts)\n                        \n                        \n                            qs   (src/.../Mail.ts)\n                        \n                        \n                            RESIDENT_ACCESSLEVELS   (src/.../privileges-resident.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                        \n                            SITE_ADMIN_ACCESSLEVELS   (src/.../privileges-site-admin.ts)\n                        \n                        \n                            SPONSOR_ACCESSLEVELS   (src/.../privileges-sponsor.ts)\n                        \n                        \n                            SUPER_ADMIN_ACCESSLEVELS   (src/.../privileges-super-admin.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../constants.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../constants.ts)\n                        \n                        \n                            USER_TYPE   (src/.../user-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/public/file/file.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fileName = 'file'): MethodDecorator => (\n  target: any,\n  propertyKey: string,\n  descriptor: PropertyDescriptor,\n) => {\n  ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        [fileName]: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })(target, propertyKey, descriptor);\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/main/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('app-root-path')\n                        \n                    \n\n\n            \n        \n\n    src/modules/public/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('app-root-path')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            migrationData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : JSON.parse(require(\"fs\").readFileSync(appRoot.path + \"/migration.json\"))\n                        \n                    \n\n\n            \n        \n\n    src/modules/public/master/master.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('app-root-path')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            migrationData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : JSON.parse(require(\"fs\").readFileSync(appRoot.path + \"/migration.json\"))\n                        \n                    \n\n\n            \n        \n\n    src/utils/Mail.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            axios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('axios')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dotenv\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('dotenv')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            qs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('qs')\n                        \n                    \n\n\n            \n        \n\n    src/constants/company-status.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPANY_STATUS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { id: 0, name: 'Applied' },\n  { id: 1, name: 'Accepted' },\n  { id: 2, name: 'On Hold' },\n  { id: 3, name: 'Rejected' },\n  { id: 4, name: 'Graduated' }\n]\n                        \n                    \n\n\n            \n        \n\n    src/constants/email.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EMAIL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  SUBJECT_NEW_REGISTRATION: '',\n  SUBJECT_FORGOT_PASSWORD: 'Biolabs | Password Reset',\n  SUBJECT_INVITE_USER: 'Please verify your email address | Biolabs',\n  SUBJECT_WELCOME: '',\n  CONTENT_TYPE: 'HTML',\n  CC_EMAIL_USER: '',\n  EMAIL_CONFIRM_URL: '/reset-password?token='\n}\n                        \n                    \n\n\n            \n        \n\n    src/constants/file-type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FILE_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'user',\n  'logo',\n  'pitchdeck'\n]\n                        \n                    \n\n\n            \n        \n\n    src/main.hmr.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/constants/privileges-resident.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RESIDENT_ACCESSLEVELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  id: 4,\n  type: 'resident',\n  name: 'RESIDENT',\n  action: true,\n  permissions: {\n    applications: {\n      name: 'Applications',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    'sponsor-view': {\n      name: 'BioLabs Network',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    'application-form': {\n      name: 'Application Form',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    user: {\n      name: 'Manage Users',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    sites: {\n      name: 'Sites',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    directory: {\n      name: 'Directory',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    configurations: {\n      name: 'Configurations',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n      child: {\n        'application-form': {\n          name: 'Application Form',\n          action: false,\n          create: false,\n          view: false,\n          update: false,\n          delete: false,\n        },\n        'item-cost': {\n          name: 'Item Cost',\n          action: false,\n          create: false,\n          view: false,\n          update: false,\n          delete: false,\n        },\n      },\n    },\n    profile: {\n      name: 'My Profile',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'resident-companies': {\n      name: 'Resident Companies',\n      action: false,\n      create: false,\n      view: true,\n      update: false,\n      delete: false,\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/swagger/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setupSwagger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication) => {\n  const options = new DocumentBuilder()\n    .setTitle(SWAGGER_API_NAME)\n    .setDescription(SWAGGER_API_DESCRIPTION)\n    .setVersion(SWAGGER_API_CURRENT_VERSION)\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(SWAGGER_API_ROOT, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    src/constants/privileges-site-admin.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SITE_ADMIN_ACCESSLEVELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  id: 2,\n  type: 'siteadmin',\n  name: 'SITE ADMIN',\n  action: true,\n  permissions: {\n    applications: {\n      name: 'Applications',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'sponsor-view': {\n      name: 'Sponsor View',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'application-form': {\n      name: 'Application Form',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    user: {\n      name: 'Manage Users',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    sites: {\n      name: 'Sites',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    directory: {\n      name: 'Directory',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    configurations: {\n      name: 'Configurations',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n      child: {\n        'application-form': {\n          name: 'Application Form',\n          action: false,\n          create: false,\n          view: false,\n          update: false,\n          delete: false,\n        },\n        'item-cost': {\n          name: 'Item Cost',\n          action: true,\n          create: true,\n          view: true,\n          update: true,\n          delete: true,\n        },\n      },\n    },\n    profile: {\n      name: 'My Profile',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'resident-companies': {\n      name: 'Resident Companies',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/constants/privileges-sponsor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SPONSOR_ACCESSLEVELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  id: 3,\n  type: 'sponsor',\n  name: 'SPONSOR',\n  action: false,\n  permissions: {\n    applications: {\n      name: 'Applications',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    'sponsor-view': {\n      name: 'BioLabs Network',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'application-form': {\n      name: 'Application Form',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    user: {\n      name: 'Manage Users',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    sites: {\n      name: 'Sites',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    directory: {\n      name: 'Directory',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    configurations: {\n      name: 'Configurations',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n      child: {\n        'application-form': {\n          name: 'Application Form',\n          action: false,\n          create: false,\n          view: false,\n          update: false,\n          delete: false,\n        },\n        'item-cost': {\n          name: 'Item Cost',\n          action: false,\n          create: false,\n          view: false,\n          update: false,\n          delete: false,\n        },\n      },\n    },\n    profile: {\n      name: 'My Profile',\n      action: false,\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n    'resident-companies': {\n      name: 'Resident Companies',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/constants/privileges-super-admin.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SUPER_ADMIN_ACCESSLEVELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  id: 1,\n  type: 'superadmin',\n  name: 'SUPER ADMIN',\n  action: true,\n  permissions: {\n    applications: {\n      name: 'Applications',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'sponsor-view': {\n      name: 'Sponsor View',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'application-form': {\n      name: 'Application Form',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    user: {\n      name: 'Manage Users',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    sites: {\n      name: 'Sites',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    directory: {\n      name: 'Directory',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    configurations: {\n      name: 'Configurations',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n      child: {\n        'application-form': {\n          name: 'Application Form',\n          action: true,\n          create: true,\n          view: true,\n          update: true,\n          delete: true,\n        },\n        'item-cost': {\n          name: 'Item Cost',\n          action: true,\n          create: true,\n          view: true,\n          update: true,\n          delete: true,\n        },\n      },\n    },\n    profile: {\n      name: 'My Profile',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n    'resident-companies': {\n      name: 'Resident Companies',\n      action: true,\n      create: true,\n      view: true,\n      update: true,\n      delete: true,\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/swagger/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API Description'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Simple API'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/docs'\n                        \n                    \n\n\n            \n        \n\n    src/constants/user-type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            USER_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { id: 0, name: 'Employee' },\n  { id: 1, name: 'Scientist' },\n  { id: 2, name: 'Lab Technician' },\n  { id: 3, name: 'Academic Advisor' },\n  { id: 4, name: 'Investor' },\n  { id: 5, name: 'Executive' },\n  { id: 6, name: 'Sponsor' },\n  { id: 7, name: 'Founder' }\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
